[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js":"48","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js":"49","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js":"50","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js":"51","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointment.js":"52","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js":"53","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js":"54","D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js":"55","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js":"56","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js":"57","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js":"58","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js":"59","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js":"60","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js":"61","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js":"62","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js":"63","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js":"64","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js":"65","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\NewVisit.js":"66","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js":"67","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js":"68","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js":"69","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js":"70","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js":"71","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js":"72","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js":"73","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js":"74","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js":"75","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js":"76","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js":"77","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js":"78","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js":"79","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js":"80","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js":"81","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js":"82","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js":"83","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js":"84","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js":"85","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js":"86","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js":"87","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js":"88","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js":"89","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js":"90","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js":"91","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js":"92","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js":"93","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js":"94","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js":"95","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js":"96","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js":"97","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js":"98","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js":"99","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js":"100","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js":"101","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js":"102"},{"size":260,"mtime":1651833409357,"results":"103","hashOfConfig":"104"},{"size":4032,"mtime":1661248471124,"results":"105","hashOfConfig":"104"},{"size":5264,"mtime":1661427907411,"results":"106","hashOfConfig":"104"},{"size":1739,"mtime":1661007492526,"results":"107","hashOfConfig":"104"},{"size":3812,"mtime":1660667222483,"results":"108","hashOfConfig":"104"},{"size":2810,"mtime":1661248631150,"results":"109","hashOfConfig":"104"},{"size":1944,"mtime":1657725638143,"results":"110","hashOfConfig":"104"},{"size":4151,"mtime":1661436255062,"results":"111","hashOfConfig":"104"},{"size":222,"mtime":1652096209126,"results":"112","hashOfConfig":"104"},{"size":792,"mtime":1654802892489,"results":"113","hashOfConfig":"104"},{"size":122,"mtime":1652200578637,"results":"114","hashOfConfig":"104"},{"size":232,"mtime":1654429189609,"results":"115","hashOfConfig":"104"},{"size":3023,"mtime":1657902393557,"results":"116","hashOfConfig":"104"},{"size":4488,"mtime":1661018510802,"results":"117","hashOfConfig":"104"},{"size":15077,"mtime":1661362439889,"results":"118","hashOfConfig":"104"},{"size":526,"mtime":1652361098154,"results":"119","hashOfConfig":"104"},{"size":8527,"mtime":1657727880663,"results":"120","hashOfConfig":"104"},{"size":3873,"mtime":1657728320476,"results":"121","hashOfConfig":"104"},{"size":1004,"mtime":1657907925210,"results":"122","hashOfConfig":"104"},{"size":3797,"mtime":1657728020027,"results":"123","hashOfConfig":"104"},{"size":7212,"mtime":1657727984913,"results":"124","hashOfConfig":"104"},{"size":2976,"mtime":1656171673556,"results":"125","hashOfConfig":"104"},{"size":995,"mtime":1654968392119,"results":"126","hashOfConfig":"104"},{"size":1294,"mtime":1655828825098,"results":"127","hashOfConfig":"104"},{"size":12114,"mtime":1660919935170,"results":"128","hashOfConfig":"104"},{"size":456,"mtime":1654886504748,"results":"129","hashOfConfig":"104"},{"size":4782,"mtime":1656175715746,"results":"130","hashOfConfig":"104"},{"size":3928,"mtime":1657042275816,"results":"131","hashOfConfig":"104"},{"size":870,"mtime":1657043811602,"results":"132","hashOfConfig":"104"},{"size":862,"mtime":1657042296882,"results":"133","hashOfConfig":"104"},{"size":1369,"mtime":1656167920349,"results":"134","hashOfConfig":"104"},{"size":381,"mtime":1654444029469,"results":"135","hashOfConfig":"104"},{"size":323,"mtime":1654510683191,"results":"136","hashOfConfig":"104"},{"size":684,"mtime":1661417915939,"results":"137","hashOfConfig":"104"},{"size":594,"mtime":1655144935574,"results":"138","hashOfConfig":"104"},{"size":4634,"mtime":1657902316861,"results":"139","hashOfConfig":"104"},{"size":6843,"mtime":1661089030074,"results":"140","hashOfConfig":"104"},{"size":1940,"mtime":1654598731892,"results":"141","hashOfConfig":"104"},{"size":406,"mtime":1654528326660,"results":"142","hashOfConfig":"104"},{"size":1710,"mtime":1654529564944,"results":"143","hashOfConfig":"104"},{"size":1506,"mtime":1654598496357,"results":"144","hashOfConfig":"104"},{"size":185,"mtime":1655052061232,"results":"145","hashOfConfig":"104"},{"size":273,"mtime":1573657440000,"results":"146","hashOfConfig":"104"},{"size":607,"mtime":1655143814135,"results":"147","hashOfConfig":"104"},{"size":1495,"mtime":1655135095584,"results":"148","hashOfConfig":"104"},{"size":2211,"mtime":1657041955811,"results":"149","hashOfConfig":"104"},{"size":2977,"mtime":1661249144601,"results":"150","hashOfConfig":"104"},{"size":754,"mtime":1657387645538,"results":"151","hashOfConfig":"104"},{"size":1389,"mtime":1657388156154,"results":"152","hashOfConfig":"104"},{"size":2195,"mtime":1660746072766,"results":"153","hashOfConfig":"104"},{"size":3230,"mtime":1657710488550,"results":"154","hashOfConfig":"104"},{"size":5099,"mtime":1656867173756,"results":"155","hashOfConfig":"104"},{"size":1304,"mtime":1657298996541,"results":"156","hashOfConfig":"104"},{"size":1156,"mtime":1661428223278,"results":"157","hashOfConfig":"104"},{"size":262,"mtime":1661248341459,"results":"158","hashOfConfig":"104"},{"size":7212,"mtime":1661422477802,"results":"159","hashOfConfig":"104"},{"size":1592,"mtime":1661440528678,"results":"160","hashOfConfig":"104"},{"size":8168,"mtime":1661165337001,"results":"161","hashOfConfig":"104"},{"size":1588,"mtime":1661425520423,"results":"162","hashOfConfig":"104"},{"size":1157,"mtime":1661010745075,"results":"163","hashOfConfig":"104"},{"size":401,"mtime":1660837178652,"results":"164","hashOfConfig":"104"},{"size":1492,"mtime":1661245256112,"results":"165","hashOfConfig":"104"},{"size":1223,"mtime":1661244484185,"results":"166","hashOfConfig":"104"},{"size":3035,"mtime":1661075546570,"results":"167","hashOfConfig":"104"},{"size":617,"mtime":1660907748424,"results":"168","hashOfConfig":"104"},{"size":7455,"mtime":1661097271995,"results":"169","hashOfConfig":"104"},{"size":3572,"mtime":1661417661537,"results":"170","hashOfConfig":"104"},{"size":1375,"mtime":1661094096216,"results":"171","hashOfConfig":"104"},{"size":992,"mtime":1661352728277,"results":"172","hashOfConfig":"104"},{"size":2096,"mtime":1661417338799,"results":"173","hashOfConfig":"104"},{"size":2253,"mtime":1661425459748,"results":"174","hashOfConfig":"104"},{"size":776,"mtime":1661425596925,"results":"175","hashOfConfig":"104"},{"size":542,"mtime":1661262470333,"results":"176","hashOfConfig":"104"},{"size":530,"mtime":1661262462010,"results":"177","hashOfConfig":"104"},{"size":1694,"mtime":1661245276088,"results":"178","hashOfConfig":"104"},{"size":416,"mtime":1661244053784,"results":"179","hashOfConfig":"104"},{"size":1511,"mtime":1661417402648,"results":"180","hashOfConfig":"104"},{"size":640,"mtime":1661417295019,"results":"181","hashOfConfig":"104"},{"size":823,"mtime":1661266479208,"results":"182","hashOfConfig":"104"},{"size":636,"mtime":1661421755279,"results":"183","hashOfConfig":"104"},{"size":2421,"mtime":1661448919720,"results":"184","hashOfConfig":"104"},{"size":1639,"mtime":1661266314080,"results":"185","hashOfConfig":"104"},{"size":931,"mtime":1661416858150,"results":"186","hashOfConfig":"104"},{"size":2149,"mtime":1661416572480,"results":"187","hashOfConfig":"104"},{"size":645,"mtime":1661416749324,"results":"188","hashOfConfig":"104"},{"size":634,"mtime":1661359781818,"results":"189","hashOfConfig":"104"},{"size":3816,"mtime":1661450466295,"results":"190","hashOfConfig":"104"},{"size":306,"mtime":1661416447769,"results":"191","hashOfConfig":"104"},{"size":318,"mtime":1661416465907,"results":"192","hashOfConfig":"104"},{"size":627,"mtime":1661424293393,"results":"193","hashOfConfig":"104"},{"size":2024,"mtime":1661450398038,"results":"194","hashOfConfig":"104"},{"size":332,"mtime":1661424725681,"results":"195","hashOfConfig":"104"},{"size":1216,"mtime":1661450733728,"results":"196","hashOfConfig":"104"},{"size":7392,"mtime":1661440316603,"results":"197","hashOfConfig":"104"},{"size":1496,"mtime":1661449998530,"results":"198","hashOfConfig":"104"},{"size":1052,"mtime":1661441197654,"results":"199","hashOfConfig":"104"},{"size":773,"mtime":1661441178028,"results":"200","hashOfConfig":"104"},{"size":2351,"mtime":1661442135525,"results":"201","hashOfConfig":"104"},{"size":1382,"mtime":1661450104222,"results":"202","hashOfConfig":"104"},{"size":901,"mtime":1661444548947,"results":"203","hashOfConfig":"104"},{"size":1308,"mtime":1661444175727,"results":"204","hashOfConfig":"104"},{"size":2259,"mtime":1661450569210,"results":"205","hashOfConfig":"104"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"qiatdq",{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"208"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"208"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"208"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"208"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"208"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"208"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"208"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"208"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"208"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"208"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"208"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"208"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"208"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"316"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"208"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"208"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"208"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"208"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"208"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"208"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"208"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"208"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"208"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"208"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"208"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"208"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"208"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"208"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"208"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"208"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"208"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["443","444"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",["445","446"],"import { Route, Switch, Redirect } from 'react-router-dom';\nimport SideNavigation from './components/SideNavigation';\nimport Appointment from './pages/Appointment';\nimport PatientDetail from './pages/PatientDetail';\nimport Statistics from './pages/Statistics';\nimport Patients from './pages/Patients';\nimport Auth from './authentication/Auth';\nimport { AuthContext } from './context/auth-context';\nimport { PatientContext } from './context/patient-context';\nimport { useState, useCallback, useEffect } from 'react';\nimport Logo from './components/UI/Logo'\nimport EmailConfirmation from './authentication/EmailConfirmation'\n\nlet logoutTimer;\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [patientId, setPatientId] = useState(null);\n  const [gender, setGender] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n\n  const createPatientId = useCallback((patientId) => {\n    setPatientId(patientId);\n  }, []);\n  const setPatientIdNull = useCallback(() => {\n    setPatientId(null);\n  })\n\n  const changeGender = useCallback((gender) => {\n    setGender(gender);\n  }, []);\n  const setGenderNull = useCallback(() => {\n    setGender(null);\n  })\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate();\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n\n  let routes;\n  if (token === null) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Logo />\n          <Auth />\n        </Route >\n        <Route path='/:userId/emailconfirmation' exact>\n          <EmailConfirmation />\n        </Route>\n        <Route path='/' >\n          <Redirect to='/' />\n        </Route >\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Logo />\n          {/* <SideNavigation /> */}\n          <Patients />\n        </Route>\n        <Route path='/patients' exact>\n          <Logo />\n          {/* <SideNavigation /> */}\n          <Patients />\n        </Route>\n        <Route path='/appointments'>\n          <SideNavigation />\n          <Appointment />\n        </Route>\n        <Route path='/patients/:patientId' >\n          <Logo />\n\n          <PatientDetail />\n        </Route>\n        <Route path='/Statistics' >\n          <SideNavigation />\n          <Statistics />\n        </Route>\n        <Route path='/' >\n          <Redirect to='/' />\n        </Route >\n\n      </Switch>\n    )\n\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\n      <PatientContext.Provider value={{ gender: gender, patientId: patientId, createPatientId: createPatientId, setPatientIdNull: setPatientIdNull, setGenderNull: setGenderNull, changeGender: changeGender }}>\n        <div className='backgroundImage'>\n          <main>\n\n            {routes}\n\n          </main>\n        </div>\n      </PatientContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["447","448","449"],"import { Container } from 'react-bootstrap';\r\nimport PatientsList from '../components/PatientsList';\r\nimport PatientsListHeader from '../components/PatientsListHeader';\r\nimport PatientSearch from '../components/UI/PatientSearch';\r\nimport Backdrop from '../components/UI/Backdrop';\r\nimport classes from './Patients.module.css';\r\nimport Modal from '../components/UI/Modal';\r\nimport DeleteModal from '../components/UI/DeleteModal';\r\nimport EditPatient from '../components/EditPatient';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useEffect, useContext, useReducer } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst defaultSearch = { sirname: '', name: '', diagnosis: '', age: '', tel: '', amka: '' };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'name':\r\n            return { ...state, name: action.payload.name };\r\n        case 'sirname':\r\n            return { ...state, sirname: action.payload.sirname };\r\n        case 'diagnosis':\r\n            return { ...state, diagnosis: action.payload.diagnosis };\r\n        case 'tel':\r\n            return { ...state, tel: action.payload.tel };\r\n        case 'amka':\r\n            return { ...state, amka: action.payload.amka };\r\n        case 'clear': {\r\n            return defaultSearch;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst Patients = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [loadedPatients, setLoadedPatients] = useState([]);\r\n    const [patientToDelete, setPatientToDelete] = useState();\r\n    const [patientToEdit, setPatientToEdit] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n\r\n    const [state, dispatch] = useReducer(reducer, defaultSearch);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/patients/getPatients/${auth.userId}?name=${state.name}&sirname=${state.sirname}&diagnosis=${state.diagnosis}&tel=${state.tel}&amka=${state.amka}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatients(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        setTimeout(fetchPatients);\r\n    }, [sendRequest, state]);\r\n\r\n\r\n    function addPatientHandler() {\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    function closeHandler() {\r\n        setModalIsOpen(false);\r\n    }\r\n    function deleteHandler(patientId) {\r\n        setDeleteModalIsOpen(true);\r\n        setPatientToDelete(patientId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function editHandler(patientId) {\r\n        setEditModalIsOpen(true);\r\n        setPatientToEdit(patientId);\r\n    }\r\n    function closeEditModal() {\r\n        setEditModalIsOpen(false);\r\n    }\r\n    function submitPatientHandler(patient) {\r\n        setLoadedPatients(prevPatients => {\r\n            return [patient, ...prevPatients];\r\n        });\r\n    }\r\n    async function deletePatientHandler() {\r\n        const responseDeletedPatient = await sendRequest(`http://localhost:5000/patients/${patientToDelete}`, 'DELETE', null, {\r\n            Authorization: 'Bearer ' + auth.token\r\n        }\r\n        );\r\n        setLoadedPatients(prevPatients => {\r\n            return prevPatients.filter(patient => patient._id !== responseDeletedPatient._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div className={classes.test}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <Container>\r\n                {/* <PatientsListHeader dispatch={dispatch} /> */}\r\n                {isLoading && <LoadingSpinner />}\r\n\r\n                {!isLoading && loadedPatients && <PatientsList patients={loadedPatients} onDelete={deleteHandler} onEdit={editHandler} />}\r\n                {modalIsOpen && <Modal onClose={closeHandler} onSubmit={submitPatientHandler} patients={loadedPatients} />}\r\n                {modalIsOpen && !error && <Backdrop onClick={closeHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deletePatientHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this patient?Please note that it can't be undone once thereafter.\" />}\r\n                {deleteModalIsOpen && !error && <Backdrop onClick={closeDeleteModal} />}\r\n                {editModalIsOpen && !error && <Backdrop onClick={closeEditModal} />}\r\n                {editModalIsOpen && <EditPatient onClose={closeEditModal} patientId={patientToEdit} />}\r\n\r\n                {/* <button onClick={addPatientHandler} className={classes.addButton}>Δημιουργία Ασθενή</button> */}\r\n\r\n            </Container>\r\n            <PatientSearch dispatch={dispatch} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",["450","451","452","453","454","455","456","457","458","459","460","461"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport classes from './PatientsListHeader.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PatientsListHeader = (props) => {\r\n    const [name,setName]=useState();\r\n    const [sirname,setSirname]=useState();\r\n    const [diagnosis,setDiagnosis]=useState();\r\n    const [tel,setTel]=useState();\r\n    const [amka,setAmka]=useState();\r\n    const history = useHistory()\r\n    function changeNameHandler(event) {\r\n        props.dispatch({ type: 'name', payload: { name: event.target.value } })\r\n        setName(event.target.value);\r\n    }\r\n    function changeSirnameHandler(event) {\r\n        props.dispatch({ type: 'sirname', payload: { sirname: event.target.value } })\r\n        setSirname(event.target.value);\r\n    }\r\n    function changeDiagnosisHandler(event) {\r\n        props.dispatch({ type: 'diagnosis', payload: { diagnosis: event.target.value } })\r\n        setDiagnosis(event.target.value);\r\n    }\r\n    function changeTelHandler(event) {\r\n        props.dispatch({ type: 'tel', payload: { tel: event.target.value } })\r\n        setTel(event.target.value);\r\n    }\r\n    function changeAmkaHandler(event) {\r\n        props.dispatch({ type: 'amka', payload: { amka: event.target.value } })\r\n        setAmka(event.target.value);\r\n    }\r\n    function clearHandler(event) {\r\n        props.dispatch({type:'clear'});\r\n        setName('');\r\n        setSirname('');\r\n        setDiagnosis('');\r\n        setTel('');\r\n        setAmka('');\r\n        // history.push(`/patients/62aa19495a6877632fd7d9e8/lab_test?q=2022-06-16`)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            <Row><Col className='text-center'><h4 className={classes.title}>Ασθενείς</h4></Col></Row>\r\n            <Row className='justify-content-sm-space-around'>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='sirname'>Επώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='name'>Όνομα</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='diagnosis'>Πατρώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='age'>Ηλικία</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='tel'>Τηλέφωνο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='amka'>ΑΜΚΑ</label></Col>\r\n                <Col></Col>\r\n            </Row>\r\n            {/* <form>\r\n                <Row className='justify-content-sm-space-around'>\r\n\r\n                    <Col className='text-center'><input onChange={changeSirnameHandler} value={sirname} name='sirname' type='text' id='sirname' /></Col>\r\n                    <Col className='text-center'><input onChange={changeNameHandler} value={name} name='name' type='text' id='name' /></Col>\r\n                    <Col className='text-center'><input onChange={changeDiagnosisHandler} value={diagnosis} name='diagnosis' type='text' id='diagnosis' /></Col>\r\n                    <Col className='text-center'><input name='age' type='text' id='age' /></Col>\r\n                    <Col className='text-center'><input onChange={changeTelHandler} value={tel} name='tel' type='text' id='tel' /></Col>\r\n                    <Col className='text-center'><input onChange={changeAmkaHandler} value={amka} name='amka' type='text' id='amka' /></Col>\r\n                    <Col><button type='button' className={classes.button} onClick={clearHandler}>Clear filters</button></Col>\r\n\r\n                </Row>\r\n            </form> */}\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default PatientsListHeader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",["462","463","464","465","466","467","468","469"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["470","471","472","473","474","475","476","477","478","479"],"import { Fragment } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n// import Card from \"../UI/Card\";\r\nimport ImageUpload from \"../UI/ImageUpload\";\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport moment from 'moment';\r\n\r\n\r\nconst Basic = (props) => {\r\n    const [loading, SetLoading] = useState(false);\r\n    const [loadedBasics, setLoadedBasics] = useState({ name: '', sirname: '', amka: '', diagnosis: '', tel: '', dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '', fathersName: '' })\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const patientContext = useContext(PatientContext)\r\n\r\n    console.log(patientContext.gender, patientContext.patientId);\r\n\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n\r\n    const [age, setAge] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchPatients = async () => {\r\n    //         try {\r\n    //             const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n    //             setLoadedBasics({ placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, fathersName: responseData.fathersName, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode });\r\n    //         } catch (err) { }\r\n    //     };\r\n    //     fetchPatients();\r\n    //     setAge(props.patient.dateOfBirth);\r\n    // }, [sendRequest,props.patient.dateOfBirth]);\r\n    // useEffect(() => {\r\n    //     const fetchBasic = async () => {\r\n    //         try {\r\n    //             const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n    //             console.log(responseData)\r\n    //             setLoadedBasics((prevState) => {\r\n    //                 return { ...prevState, name: responseData.name, sirname: responseData.sirname, amka: responseData.amka, dateOfBirth: responseData.dateOfBirth, diagnosis: responseData.diagnosis, tel: responseData.tel };\r\n    //             })\r\n    //         } catch (err) {\r\n    //         }\r\n    //         fetchBasic();\r\n    //         console.log(loadedBasics.name);\r\n    //         setAge(props.patient.dateOfBirth);\r\n    //     }\r\n    // }, [sendRequest])\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        let patientId;\r\n\r\n\r\n\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`,\r\n                'POST',\r\n                JSON.stringify({\r\n                    uid: auth.userId,\r\n                    name: nameInputRef.current.value,\r\n                    sirname: sirnameInputRef.current.value,\r\n                    dateOfBirth: dateOfBirthInputRef.current.value,\r\n                    amka: amkaInputRef.current.value,\r\n                    tel: TelInputRef.current.value,\r\n                    placeOfBirth: placeOfBirthInputRef.current.value,\r\n                    job: jobInputRef.current.value,\r\n                    familyStatus: familyStatusInputRef.current.value,\r\n                    gender: genderInputRef.current.value,\r\n                    address: addressInputRef.current.value,\r\n                    area: areaInputRef.current.value,\r\n                    postalCode: postalCodeRef.current.value,\r\n                    fathersName: fathersNameInputRef.current.value\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n\r\n            patientContext.createPatientId(responseData.patient._id);\r\n            patientContext.changeGender(responseData.patient.gender);\r\n            patientId = responseData.patient._id;\r\n\r\n        }\r\n        catch (err) { }\r\n        if (typeof (formState.inputs.image.value) !== 'undefined') {\r\n            console.log(formState.inputs.image.value)\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientId}/files`, 'POST',\r\n                    formData\r\n                )\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading || loading && <LoadingSpinner asOverlay />}\r\n\r\n            {!isLoading && <form className={classes.basicForm} onSubmit={submitHandler}>\r\n\r\n                <Container >\r\n\r\n                    <Row>\r\n                        <Col className={`text-sm-end ${classes.firstInputs}`} xs={6}>\r\n                            <div><label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>&nbsp;<input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} /></div>\r\n                            <div> <label htmlFor=\"name\">Όνομα<span>* </span> &nbsp;</label><input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} /></div>\r\n                            <div> <label htmlFor=\"amka\"  >ΑΜΚΑ<span>* </span>&nbsp;</label><input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={props.patient.amka} required /></div>\r\n                            <div><label htmlFor=\"fathers-name\">Πατρώνυμο</label>&nbsp;&nbsp;<input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={loadedBasics.fathersName} /></div>\r\n                        </Col>\r\n                        {/* <Col className='text-sm-end ' xs={3}>\r\n                            <div><input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} /></div>\r\n                            <div> <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} /></div>\r\n                            <div><input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={props.patient.amka} required /></div>\r\n                            <div> <input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={loadedBasics.fathersName} /></div>\r\n                        </Col> */}\r\n                        <Col className=\"text-center\">\r\n                            <ImageUpload center imageSource={null} onInput={inputHandler} id='image' />\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <Row>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"name\">Όνομα<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} />\r\n                        </Col>\r\n                    </Row> */}\r\n                    {/* <Row className='justify-content-center '>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"name\">Όνομα<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} />\r\n                        </Col>\r\n                    </Row> */}\r\n                    <Row className='justify-content-center'>\r\n\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"dateOfBirth\">Ημερομηνία Γέννησης</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={dateOfBirthInputRef} id='dateOfBirth' type='date' name=\"dateOfBirth\" defaultValue={moment(age).format('YYYY-MM-DD')} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={props.patient.tel} required />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"job\">Επάγγελμα</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <select ref={familyStatusInputRef} id='family_status' name='family_status'>\r\n                                <option value=\"none\" selected disabled hidden>Επιλέξτε</option>\r\n                                <option value='married' selected={loadedBasics.familyStatus === 'married'} >Παντρεμμένος/η</option>\r\n                                <option value='notmarried' selected={loadedBasics.familyStatus === 'notmarried'}>Ανύπνατρος/η</option>\r\n                                <option value='divorced' selected={loadedBasics.familyStatus === 'divorced'}>Διαζευγμένος/η</option>\r\n                            </select>\r\n                            {/* <input id='family_status' type='text' /> */}\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"gender\">Φύλο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <select ref={genderInputRef} name='gender' id='gender' required>\r\n                                <option value=\"\" selected disabled hidden>Επιλέξτε</option>\r\n                                <option value='male' selected={loadedBasics.gender === 'male'}>Άρρεν</option>\r\n                                <option value='female' selected={loadedBasics.gender === 'female'}>Θήλυ</option>\r\n                                {/* <option value='other' selected={loadedBasics.gender === 'other'}>Άλλο</option> */}\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"address\">Διεύθυνση</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={addressInputRef} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"location\">Περιοχή</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={areaInputRef} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={postalCodeRef} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={emailInputRef} id='email' type='text' name=\"email\" />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row >\r\n                        <Col  ><SaveButton onClick={() => { }} /></Col>\r\n                    </Row>\r\n\r\n\r\n                </Container>\r\n            </form>}\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js",["480"],"import classes from './GeneralBlood.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Fragment } from 'react';\r\nimport Card from '../../UI/Card';\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport moment from 'moment';\r\nimport SaveButton from '../../UI/SaveButton';\r\n\r\nconst GeneralBlood = (props) => {\r\n    const [loadBlood, setLoadBlood] = useState({ date: '', visitDate: '', kallio: '', natrio: '', asbestio: '', ht: '', mcv: '', sgot: '', b12: '', hb: '', visitId: '' });\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    const dateInputRef = useRef();\r\n    const kallioInputRef = useRef();\r\n    const natrioInputRef = useRef();\r\n    const asbestioInputRef = useRef();\r\n    const htInputRef = useRef();\r\n    const mcvInputRef = useRef();\r\n    const sgotInputRef = useRef();\r\n    const b12InputRef = useRef();\r\n    const hbInputRef = useRef();\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/blood/${params.labId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            props.setLoadVisitId(responseData.visitId)\r\n            setLoadBlood({ date: moment(responseData.date).format('YYYY-MM-DD'), visitDate: moment(responseData.visitDate).format('YYYY-MM-DD'), kallio: responseData.kallio, natrio: responseData.natrio, asbestio: responseData.asbestio, ht: responseData.ht, mcv: responseData.mcv, sgot: responseData.sgot, b12: responseData.b12, hb: responseData.hb, visitId: responseData.visitId });\r\n        } catch (err) { console.log(err) }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (params.labId !== 'new' && params.type === 'blood') {\r\n            fetchVisit()\r\n        }\r\n    }, [props.patientId, auth.token]);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(dateInputRef.current.value)\r\n        if (params.labId === 'new' || loadBlood.date === '') {   //neo document giati date required ara den yparxei eggrafi gia ayto to typo eksetasis\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests`, 'POST',\r\n                    JSON.stringify({\r\n                        type: 'blood',\r\n                        date: dateInputRef.current.value,\r\n                        visitId: props.visitId,\r\n                        kallio: kallioInputRef.current.value,\r\n                        natrio: natrioInputRef.current.value,\r\n                        asbestio: asbestioInputRef.current.value,\r\n                        ht: htInputRef.current.value,\r\n                        mcv: mcvInputRef.current.value,\r\n                        sgot: sgotInputRef.current.value,\r\n                        b12: b12InputRef.current.value,\r\n                        hb: hbInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n        else {\r\n            try {\r\n\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/${params.labId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        type: 'blood',\r\n                        date: dateInputRef.current.value,\r\n                        kallio: kallioInputRef.current.value,\r\n                        natrio: natrioInputRef.current.value,\r\n                        asbestio: asbestioInputRef.current.value,\r\n                        ht: htInputRef.current.value,\r\n                        mcv: mcvInputRef.current.value,\r\n                        sgot: sgotInputRef.current.value,\r\n                        b12: b12InputRef.current.value,\r\n                        hb: hbInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            {!isLoading && <Card>\r\n                <form className={classes.bloodForm} onSubmit={submitHandler}>\r\n                    <Container >\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <span>Πεδία</span>\r\n                                <span>Τιμές(mg)</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ημ/νία</label>\r\n                                <input ref={dateInputRef} name='date' type='date' required defaultValue={loadBlood.date} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <label>Κάλλιο</label>\r\n                                <input type='number' name='kallio' ref={kallioInputRef} defaultValue={loadBlood.kallio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Νάτριο</label>\r\n                                <input type='number' name='natrio' ref={natrioInputRef} defaultValue={loadBlood.natrio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ασβέστιο</label>\r\n                                <input type='number' name='asbestio' ref={asbestioInputRef} defaultValue={loadBlood.asbestio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ht</label>\r\n                                <input type='number' name='ht' ref={htInputRef} defaultValue={loadBlood.ht} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>MCV</label>\r\n                                <input type='number' name='mcv' ref={mcvInputRef} defaultValue={loadBlood.mcv} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>SGOT</label>\r\n                                <input type='number' name='sgot' ref={sgotInputRef} defaultValue={loadBlood.sgot} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>B12</label>\r\n                                <input type='number' name='b12' ref={b12InputRef} defaultValue={loadBlood.b12} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Hb</label>\r\n                                <input type='number' name='hb' ref={hbInputRef} defaultValue={loadBlood.hb} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n\r\n                    </Container>\r\n                </form>\r\n            </Card>}\r\n\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default GeneralBlood;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js",["481","482"],"import { Fragment } from 'react';\r\nimport classes from './Parathyro.module.css';\r\nimport Card from '../../UI/Card';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport moment from 'moment';\r\nimport SaveButton from '../../UI/SaveButton';\r\n\r\n\r\nconst Parathyro = (props) => {\r\n    const [loadParathyro, setLoadParathyro] = useState({ date: '', visitDate: '', pth: '', vitd: '', ca: '', p: '', alvoumini: '', kreatanini: '' });\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    const dateInputRef = useRef();\r\n    const visitDateInputRef = useRef();\r\n    const pthInputRef = useRef();\r\n    const vitdInputRef = useRef();\r\n    const caInputRef = useRef();\r\n    const pInputRef = useRef();\r\n    const alvouminiInputRef = useRef();\r\n    const kreataniniInputRef = useRef();\r\n\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/parathyro/${params.labId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadParathyro({ date: moment(responseData.date).format('YYYY-MM-DD'), visitDate: moment(responseData.visitDate).format('YYYY-MM-DD'), pth: responseData.pth, vitd: responseData.vitd, ca: responseData.ca, p: responseData.p, alvoumini: responseData.alvoumini, kreatanini: responseData.kreatanini });\r\n        } catch (err) { }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (params.labId !== 'new' && params.type === 'parathyro') {\r\n            fetchVisit()\r\n        }\r\n    }, [props.patientId, auth.token]);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        if (params.labId === 'new' || loadParathyro.date === '') {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests`, 'POST',\r\n                    JSON.stringify({\r\n                        type: 'parathyro',\r\n                        date: dateInputRef.current.value,\r\n                        pth: pthInputRef.current.value,\r\n                        vitd: vitdInputRef.current.value,\r\n                        ca: caInputRef.current.value,\r\n                        p: pInputRef.current.value,\r\n                        alvoumini: alvouminiInputRef.current.value,\r\n                        kreatanini: kreataniniInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/${params.labId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        type: 'parathyro',\r\n                        date: dateInputRef.current.value,\r\n                        pth: pthInputRef.current.value,\r\n                        vitd: vitdInputRef.current.value,\r\n                        ca: caInputRef.current.value,\r\n                        p: pInputRef.current.value,\r\n                        alvoumini: alvouminiInputRef.current.value,\r\n                        kreatanini: kreataniniInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            <Card>\r\n                <form className={classes.thyroForm} onSubmit={submitHandler}>\r\n\r\n                    <Container >\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <span>Πεδία</span>\r\n                                <span>Τιμές(mg)</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ημ/νία</label>\r\n                                <input ref={dateInputRef} name='date' type='date' defaultValue={loadParathyro.date} required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <label>PTH</label>\r\n                                <input type='number' ref={pthInputRef} name='pth' defaultValue={loadParathyro.pth} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>vitD</label>\r\n                                <input type='number' ref={vitdInputRef} name='vitd' defaultValue={loadParathyro.vitd} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ca</label>\r\n                                <input type='number' ref={caInputRef} name='ca' defaultValue={loadParathyro.ca} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>P</label>\r\n                                <input type='number' ref={pInputRef} name='p' defaultValue={loadParathyro.p} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Αλβουμίνη</label>\r\n                                <input type='number' ref={alvouminiInputRef} name='alvoumini' defaultValue={loadParathyro.alvoumini} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Κρεατινίνη</label>\r\n                                <input ref={kreataniniInputRef} type='number' name='kreatinini' defaultValue={loadParathyro.kreatanini} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n\r\n                    </Container>\r\n                </form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Parathyro;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js",["483"],"import ListsHeader from \"../../ListsHeader\";\r\nimport classes from './Visits.module.css';\r\nimport { Container } from \"react-bootstrap\";\r\nimport VisitsList from \"./VisitsList\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\n\r\n\r\nconst Visits = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedVisits, setLoadedVisits] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [visitToDelete, setVisitToDelete] = useState();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchHistory();\r\n    }, [sendRequest]);\r\n\r\n    function deleteHandler(visitId) {\r\n        setDeleteModalIsOpen(true);\r\n        setVisitToDelete(visitId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    async function deleteVisitHandler() {\r\n        const deletedVisit = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${visitToDelete}`, 'DELETE', null,\r\n            {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n        setLoadedVisits(prevVisits => {\r\n            return prevVisits.filter(visit => visit._id !== deletedVisit._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container fluid className={classes.visits}>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!isLoading && <Card className={classes.cardsVisit}>\r\n                <ListsHeader type='Τύπος Επίσκεψης' date='Ημερομηνία' diagnosis='Διάγνωση' />\r\n                {!isLoading && <VisitsList visits={loadedVisits} onDelete={deleteHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deleteVisitHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\" />}\r\n                {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n            </Card>}\r\n            <Button />\r\n        </Container>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Visits;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js",["484","485","486"],"import classes from './VisitDetail.module.css';\r\nimport Card from \"../../UI/Card\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BMI from './BMI';\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport moment from 'moment';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport { Fragment } from 'react';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst VisitDetail = (props) => {\r\n    // const [loadVisit,setLoadVisit]=useState({date:'',diagnosis:'',geniki_eikona,piesi,sfiksis,weight,height,test_volume,others})\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const location = useLocation();\r\n    const path = (params.visitId !== 'new') ? location.pathname.split('/visits')[0] + '/lab_test' : location.pathname.split('/visits')[0] + '/lab_test/new';\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadVisit, setLoadVisit] = useState({ date: '', diagnosis: '', geniki_eikona: '', piesi: '', sfiksis: '', weight: '', height: '', test_volume: '', others: '', smkt: '', tekt: '' });\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const createVisitId = async () => {\r\n            const visitId = await sendRequest(`http://localhost:5000/patients/visits/createVisitId`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadVisit({ ...loadVisit, visitId: visitId })\r\n        }\r\n        createVisitId();\r\n    }, []);\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData._id)\r\n            setLoadVisit({ diagnosis: responseData.diagnosis, date: moment(responseData.date).format('YYYY-MM-DD'), tekt: responseData.tekt, smkt: responseData.smkt, geniki_eikona: responseData.geniki_eikona, piesi: responseData.piesi, sfiksis: responseData.sfiksis, weight: responseData.weight, height: responseData.height, test_volume: responseData.test_volume, others: responseData.others, visitId: responseData._id });\r\n        } catch (err) { }\r\n        console.log(loadVisit.visitId)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.visitId !== 'new') {\r\n            fetchVisit();\r\n        }\r\n    }, []);\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.visitId === 'new') {\r\n            console.log(loadVisit.visitId)\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'POST',\r\n                    JSON.stringify({\r\n                        id: loadVisit.visitId,\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                        uid: auth.userId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n            <Container fluid className={classes.visitDetail}>\r\n                <Card className={classes.cardsNewVisit}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row className={` justify-content-md-start`}>\r\n                            <Col className={classes.label} lg='2'><h5>Στοιχεία Επίσκεψης</h5></Col>\r\n\r\n                            <Col className={classes.label} lg='2'><h5><Link to={`${path}?visitId=${loadVisit.visitId}`}>Εργαστηριακές</Link></h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Διάγνωση</label>\r\n                                <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Ημερομηνία*</label>\r\n                                <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={loadVisit.date} required />\r\n                                {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Γενική εικόνα</label>\r\n                                <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={classes.multiInputs}>\r\n                            <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                            <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                            <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                            <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                            <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                                <select ref={tektInputRef} name='tekt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                        <Row >\r\n                            <Col sm='1' className='text-md-end'>\r\n                                <label htmlFor=\"others\">Άλλα</label>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col><SaveButton /></Col>\r\n                        </Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default VisitDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js",["487","488"],"import classes from './NewLabAnalysis.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useState, useReducer, useEffect } from 'react';\r\nimport GeneralBlood from './GeneralBlood';\r\nimport Thyro from './Thyro';\r\nimport Ypofysi from './Ypofysi';\r\nimport Parathyro from './Parathyro';\r\nimport NewLabSelect from './NewLabSelect';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst defaultState = {\r\n    blood: false,\r\n    thyro: false,\r\n    parathyro: false,\r\n    ypofysi: false,\r\n    epinefridio: false,\r\n    eggs: false,\r\n    balls: false\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'blood':\r\n            return { ...defaultState, blood: true };\r\n        case 'thyro':\r\n            return { ...defaultState, thyro: true };\r\n        case 'parathyro':\r\n            return { ...defaultState, parathyro: true };\r\n        case 'epinefridia':\r\n            return { ...defaultState, epinefridia: true };\r\n        case 'ypofysi':\r\n            return { ...defaultState, ypofysi: true };\r\n        case 'eggs':\r\n            return { ...defaultState, eggs: true };\r\n        case 'balls':\r\n            return { ...defaultState, balss: true };\r\n\r\n    }\r\n}\r\n\r\n\r\nconst NewLabAnalysis = (props) => {\r\n    const [visitId, setVisitId] = useState();\r\n    const [loadVisitId, setLoadVisitId] = useState('');\r\n    const type = useParams().type;\r\n    const defaultState = {\r\n        blood: false,\r\n        thyro: false,\r\n        parathyro: false,\r\n        ypofysi: false,\r\n        epinefridio: false,\r\n        eggs: false,\r\n        balls: false\r\n    }\r\n    const [state, dispatch] = useReducer(reducer, defaultState)\r\n\r\n    useEffect(() => {\r\n        if (typeof (type) === 'undefined') {\r\n            dispatch({ type: 'blood' })\r\n        } else {\r\n            dispatch({ type: type })\r\n        }\r\n    }, [type])\r\n\r\n\r\n    function changeVisitDateHandler(visitId) {\r\n        setVisitId(visitId);\r\n    }\r\n\r\n\r\n    function changeHandler(event) {\r\n        const selectValue = event.target.value;\r\n        switch (selectValue) {\r\n            case 'blood':\r\n                return dispatch({ type: 'blood' });\r\n            case 'thyro':\r\n                return dispatch({ type: 'thyro' });\r\n            case 'parathyro':\r\n                return dispatch({ type: 'parathyro' });\r\n            case 'epinefridia':\r\n                return dispatch({ type: 'epinefridia' });\r\n            case 'ypofysi':\r\n                return dispatch({ type: 'ypofysi' });\r\n            case 'eggs':\r\n                return dispatch({ type: 'eggs' });\r\n            case 'balls':\r\n                return dispatch({ type: 'balls' });\r\n            case '':\r\n                return dispatch({ type: '' });\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.mylab}>\r\n            <Row>\r\n                <Col>\r\n                    <NewLabSelect clasname={classes.myselect} loadVisitId={loadVisitId} patientId={props.patientId} changeHandler={changeVisitDateHandler} />\r\n                </Col>\r\n\r\n                <Col>\r\n                    <label className={classes.myselect} htmlFor='labifo'>Τύπος Εξέτασης</label>\r\n                    <select onChange={changeHandler} id='labinfo'>\r\n                        <option value='blood' selected={type === 'blood'}>Γενική Αίματος</option>\r\n                        <option value='thyro' selected={type === 'thyro'} >Θυρεοειδής</option>\r\n                        <option value='parathyro' selected={type === 'parathyro'}>Παραθυρεοειδής</option>\r\n                        <option value='ypofysi' selected={type === 'ypofysi'}>Υπόφυση</option>\r\n                        <option value='epinefridia' selected={type === 'epinefridia'}>Επινεφρίδια</option>\r\n                        <option value='eggs' selected={type === 'eggs'}>Ωοθήκες</option>\r\n                        <option value='balls'>Όρχεις</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {state.blood && <GeneralBlood setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.thyro && <Thyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.ypofysi && <Ypofysi setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.parathyro && <Parathyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.epinefridia && <Parathyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default NewLabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js",["489"],"import { Container } from 'react-bootstrap';\r\nimport classes from './LabAnalysis.module.css';\r\nimport ListsHeader from '../../ListsHeader';\r\nimport LabsList from './LabsList';\r\nimport Card from \"../../UI/Card\";\r\nimport Button from '../../UI/Button';\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext, Fragment } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst LabAnalysis = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedLabs, setLoadedLabs] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [labTestToDelete, setLabTestToDelete] = useState({ id: '', type: '' });\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('visitId');\r\n\r\n    useEffect(() => {\r\n        const fetchLabTests = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/patients/${props.patientId}/lab_tests?visitId=${query}`\r\n                    , 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedLabs(responseData);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchLabTests();\r\n    }, [sendRequest, query]);\r\n\r\n    function deleteHandler(id, type) {\r\n        setDeleteModalIsOpen(true);\r\n        setLabTestToDelete({ id: id, type: type });\r\n    }\r\n\r\n    async function deleteLabTestHandler() {\r\n        let deletedLabTest\r\n        if (labTestToDelete.type === 'blood') {\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/blood/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n        }\r\n        else if (labTestToDelete.type === 'parathyro') {\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/parathyro/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n\r\n        }\r\n        setLoadedLabs(prevTests => {\r\n            return prevTests.filter(test => test._doc._id !== deletedLabTest._id);\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!isLoading&&<Container fluid className={classes.labAnalysis}>\r\n                <Card className={classes.cardLab}>\r\n                    <ListsHeader type='Τύπος Εξέτασης' date='Ημερομηνία Εξέτασης' diagnosis='Ημερομηνία Επίσκεψης' />\r\n                    <LabsList labs={loadedLabs} onDelete={deleteHandler} visitId={query}/>\r\n                    {deleteModalIsOpen && <DeleteModal onConfirm={deleteLabTestHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\" />}\r\n                    {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n                </Card>\r\n                <Button />\r\n\r\n            </Container>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["490","491"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from './EditPatient.module.css';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst EditPatient = (props) => {\r\n\r\n    const [loadedPatient, setLoadedPatient] = useState({ sirname: \"\", name: \"\", fathersName: \"\", dateOfBirth: \"\", tel: \"\", amka: \"\" });\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const dateOfBirthInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [type, setType] = useState('text');\r\n\r\n    const onFocus = (event) => {\r\n        setType('date')\r\n    }\r\n    const onBlur = (event) => {\r\n        setType('text')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient({ sirname: data.sirname, name: data.name, diagnosis: data.diagnosis, dateOfBirth: moment(data.dateOfBirth).format('YYYY-MM-DD'), tel: data.tel, amka: data.amka })\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n    console.log((loadedPatient.dateOfBirth === 'Invalid date'))\r\n\r\n\r\n\r\n\r\n\r\n    // fetch(`http://localhost:5000/patients/${props.patientId}`\r\n    // ).then((response) => {\r\n    //     return response.json()\r\n    // })\r\n    //     .then((data) => {\r\n    //         setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err.message);\r\n    //     });\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            diagnosis: diagnosisInputRef.current.value,\r\n            dateOfBirth: dateOfBirthInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value\r\n        };\r\n        const response = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'PATCH', JSON.stringify(updatedPatient),\r\n            {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_modal\">\r\n            <div className={classes.form_style_5}>\r\n                <form onSubmit={submitHandler}>\r\n                    <fieldset>\r\n                        {!!error && <ErrorModal error={error} onClose={clearError} />}\r\n                        <legend>Patient Info</legend>\r\n                        <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" defaultValue={loadedPatient.sirname} required />\r\n                        <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" defaultValue={loadedPatient.name} required />\r\n                        <input ref={diagnosisInputRef} type=\"text\" name=\"diagnosis\" placeholder=\"Διάγνωση \" defaultValue={loadedPatient.diagnosis} />\r\n                        <input ref={dateOfBirthInputRef} type={type} max={moment(new Date()).format('YYYY-MM-DD')} onBlur={onBlur} onFocus={onFocus} name=\"dateOfBirth\" defaultValue={(loadedPatient.dateOfBirth !== 'Invalid date') ? loadedPatient.dateOfBirth : 'Ημερομηνία Γέννησης'} />\r\n                        <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" defaultValue={loadedPatient.tel} required />\r\n                        <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" defaultValue={loadedPatient.amka} />\r\n                        <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClose}>Cancel</button>\r\n                        <button className=\"btn\" type='submit'>Edit </button>\r\n\r\n\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPatient;","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",["492","493","494","495"],"import './Auth.css';\r\nimport Card from '../components/UI/Card';\r\nimport Input from './Input';\r\nimport Button from './Button';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../components/UI/util/validators';\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useContext, Fragment } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nimport Notifications, {notify} from 'react-notify-toast';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [emailLoading, setEmailLoading] = useState(true);\r\n    const [sendingEmail, setSendingEmail] = useState(false);\r\n\r\n    // componentDidMount = () => {\r\n    //     fetch(`${API_URL}/wake-up`)\r\n    //         .then(res => res.json())\r\n    //         .then(() => {\r\n    //             setEmailLoading(false);\r\n    //         })\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        // if (!isLoginMode) {\r\n        //     setSendingEmail(true);\r\n        //     const data=sendRequest('http://localhost:5000/email', 'POST',\r\n        //         JSON.stringify({ email: formState.inputs.email.value }), {\r\n        //         'Content-Type': 'application/json'\r\n        //     });\r\n        //     setSendingEmail(false);\r\n        //     notify(data.msg)\r\n\r\n        // }\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest('http://localhost:5000/users/login', 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }), {\r\n                    'Content-Type': 'application/json'\r\n                });\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) { }\r\n\r\n        } else {\r\n            try {\r\n                const responseData = await sendRequest('http://localhost:5000/users/signup', 'POST',\r\n                    JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    });\r\n                console.log(responseData)\r\n                notify.show(responseData.msg,'warning',5000,{background:'blue',color:'white'})\r\n                // auth.login(responseData.userId, responseData.token);\r\n            } catch (err) { }\r\n        }\r\n        // try {\r\n        //         const responseData = await sendRequest('http://localhost:5000/users/signup', 'POST',\r\n        //             JSON.stringify({\r\n        //                 name: formState.inputs.name.value,\r\n        //                 email: formState.inputs.email.value,\r\n        //                 password: formState.inputs.password.value\r\n        //             }),\r\n        //             {\r\n        //                 'Content-Type': 'application/json'\r\n        //             });\r\n        //         notify(responseData.msg)\r\n        //         console.log(responseData)\r\n        //         auth.login(responseData.userId, responseData.token);\r\n        //     } catch (err) { }\r\n        // }\r\n\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Notifications/>\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Είσοδος</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Όνομα\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-Mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Κωδικός\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid password, at least 5 characters.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'Σύνδεση' : 'Εγγραφή'}\r\n                    </Button>\r\n                </form>\r\n                <span className='button_span'><Button inverse onClick={switchModeHandler}>\r\n                    Εναλλαγή σε {isLoginMode ? 'Εγγραφή' : 'Σύνδεση'}\r\n                </Button></span>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js",["496"],"import classes from './NewLabSelect.module.css';\r\n\r\nimport { Fragment } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport moment from 'moment';\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NewLabSelect = (props) => {\r\n    const [loadVisits, setLoadVisits] = useState([]);\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('visitId');\r\n    console.log(props.loadVisitId)\r\n    console.log(query)\r\n\r\n    useEffect(() => {\r\n        const fetchVisitDates = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits.dates`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchVisitDates();\r\n    }, [sendRequest]);\r\n\r\n\r\n    function changeHandler(event) {\r\n        props.changeHandler(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            <label htmlFor=\"visit\" className={classes.label}>Επίσκεψη</label>\r\n            <select id='visit' name='visitDate' className={classes.select} onChange={changeHandler}>\r\n                <option value={0} selected disabled hidden>Select an Option</option>\r\n                {loadVisits.length === 0 && <option disabled>No visits</option>}\r\n                {loadVisits.map((visit) => {\r\n                    return (<option value={visit._id} key={visit._id} selected={visit._id === props.loadVisitId}>{moment(visit.date).format('DD/MM/YYYY')}</option>);\r\n                })}\r\n            </select>\r\n        </Fragment>);\r\n}\r\nexport default NewLabSelect;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js",["497","498"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js",[],["499","500"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js",["501"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport DeleteButton from '../../UI/DeleteButton';\r\nimport moment from 'moment';\r\nimport classes from './FilesListItem.module.css';\r\n\r\nconst FilesListItem = (props) => {\r\n    const name = props.fileName.split('\\\\')[2];\r\n    const extension = name.split('.')[1]\r\n\r\n    const location = useLocation();\r\n    function deleteHandler() {\r\n        props.onDelete(name);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"text-sm-end\" xs='1'><img className={classes.images} src={`http://localhost:5000/uploads/images/${name}`} /></Col>\r\n            <Col className='text-sm-end' xs='5'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{name} </span></Link></Col>\r\n            <Col className='text-sm-end'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{moment(props.date).format('DD/MM/YYYY')} </span></Link></Col>\r\n            <Col className='text-sm-end'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{extension} </span></Link></Col>\r\n            <Col className='text-end' sm='2'><DeleteButton onClick={deleteHandler} /></Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FilesListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js",["502","503"],"\r\nimport React, { useRef, useState, useEffect, Fragment } from 'react';\r\n\r\nimport Button from '../../authentication/Button';\r\nimport Card from './Card';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState(props.imageSource);\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {  //mporw na dialexw mono ena arxeio!\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      {/* <Fragment>\r\n       <Card className='imageUploadCard'> */}\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"  //acceptable file types\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Παρακαλώ διαλέξτε μια φωτογραφία του ασθενή.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          {(!!props.imageSource) ? \"Αλλάξτε Φωτογραφία\" : \"Επιλέξτε Φωτογραφία\"}\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n      {/* </Card>\r\n     </Fragment> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js",["504","505","506","507","508","509","510"],"import classes from './FileEdit.module.css';\r\nimport { Fragment } from \"react\";\r\nimport ImageUpload from \"../../UI/ImageUpload\";\r\nimport { useForm } from \"../../../hooks/form-hook\";\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../UI/Card\";\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst FileEdit = (props) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const params = useParams();\r\n    const [loadedFile, setLoadedFile] = useState({ pathname: '' })\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n    // const fetchFile = async () => {\r\n    //     try {\r\n    //         const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files/${params.fileId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n    //         setLoadVisit({});\r\n    //     } catch (err) { }\r\n\r\n    // };\r\n    // useEffect(()=>{\r\n    //     if(params.fileId!=='new'){\r\n    //         fetchFile()\r\n    //     }\r\n\r\n    // },[])\r\n\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.fileId === 'new') {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files`, 'POST',\r\n                    formData\r\n                )\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }else{\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files/${params.fileId}`, 'PATCH',\r\n                    formData\r\n                )\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Container fluid className={classes.fileEdit}>\r\n                <Card className={classes.cardFiles}>\r\n                    <form onSubmit={submitHandler}>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ImageUpload imageSource={(params.fileId !== 'new') ? `http://localhost:5000/uploads/images/${params.fileId}` : null} center id='image' onInput={inputHandler} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default FileEdit;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointment.js",["511","512"],"\r\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\r\nimport { Scheduler, DateNavigator, Toolbar, ViewSwitcher, DayView, WeekView, MonthView, Appointments, AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { useState, useEffect, useContext, Fragment } from 'react';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\n\r\nimport classes from './Appointments.module.css';\r\nimport Card from '../components/UI/Card';\r\n\r\n\r\n\r\n\r\n\r\nconst Appointment = () => {\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [schedulerData, setSchedularData] = useState([\r\n        { id: 1, startDate: '2022-06-29T09:45', endDate: '2022-06-29T11:00', title: 'Meeting', notes: '' },\r\n        { id: 2, startDate: '2022-06-28T15:00', endDate: '2022-06-28T13:30', title: 'Go to a gym', notes: '' },\r\n    ]);\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                if (responseData.length > 0) {\r\n                    responseData.map(appointment => {\r\n                        return appointment.id = appointment._id;\r\n                    });\r\n                }\r\n                setSchedularData(responseData);\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchAppointments();\r\n    }, [sendRequest]);\r\n\r\n\r\n    const commitChanges = async ({ added, changed, deleted }) => {\r\n    \r\n        if (typeof (added) !== 'undefined') {\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'POST',\r\n                JSON.stringify({\r\n                    startDate: added.startDate,\r\n                    endDate: added.endDate,\r\n                    title: added.title,\r\n                    notes: added.notes\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n\r\n            setSchedularData(state => {\r\n                return [...state, responseData]\r\n            })\r\n        }\r\n        if (typeof (changed) !== 'undefined') {\r\n            let appId;\r\n            let startDate;\r\n            let endDate;\r\n            let title;\r\n            let notes;\r\n            for (let i in changed) {\r\n                appId = i;\r\n                const temp = changed[i];\r\n                title = temp.title;\r\n                startDate = temp.startDate;\r\n                endDate = temp.endDate;\r\n                notes = temp.notes\r\n            };\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'PATCH',\r\n                JSON.stringify({\r\n                    appId,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    title: title,\r\n                    notes: notes\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setSchedularData((state) => {\r\n                return state.map((appointment) => {\r\n                    return changed[appointment.id] ? responseData : appointment;\r\n                });\r\n            });\r\n\r\n        }\r\n        if (typeof (deleted) !== 'undefined') {\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}/${deleted}`, 'DELETE',\r\n                null, {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setSchedularData((state) => {\r\n                return state.filter(appointment => {\r\n                    return appointment.id !== deleted;\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.appointments}>\r\n                <Scheduler data={schedulerData} >\r\n                    <ViewState defaultCurrentViewName='Week' />\r\n                    <EditingState onCommitChanges={commitChanges} />\r\n                    <IntegratedEditing />\r\n                    <DayView />\r\n                    <WeekView startDayHour={8} endDayHour={20} />\r\n                    <MonthView startDayHour={8} endDayHour={20}/>\r\n                    <Toolbar />\r\n                    <DateNavigator />\r\n                    <ViewSwitcher />\r\n                    <Appointments />\r\n                    <AppointmentForm />\r\n                </Scheduler>\r\n            </Card>\r\n        </Fragment>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Appointment;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js",["513","514","515","516","517","518","519","520","521","522","523","524","525"],"import { Container, Col, Row } from \"react-bootstrap\";\r\nimport './History.css';\r\nimport SaveButton from '../../UI/SaveButton'\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useState, useEffect, useRef, useContext, Fragment } from \"react\";\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport Collapsible from 'react-collapsible';\r\nimport Conditions from \"./Atomiko/Conditions\";\r\nimport Allergies from \"./Atomiko/Allergies/Allergies\";\r\nimport Klironomiko from \"./Klironomiko/Klironomiko\";\r\nimport Surgeries from \"./Surgeries/Surgeries\";\r\nimport Gynaikologiko from \"./Gynaikologiko/Gynaikologiko\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst History = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const [loadAnamnistiko, setLoadAnamnistiko] = useState({ allergies: '', cleronomical: '', personal: '', surgeries: '', drug_usage: '', others: '' })\r\n    const allergiesInputRef = useRef();\r\n    const cleronomicalInputRef = useRef();\r\n    const personalInputRef = useRef();\r\n    const surgeriesInputRef = useRef();\r\n    const drug_usageInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchHistory = async () => {\r\n    //         try {\r\n    //             const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`,'GET',null,{Authorization:'Bearer '+auth.token});\r\n    //             setLoadAnamnistiko({allergies:responseData.allergies,cleronomical:responseData.cleronomical,personal:responseData.personal,drug_usage:responseData.drug_usage,surgeries:responseData.surgeries,others:responseData.others});\r\n    //         }catch(err){ }\r\n\r\n    //     };\r\n    //     fetchHistory();\r\n    // }, []);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        // try {\r\n        //     await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`, 'POST',\r\n        //         JSON.stringify({\r\n        //             allergies: allergiesInputRef.current.value,\r\n        //             cleronomical: cleronomicalInputRef.current.value,\r\n        //             personal: personalInputRef.current.value,\r\n        //             surgeries: surgeriesInputRef.current.value,\r\n        //             drug_usage: drug_usageInputRef.current.value,\r\n        //             others: othersInputRef.current.value\r\n\r\n\r\n        //         }), {\r\n        //         'Content-Type': 'application/json',\r\n        //         Authorization: 'Bearer ' + auth.token\r\n        //     });\r\n        // } catch (err) { }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <form className='history' onSubmit={submitHandler}>\r\n                <Container fluid>\r\n                    <Collapsible trigger='Ατομικό' triggerWhenOpen={'Ατομικό^'} transitionTime={200}>\r\n                        <Conditions />\r\n                        <Allergies />\r\n                    </Collapsible>\r\n                    <Collapsible trigger='Κληρονομικό' transitionTime={200}>\r\n                        <Klironomiko />\r\n                    </Collapsible>\r\n                    <Collapsible trigger='Χειρουργεία' transitionTime={200}>\r\n                        <Surgeries />\r\n                    </Collapsible>\r\n                    {(patientContext.gender === 'female') && <Collapsible trigger='Γυναικολογικό' transitionTime={200}>\r\n                        <Gynaikologiko />\r\n                    </Collapsible>}\r\n\r\n                    {/* <Row className='justify-content-center '>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"allergies\">Αλλεργίες</label>\r\n                    </Col>\r\n                    <Col className='text-sm-start'>\r\n                        <textarea ref={allergiesInputRef} id='allergies' rows='3' defaultValue={loadAnamnistiko.allergies}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"klironomiko\" >Κληρονομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={cleronomicalInputRef} id='klironomiko' rows='3' defaultValue={loadAnamnistiko.cleronomical}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"fathers-name\">Ατομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={personalInputRef} id='fathers-name' rows='3' defaultValue={loadAnamnistiko.personal}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"surgeries\">Εγχειρήσεις-Τοκετοί</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={surgeriesInputRef} id='surgeries' rows='3' defaultValue={loadAnamnistiko.surgeries}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"drugs_use\">Χρόνια Χρήση Φαρμάκων</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={drug_usageInputRef} name='drug_usage' id='drugs_use' rows='3' defaultValue={loadAnamnistiko.drug_usage}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor='smoking-alcohol'>Κάπνισμα-Άλκοολ</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea id='smoking-alcohol'name='smoking_alcohol' rows='3' defaultValue={''}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"others\">Άλλα</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={othersInputRef} name='others' id='others' rows='4' defaultValue={loadAnamnistiko.others}/>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row >\r\n                        <Col  ><SaveButton/></Col>\r\n                    </Row> */}\r\n\r\n                </Container>\r\n                <SaveButton />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js",["526","527"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from './Klironomiko.module.css';\r\nimport KlironomikoOptions from \"./KlironomikoOptions\";\r\nimport Card from \"../../../UI/Card\";\r\n\r\nconst Klironomiko = () => {\r\n    return (\r\n        <Container className={classes.klironomiko}>\r\n            <Card className={classes.klironomikoCard}>\r\n                <KlironomikoOptions label='Z83.3: Οικογενειακό ιστορικό σακχαρώδους διαβήτη' />\r\n                <KlironomikoOptions label='Z83.4: Οικογενειακό ιστορικό άλλων ενδοκρινικών, διατροφικών και μεταβολικών νοσημάτων' />\r\n                <KlironomikoOptions label='E78.0 Αμιγής υπερχοληστερολαιμία' />\r\n                <KlironomikoOptions label='Z81.1: Οικογενειακό ιστορικό κατάχρησης οινοπνεύματος' />\r\n                <KlironomikoOptions label='Z81.2: Οικογενειακό ιστορικό κατάχρησης καπνού' />\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default Klironomiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js",["528"],"import { Container, Row, Col } from \"react-bootstrap\";\r\n// import classes from './Klironomiko.module.css';\r\n\r\nconst KlironomikoOptions = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col xs={1} className='text-end'><input type='checkbox'/></Col>\r\n            <Col cs={5} className='text-start'><label>{props.label}</label></Col>\r\n        </Row>\r\n    );\r\n}\r\nexport default KlironomikoOptions;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js",["529"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport SurgeriesList from \"./SurgeriesList\";\r\nimport SurgeriesForm from './SurgeriesForm';\r\nimport classes from './Surgeries.module.css'\r\nimport { useState } from \"react\";\r\n\r\nconst Surgeries = () => {\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    const [addSurgery, setAddSurgery] = useState(false);\r\n\r\n    const openSurgeryFormHandler = (event) => {\r\n        setAddSurgery(true)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div></div>\r\n            <Card className={classes.surgeriesCard}>\r\n                <Row>\r\n                    <Col className=\"text-center\" sm={4} md={2} >Τίτλος</Col>\r\n                    <Col className=\"text-center\">Τύπος Χειρουργείου</Col>\r\n                    <Col className=\"text-center\">Ημ/νια Εισόδου</Col>\r\n                    <Col className=\"text-center\">Ημ/νία Εξόδου</Col>\r\n                    <Col className=\"text-center\" sm={4} md={2}>Νοσοκομείο</Col>\r\n                    <Col sm={2}></Col>\r\n                </Row>\r\n                {addSurgery && <SurgeriesForm />}\r\n                <SurgeriesList surgeriesList={surgeriesList} addSurgery={addSurgery} />    \r\n                <Row><Col><button onClick={openSurgeryFormHandler}>Προσθήκη Χειρουργείου</button></Col></Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Surgeries;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js",["530"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport SurgeriesListItem from './SurgeriesListItem';\r\n\r\nconst SurgeriesList = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.surgeriesList.map(surgery => {\r\n                <SurgeriesListItem\r\n                title={surgery.title}\r\n                type={surgery.type}\r\n                dateOfEntrance={surgery.dateOfEntrance}\r\n                dateOfExit={surgery.dateOfExit}\r\n                hospital={surgery.hospital}\r\n                />\r\n            })}\r\n            {(props.surgeriesList.length === 0) && (!props.addSurgery) && <Row>\r\n                <Col className='text-center'>Η λίστα είναι άδεια,προσθέστε ένα χειρουργείο.</Col>\r\n            </Row>}\r\n            {/* <Row>\r\n                <Col className=\"text-center\">Αμυγδαλές</Col>\r\n                <Col className=\"text-center\">Αφαίρεση</Col>\r\n                <Col className=\"text-center\">25/3/2019</Col>\r\n                <Col className=\"text-center\">27/4/2019</Col>\r\n                <Col className=\"text-center\">Π.Γ.Ν Ρίου</Col>\r\n            </Row> */}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SurgeriesList;\r\n\r\n","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\NewVisit.js",["531","532"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../UI/Card\";\r\nimport classes from './NewVisit.module.css';\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport SaveButton from '../../UI/SaveButton'\r\nimport BMI from \"./BMI\";\r\nimport moment from \"moment\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst NewVisit = () => {\r\n    const [loadVisit, setLoadVisit] = useState('');\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    console.log(patientContext.gender);\r\n\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.newVisit}>\r\n            <Card className={classes.cardsNewVisit}>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Διάγνωση</label>\r\n                            <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Ημερομηνία*</label>\r\n                            <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={moment(new Date()).format('YYYY-MM-DD')} required />\r\n                            {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Γενική εικόνα</label>\r\n                            <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={classes.multiInputs}>\r\n                        <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                        <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                        <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                        <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                        <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                            <select ref={tektInputRef} name='tekt'>\r\n                                <option value={0} selected disabled hidden>Select an Option</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Col>\r\n                            <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                            <select ref={smktInputRef} name='smkt'>\r\n                                <option value={0} selected disabled hidden>Select an Option</option>\r\n                                <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Col>\r\n                            <label>Τελευταία Έμμηνος Ρύση</label>\r\n                            <input className={classes.date} type='date' />\r\n                        </Col>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'male') && <Row>\r\n                        <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                    </Row>}\r\n                    <Row>\r\n\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                    <Row >\r\n                        <Col sm='1' className='text-md-end'>\r\n                            <label htmlFor=\"others\">Άλλα</label>\r\n                        </Col>\r\n                        <Col sm='6'>\r\n                            <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col><SaveButton /></Col>\r\n                    </Row>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewVisit;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js",["533","534","535","536","537","538","539"],"import { useState, useEffect, useContext } from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../components/UI/Card\"\r\nimport Notifications, { notify } from 'react-notify-toast';\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\n\r\nconst EmailConfirmation = () => {\r\n    const [confirming, setConfirming] = useState(true);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId=useParams().userId;\r\n    console.log(userId)\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const completeSignup = async () => {\r\n            const responseData = await sendRequest(`http://localhost:5000/users/${userId}/login`, 'GET', null, { 'Content-Type': 'application/json' })\r\n            console.log(responseData);\r\n            auth.login(responseData.userId, responseData.token);\r\n        }\r\n        completeSignup();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Notifications />\r\n            <Card>\r\n                <Row>\r\n                    <Col className=\"text-center\"> Το e-mail επιβεβαιώθηκε επιτυχώς</Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EmailConfirmation;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js",["540","541","542","543","544"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Highlight, RefinementList, Configure, Pagination } from \"react-instantsearch-dom\";\r\n\r\n{/* <InstantSearch indexName=\"demo_ecommerce\" searchClient={searchClient}></InstantSearch> */ }\r\n\r\nconst Hit = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={1}>\r\n          <span className=\"hitCheckbox\">\r\n            {/* <Highlight hit={props.hit}><input type='checkbox' /></Highlight> */}\r\n            <input type='radio' name='condition' value={props.hit.code}/>\r\n          </span>\r\n        </Col>\r\n        <Col className=\"text-start\">\r\n\r\n          <label>\r\n            {/* <Highlight attribute=\"code\" hit={props.hit} /> */}\r\n            {props.hit.code}\r\n            <span>&nbsp;:&nbsp;&nbsp;</span>\r\n            {props.hit.condition}\r\n            {/* <Highlight attribute=\"condition\" hit={props.hit} /> */}\r\n\r\n          </label>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Hit;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js",["545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import algoliasearch from 'algoliasearch/lite';\r\nimport { InstantSearch, SearchBox, Configure, Highlight, Hits, createClassNames } from 'react-instantsearch-dom';\r\nimport Hit from \"../History/Hit\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Card from '../../UI/Card';\r\nimport SaveButton from '../../UI/SaveButton'\r\nimport FarmakaList from './FarmakaList';\r\nimport FarmakaForm from './FarmakaForm';\r\n// import SmallSAveButton from '../../UI/SmallSaveButton'\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport FarmakaHeader from './FarmakaHeader';\r\nimport classes from './Farmaka.module.css';\r\n\r\n\r\n\r\n\r\nconst Farmaka = () => {\r\n    const { sendRequest, isLoadding, error, clearError } = useHttpClient();\r\n\r\n  \r\n    const testInputRef = useRef();\r\n    const auth = useContext(AuthContext)\r\n\r\n\r\n\r\n    const [farmakaList, setFarmakaList] = useState([])\r\n    const [addFarmako, setAddFarmako] = useState(false);\r\n\r\n    const  addFarmakaHandler = (farmako) => {\r\n        setFarmakaList((prevState) => {\r\n            return [...prevState, farmako];\r\n        })\r\n        console.log(farmakaList)\r\n    }\r\n\r\n    const submitHandler = () => { }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card className={classes.farmakaCard}>\r\n                <FarmakaHeader />\r\n                {addFarmako && <FarmakaForm addFarmakaHandler={addFarmakaHandler} setAddFarmako={setAddFarmako}/>}\r\n                <FarmakaList addFarmako={addFarmako} farmakaList={farmakaList} />\r\n\r\n                <Row>\r\n                    {!addFarmako && <Col><button className={classes.addFarmako} onClick={() => { setAddFarmako(true) }}>Προσθήκη Φαρμάκου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n            <Row>\r\n                <Col>\r\n                    {(farmakaList.length>0)&&<SaveButton onClick={submitHandler} />}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Farmaka;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js",["560","561","562","563"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\n\r\nimport classes from './ConditionsForm.module.css';\r\nimport ConditionsFinder from \"./ConditionsFinder\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\n\r\nconst ConditionsForm = (props) => {\r\n    const [showHits, setShowHits] = useState(true);\r\n    const [selectedCondition, setSelectedCondition] = useState({code:'',condition:''})\r\n    const stateInputRef = useRef();\r\n    const severityInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    console.log(selectedCondition)\r\n\r\n    const submitHandler = (event) => {\r\n        console.log('submit conditionform')\r\n        let condition = {\r\n            name: selectedCondition.code + ':' + selectedCondition.condition,\r\n            state:stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            id: uuid()\r\n        }\r\n        console.log(condition)\r\n        props.addConditionHandler(condition);\r\n        props.setAddCondition(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.conditionsForm}>\r\n            <Col sm={4}>\r\n                <ConditionsFinder setSelectedCondition={setSelectedCondition}/>\r\n            </Col>\r\n            <Col sm={2} className='text-center'>\r\n                <select ref={stateInputRef}>\r\n                    <option>Ύφεση</option>\r\n                    <option>Υποτροπή</option>\r\n                    <option>Χρόνια</option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col sm={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n            <Col sm={2}><input type='date' ref={dateOfHealingInputRef} /></Col>\r\n            <Col className='text-start' sm={2}>\r\n                {!!selectedCondition && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddCondition(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default ConditionsForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js",["564","565","566"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\nimport classes from './SurgeriesForm.module.css';\r\n\r\n\r\nconst SurgeriesForm = (props) => {\r\n\r\n    const nameInputRef = useRef();\r\n    const typeInputRef = useRef();\r\n    const dateOfEntranceInputRef = useRef();\r\n    const dateOfExitInputRef = useRef();\r\n    const hospitalInputRef = useRef();\r\n\r\n    const submitHandler = (event) => {\r\n        console.log(nameInputRef.current.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.conditionsForm}>\r\n            <Col sm={4} md={2}>\r\n                <input type='text' name='title' />\r\n            </Col>\r\n            <Col className='text-center'>\r\n                {/* <label>Κατάσταση</label> */}\r\n                <select ref={nameInputRef}>\r\n                    <option>Σταθερή</option>\r\n                    <option>Υποτροπίαση</option>\r\n                    <option>Χρόνια</option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col ><input type='date' ref={dateOfEntranceInputRef} /></Col>\r\n            <Col ><input type='date' ref={dateOfExitInputRef} /></Col>\r\n            <Col className='text-center' sm={4} md={2}>\r\n                <input type='text' name='hospital' ref={hospitalInputRef} />\r\n            </Col>\r\n            <Col className='text-start' >\r\n                <SmallSaveButton onClick={submitHandler} />\r\n                <SmallDeleteButton onClick={() => { }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default SurgeriesForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js",["567"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../UI/Card\"\r\nimport FilesHeader from \"./FilesHeaders\"\r\nimport FilesList from './FilesList'\r\nimport FilesForm from \"./FileForm\"\r\nimport classes from './Files.module.css';\r\nimport { useState, useContext } from \"react\"\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport SaveButton from '../../UI/SaveButton';\r\n\r\nconst Files = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [filesList, setFilesList] = useState([])\r\n    const [addFile, setAddFile] = useState(false);\r\n\r\n    const submitHandler = () => { }\r\n\r\n\r\n    const addFileHandler = (file) => {\r\n        setFilesList((prevState) => {\r\n            return [...prevState, file];\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card className={classes.filesCard}>\r\n                <FilesHeader />\r\n                {addFile && <FilesForm addFileHandler={addFileHandler} setAddFile={setAddFile} />}\r\n                <FilesList filesList={filesList} addFile={addFile} />\r\n\r\n                <Row>\r\n                    {!addFile && <Col><button className={classes.addFile} onClick={() => { setAddFile(true) }}>Προσθήκη Αρχείου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n            <Row>\r\n                <Col>\r\n                    {(filesList.length > 0) && <SaveButton onClick={submitHandler} />}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Files;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js",["568"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js",["569"],"import { useRef } from \"react\";\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useState } from \"react\";\r\nimport classes from './FileUploader.module.css';\r\n\r\nconst FileUploader = (props) => {\r\n\r\n    const fileInput = useRef(null)\r\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n        onDrop: files => { props.setSelectedFile(files[0]) },\r\n        maxFiles: 1\r\n    });\r\n\r\n\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const handleFileInput = (e) => {\r\n        console.log(e.target.files[0]);\r\n        console.log(fileInput.current.value)\r\n        console.log('here')\r\n        // const file = e.target.files[0];\r\n        // onFileSelect(e.target.files[0])\r\n        // props.onFileSelectSuccess(file);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.container}>\r\n            <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} ref={fileInput} onChange={handleFileInput} />\r\n                <p>Σύρετε εδώ ένα αρχείο , ή κλικάρετε για να επιλέξετε</p>\r\n            </div>\r\n            <aside>\r\n                <h5>Αρχείο</h5>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n        // <div className=\"file-uploader\">\r\n        //     <input type=\"file\" onChange={handleFileInput} />\r\n        //     <button onClick={e => fileInput.current && fileInput.current.click()} className=\"btn btn-primary\"></button>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default FileUploader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js",["570","571"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef } from \"react\";\r\n// import FileUploader from \"./FileUploader\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FarmakaForm.module.css';\r\nimport FarmakoFinder from \"./FarmakoFinder\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nconst FarmakaForm = (props) => {\r\n    const [selectedFarmako, setSelectedFarmako] = useState({name:'',ATC_name:''});\r\n\r\n\r\n    const nameInputRef = useRef();\r\n    const typeInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = (event) => {\r\n        console.log('submit farmakoform')\r\n        let farmako = {\r\n            name: selectedFarmako.name,\r\n            ATC_name: selectedFarmako.ATC_name ,\r\n            dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n            dateOfEnd: dateOfVisitInputRef.current.value,\r\n            id: uuid()\r\n        }\r\n        console.log(farmako)\r\n        props.addFarmakaHandler(farmako);\r\n        props.setAddFarmako(false);\r\n        // console.log(nameInputRef.current.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.farmakoForm}>\r\n            <Col sm={8} md={6} className='text-center'>\r\n                <FarmakoFinder setSelectedFarmako={setSelectedFarmako} />\r\n                {/* <FileUploader addFileHandler={props.addFileHandler} setSelectedFile={setSelectedFile} /> */}\r\n                {/* <input type='file' name='title' ref={nameInputRef} /> */}\r\n            </Col>\r\n           \r\n\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfVisitInputRef}  /></Col>\r\n            <Col className='text-center' sm={2}>\r\n                {!!selectedFarmako && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddFarmako(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default FarmakaForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js",["572","573","574","575","576"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js",["577","578","579","580","581"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js",["582","583","584","585","586"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js",["587","588","589","590","591"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js",["592","593","594","595"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js",["596","597","598","599","600","601","602"],{"ruleId":"603","replacedBy":"604"},{"ruleId":"605","replacedBy":"606"},{"ruleId":"607","severity":1,"message":"608","line":27,"column":28,"nodeType":"609","endLine":27,"endColumn":39},{"ruleId":"607","severity":1,"message":"608","line":34,"column":25,"nodeType":"609","endLine":34,"endColumn":36},{"ruleId":"610","severity":1,"message":"611","line":3,"column":8,"nodeType":"609","messageId":"612","endLine":3,"endColumn":26},{"ruleId":"607","severity":1,"message":"613","line":66,"column":8,"nodeType":"614","endLine":66,"endColumn":28,"suggestions":"615"},{"ruleId":"610","severity":1,"message":"616","line":69,"column":14,"nodeType":"609","messageId":"612","endLine":69,"endColumn":31},{"ruleId":"610","severity":1,"message":"617","line":7,"column":12,"nodeType":"609","messageId":"612","endLine":7,"endColumn":16},{"ruleId":"610","severity":1,"message":"618","line":8,"column":12,"nodeType":"609","messageId":"612","endLine":8,"endColumn":19},{"ruleId":"610","severity":1,"message":"619","line":9,"column":12,"nodeType":"609","messageId":"612","endLine":9,"endColumn":21},{"ruleId":"610","severity":1,"message":"620","line":10,"column":12,"nodeType":"609","messageId":"612","endLine":10,"endColumn":15},{"ruleId":"610","severity":1,"message":"621","line":11,"column":12,"nodeType":"609","messageId":"612","endLine":11,"endColumn":16},{"ruleId":"610","severity":1,"message":"622","line":12,"column":11,"nodeType":"609","messageId":"612","endLine":12,"endColumn":18},{"ruleId":"610","severity":1,"message":"623","line":13,"column":14,"nodeType":"609","messageId":"612","endLine":13,"endColumn":31},{"ruleId":"610","severity":1,"message":"624","line":17,"column":14,"nodeType":"609","messageId":"612","endLine":17,"endColumn":34},{"ruleId":"610","severity":1,"message":"625","line":21,"column":14,"nodeType":"609","messageId":"612","endLine":21,"endColumn":36},{"ruleId":"610","severity":1,"message":"626","line":25,"column":14,"nodeType":"609","messageId":"612","endLine":25,"endColumn":30},{"ruleId":"610","severity":1,"message":"627","line":29,"column":14,"nodeType":"609","messageId":"612","endLine":29,"endColumn":31},{"ruleId":"610","severity":1,"message":"628","line":33,"column":14,"nodeType":"609","messageId":"612","endLine":33,"endColumn":26},{"ruleId":"610","severity":1,"message":"629","line":3,"column":8,"nodeType":"609","messageId":"612","endLine":3,"endColumn":14},{"ruleId":"610","severity":1,"message":"630","line":9,"column":8,"nodeType":"609","messageId":"612","endLine":9,"endColumn":14},{"ruleId":"610","severity":1,"message":"631","line":10,"column":8,"nodeType":"609","messageId":"612","endLine":10,"endColumn":17},{"ruleId":"610","severity":1,"message":"632","line":11,"column":8,"nodeType":"609","messageId":"612","endLine":11,"endColumn":15},{"ruleId":"610","severity":1,"message":"633","line":19,"column":20,"nodeType":"609","messageId":"612","endLine":19,"endColumn":29},{"ruleId":"610","severity":1,"message":"634","line":25,"column":27,"nodeType":"609","messageId":"612","endLine":25,"endColumn":43},{"ruleId":"610","severity":1,"message":"635","line":28,"column":11,"nodeType":"609","messageId":"612","endLine":28,"endColumn":15},{"ruleId":"610","severity":1,"message":"636","line":29,"column":32,"nodeType":"609","messageId":"612","endLine":29,"endColumn":43},{"ruleId":"610","severity":1,"message":"633","line":9,"column":20,"nodeType":"609","messageId":"612","endLine":9,"endColumn":29},{"ruleId":"610","severity":1,"message":"637","line":15,"column":8,"nodeType":"609","messageId":"612","endLine":15,"endColumn":12},{"ruleId":"610","severity":1,"message":"638","line":20,"column":21,"nodeType":"609","messageId":"612","endLine":20,"endColumn":31},{"ruleId":"610","severity":1,"message":"639","line":21,"column":26,"nodeType":"609","messageId":"612","endLine":21,"endColumn":41},{"ruleId":"610","severity":1,"message":"622","line":31,"column":11,"nodeType":"609","messageId":"612","endLine":31,"endColumn":18},{"ruleId":"610","severity":1,"message":"640","line":33,"column":37,"nodeType":"609","messageId":"612","endLine":33,"endColumn":48},{"ruleId":"610","severity":1,"message":"641","line":59,"column":17,"nodeType":"609","messageId":"612","endLine":59,"endColumn":23},{"ruleId":"610","severity":1,"message":"642","line":130,"column":23,"nodeType":"609","messageId":"612","endLine":130,"endColumn":35},{"ruleId":"643","severity":1,"message":"644","line":144,"column":24,"nodeType":"645","messageId":"646","endLine":144,"endColumn":26},{"ruleId":"643","severity":1,"message":"644","line":144,"column":35,"nodeType":"645","messageId":"646","endLine":144,"endColumn":37},{"ruleId":"607","severity":1,"message":"647","line":42,"column":8,"nodeType":"614","endLine":42,"endColumn":37,"suggestions":"648"},{"ruleId":"610","severity":1,"message":"649","line":22,"column":11,"nodeType":"609","messageId":"612","endLine":22,"endColumn":28},{"ruleId":"607","severity":1,"message":"647","line":42,"column":8,"nodeType":"614","endLine":42,"endColumn":37,"suggestions":"650"},{"ruleId":"607","severity":1,"message":"651","line":35,"column":8,"nodeType":"614","endLine":35,"endColumn":21,"suggestions":"652"},{"ruleId":"610","severity":1,"message":"653","line":10,"column":21,"nodeType":"609","messageId":"612","endLine":10,"endColumn":31},{"ruleId":"607","severity":1,"message":"654","line":51,"column":8,"nodeType":"614","endLine":51,"endColumn":10,"suggestions":"655"},{"ruleId":"607","severity":1,"message":"656","line":67,"column":8,"nodeType":"614","endLine":67,"endColumn":10,"suggestions":"657"},{"ruleId":"658","severity":1,"message":"659","line":23,"column":5,"nodeType":"660","messageId":"661","endLine":39,"endColumn":6},{"ruleId":"658","severity":1,"message":"659","line":74,"column":9,"nodeType":"660","messageId":"661","endLine":91,"endColumn":10},{"ruleId":"607","severity":1,"message":"651","line":42,"column":8,"nodeType":"614","endLine":42,"endColumn":28,"suggestions":"662"},{"ruleId":"607","severity":1,"message":"651","line":48,"column":8,"nodeType":"614","endLine":48,"endColumn":21,"suggestions":"663"},{"ruleId":"610","severity":1,"message":"664","line":76,"column":15,"nodeType":"609","messageId":"612","endLine":76,"endColumn":23},{"ruleId":"610","severity":1,"message":"665","line":20,"column":12,"nodeType":"609","messageId":"612","endLine":20,"endColumn":24},{"ruleId":"610","severity":1,"message":"666","line":20,"column":26,"nodeType":"609","messageId":"612","endLine":20,"endColumn":41},{"ruleId":"610","severity":1,"message":"667","line":21,"column":12,"nodeType":"609","messageId":"612","endLine":21,"endColumn":24},{"ruleId":"610","severity":1,"message":"668","line":21,"column":26,"nodeType":"609","messageId":"612","endLine":21,"endColumn":41},{"ruleId":"607","severity":1,"message":"651","line":36,"column":8,"nodeType":"614","endLine":36,"endColumn":21,"suggestions":"669"},{"ruleId":"610","severity":1,"message":"633","line":8,"column":22,"nodeType":"609","messageId":"612","endLine":8,"endColumn":31},{"ruleId":"610","severity":1,"message":"670","line":22,"column":31,"nodeType":"609","messageId":"612","endLine":22,"endColumn":41},{"ruleId":"603","replacedBy":"671"},{"ruleId":"605","replacedBy":"672"},{"ruleId":"673","severity":1,"message":"674","line":19,"column":49,"nodeType":"675","endLine":19,"endColumn":136},{"ruleId":"610","severity":1,"message":"676","line":2,"column":46,"nodeType":"609","messageId":"612","endLine":2,"endColumn":54},{"ruleId":"610","severity":1,"message":"637","line":5,"column":8,"nodeType":"609","messageId":"612","endLine":5,"endColumn":12},{"ruleId":"610","severity":1,"message":"633","line":7,"column":20,"nodeType":"609","messageId":"612","endLine":7,"endColumn":29},{"ruleId":"610","severity":1,"message":"635","line":17,"column":11,"nodeType":"609","messageId":"612","endLine":17,"endColumn":15},{"ruleId":"610","severity":1,"message":"677","line":19,"column":12,"nodeType":"609","messageId":"612","endLine":19,"endColumn":22},{"ruleId":"610","severity":1,"message":"678","line":19,"column":24,"nodeType":"609","messageId":"612","endLine":19,"endColumn":37},{"ruleId":"610","severity":1,"message":"640","line":21,"column":37,"nodeType":"609","messageId":"612","endLine":21,"endColumn":48},{"ruleId":"610","severity":1,"message":"642","line":50,"column":23,"nodeType":"609","messageId":"612","endLine":50,"endColumn":35},{"ruleId":"610","severity":1,"message":"642","line":60,"column":23,"nodeType":"609","messageId":"612","endLine":60,"endColumn":35},{"ruleId":"607","severity":1,"message":"613","line":42,"column":8,"nodeType":"614","endLine":42,"endColumn":21,"suggestions":"679"},{"ruleId":"610","severity":1,"message":"642","line":96,"column":19,"nodeType":"609","messageId":"612","endLine":96,"endColumn":31},{"ruleId":"610","severity":1,"message":"680","line":1,"column":21,"nodeType":"609","messageId":"612","endLine":1,"endColumn":24},{"ruleId":"610","severity":1,"message":"681","line":1,"column":26,"nodeType":"609","messageId":"612","endLine":1,"endColumn":29},{"ruleId":"610","severity":1,"message":"633","line":6,"column":20,"nodeType":"609","messageId":"612","endLine":6,"endColumn":29},{"ruleId":"610","severity":1,"message":"636","line":19,"column":24,"nodeType":"609","messageId":"612","endLine":19,"endColumn":35},{"ruleId":"610","severity":1,"message":"635","line":21,"column":11,"nodeType":"609","messageId":"612","endLine":21,"endColumn":15},{"ruleId":"610","severity":1,"message":"682","line":24,"column":12,"nodeType":"609","messageId":"612","endLine":24,"endColumn":27},{"ruleId":"610","severity":1,"message":"683","line":24,"column":29,"nodeType":"609","messageId":"612","endLine":24,"endColumn":47},{"ruleId":"610","severity":1,"message":"684","line":25,"column":11,"nodeType":"609","messageId":"612","endLine":25,"endColumn":28},{"ruleId":"610","severity":1,"message":"685","line":26,"column":11,"nodeType":"609","messageId":"612","endLine":26,"endColumn":31},{"ruleId":"610","severity":1,"message":"686","line":27,"column":11,"nodeType":"609","messageId":"612","endLine":27,"endColumn":27},{"ruleId":"610","severity":1,"message":"687","line":28,"column":11,"nodeType":"609","messageId":"612","endLine":28,"endColumn":28},{"ruleId":"610","severity":1,"message":"688","line":29,"column":11,"nodeType":"609","messageId":"612","endLine":29,"endColumn":29},{"ruleId":"610","severity":1,"message":"689","line":30,"column":11,"nodeType":"609","messageId":"612","endLine":30,"endColumn":25},{"ruleId":"610","severity":1,"message":"681","line":1,"column":21,"nodeType":"609","messageId":"612","endLine":1,"endColumn":24},{"ruleId":"610","severity":1,"message":"680","line":1,"column":26,"nodeType":"609","messageId":"612","endLine":1,"endColumn":29},{"ruleId":"610","severity":1,"message":"690","line":1,"column":10,"nodeType":"609","messageId":"612","endLine":1,"endColumn":19},{"ruleId":"610","severity":1,"message":"691","line":9,"column":27,"nodeType":"609","messageId":"612","endLine":9,"endColumn":43},{"ruleId":"692","severity":1,"message":"693","line":7,"column":46,"nodeType":"694","messageId":"695","endLine":7,"endColumn":48},{"ruleId":"610","severity":1,"message":"696","line":13,"column":23,"nodeType":"609","messageId":"612","endLine":13,"endColumn":35},{"ruleId":"610","severity":1,"message":"635","line":19,"column":11,"nodeType":"609","messageId":"612","endLine":19,"endColumn":15},{"ruleId":"610","severity":1,"message":"697","line":4,"column":25,"nodeType":"609","messageId":"612","endLine":4,"endColumn":31},{"ruleId":"610","severity":1,"message":"698","line":11,"column":12,"nodeType":"609","messageId":"612","endLine":11,"endColumn":22},{"ruleId":"610","severity":1,"message":"699","line":11,"column":24,"nodeType":"609","messageId":"612","endLine":11,"endColumn":37},{"ruleId":"610","severity":1,"message":"700","line":13,"column":13,"nodeType":"609","messageId":"612","endLine":13,"endColumn":22},{"ruleId":"610","severity":1,"message":"701","line":13,"column":24,"nodeType":"609","messageId":"612","endLine":13,"endColumn":29},{"ruleId":"610","severity":1,"message":"670","line":13,"column":44,"nodeType":"609","messageId":"612","endLine":13,"endColumn":54},{"ruleId":"607","severity":1,"message":"702","line":27,"column":8,"nodeType":"614","endLine":27,"endColumn":10,"suggestions":"703"},{"ruleId":"610","severity":1,"message":"704","line":2,"column":10,"nodeType":"609","messageId":"612","endLine":2,"endColumn":19},{"ruleId":"610","severity":1,"message":"705","line":2,"column":21,"nodeType":"609","messageId":"612","endLine":2,"endColumn":35},{"ruleId":"610","severity":1,"message":"706","line":2,"column":37,"nodeType":"609","messageId":"612","endLine":2,"endColumn":46},{"ruleId":"610","severity":1,"message":"707","line":2,"column":48,"nodeType":"609","messageId":"612","endLine":2,"endColumn":58},{"ruleId":"708","severity":1,"message":"709","line":4,"column":1,"nodeType":"710","messageId":"711","endLine":4,"endColumn":96},{"ruleId":"610","severity":1,"message":"712","line":1,"column":8,"nodeType":"609","messageId":"612","endLine":1,"endColumn":21},{"ruleId":"610","severity":1,"message":"713","line":2,"column":10,"nodeType":"609","messageId":"612","endLine":2,"endColumn":23},{"ruleId":"610","severity":1,"message":"714","line":2,"column":25,"nodeType":"609","messageId":"612","endLine":2,"endColumn":34},{"ruleId":"610","severity":1,"message":"706","line":2,"column":36,"nodeType":"609","messageId":"612","endLine":2,"endColumn":45},{"ruleId":"610","severity":1,"message":"704","line":2,"column":47,"nodeType":"609","messageId":"612","endLine":2,"endColumn":56},{"ruleId":"610","severity":1,"message":"715","line":2,"column":58,"nodeType":"609","messageId":"612","endLine":2,"endColumn":62},{"ruleId":"610","severity":1,"message":"716","line":2,"column":64,"nodeType":"609","messageId":"612","endLine":2,"endColumn":80},{"ruleId":"610","severity":1,"message":"717","line":3,"column":8,"nodeType":"609","messageId":"612","endLine":3,"endColumn":11},{"ruleId":"610","severity":1,"message":"633","line":12,"column":40,"nodeType":"609","messageId":"612","endLine":12,"endColumn":49},{"ruleId":"610","severity":1,"message":"636","line":21,"column":13,"nodeType":"609","messageId":"612","endLine":21,"endColumn":24},{"ruleId":"610","severity":1,"message":"718","line":21,"column":26,"nodeType":"609","messageId":"612","endLine":21,"endColumn":36},{"ruleId":"610","severity":1,"message":"701","line":21,"column":38,"nodeType":"609","messageId":"612","endLine":21,"endColumn":43},{"ruleId":"610","severity":1,"message":"670","line":21,"column":45,"nodeType":"609","messageId":"612","endLine":21,"endColumn":55},{"ruleId":"610","severity":1,"message":"719","line":24,"column":11,"nodeType":"609","messageId":"612","endLine":24,"endColumn":23},{"ruleId":"610","severity":1,"message":"635","line":25,"column":11,"nodeType":"609","messageId":"612","endLine":25,"endColumn":15},{"ruleId":"610","severity":1,"message":"690","line":1,"column":10,"nodeType":"609","messageId":"612","endLine":1,"endColumn":19},{"ruleId":"610","severity":1,"message":"720","line":13,"column":12,"nodeType":"609","messageId":"612","endLine":13,"endColumn":20},{"ruleId":"610","severity":1,"message":"721","line":13,"column":22,"nodeType":"609","messageId":"612","endLine":13,"endColumn":33},{"ruleId":"610","severity":1,"message":"722","line":16,"column":11,"nodeType":"609","messageId":"612","endLine":16,"endColumn":27},{"ruleId":"610","severity":1,"message":"690","line":1,"column":10,"nodeType":"609","messageId":"612","endLine":1,"endColumn":19},{"ruleId":"610","severity":1,"message":"723","line":2,"column":10,"nodeType":"609","messageId":"612","endLine":2,"endColumn":18},{"ruleId":"610","severity":1,"message":"724","line":11,"column":11,"nodeType":"609","messageId":"612","endLine":11,"endColumn":23},{"ruleId":"610","severity":1,"message":"635","line":12,"column":11,"nodeType":"609","messageId":"612","endLine":12,"endColumn":15},{"ruleId":"610","severity":1,"message":"725","line":17,"column":11,"nodeType":"609","messageId":"612","endLine":17,"endColumn":23},{"ruleId":"610","severity":1,"message":"723","line":3,"column":10,"nodeType":"609","messageId":"612","endLine":3,"endColumn":18},{"ruleId":"610","severity":1,"message":"725","line":15,"column":11,"nodeType":"609","messageId":"612","endLine":15,"endColumn":23},{"ruleId":"610","severity":1,"message":"724","line":16,"column":11,"nodeType":"609","messageId":"612","endLine":16,"endColumn":23},{"ruleId":"610","severity":1,"message":"720","line":13,"column":12,"nodeType":"609","messageId":"612","endLine":13,"endColumn":20},{"ruleId":"610","severity":1,"message":"721","line":13,"column":22,"nodeType":"609","messageId":"612","endLine":13,"endColumn":33},{"ruleId":"610","severity":1,"message":"701","line":19,"column":26,"nodeType":"609","messageId":"612","endLine":19,"endColumn":31},{"ruleId":"610","severity":1,"message":"670","line":19,"column":33,"nodeType":"609","messageId":"612","endLine":19,"endColumn":43},{"ruleId":"607","severity":1,"message":"726","line":43,"column":8,"nodeType":"614","endLine":43,"endColumn":42,"suggestions":"727"},{"ruleId":"610","severity":1,"message":"720","line":12,"column":12,"nodeType":"609","messageId":"612","endLine":12,"endColumn":20},{"ruleId":"610","severity":1,"message":"721","line":12,"column":22,"nodeType":"609","messageId":"612","endLine":12,"endColumn":33},{"ruleId":"610","severity":1,"message":"701","line":17,"column":26,"nodeType":"609","messageId":"612","endLine":17,"endColumn":31},{"ruleId":"610","severity":1,"message":"670","line":17,"column":33,"nodeType":"609","messageId":"612","endLine":17,"endColumn":43},{"ruleId":"607","severity":1,"message":"726","line":33,"column":8,"nodeType":"614","endLine":33,"endColumn":37,"suggestions":"728"},{"ruleId":"610","severity":1,"message":"681","line":1,"column":21,"nodeType":"609","messageId":"612","endLine":1,"endColumn":24},{"ruleId":"610","severity":1,"message":"680","line":1,"column":26,"nodeType":"609","messageId":"612","endLine":1,"endColumn":29},{"ruleId":"610","severity":1,"message":"633","line":2,"column":20,"nodeType":"609","messageId":"612","endLine":2,"endColumn":29},{"ruleId":"610","severity":1,"message":"729","line":2,"column":31,"nodeType":"609","messageId":"612","endLine":2,"endColumn":41},{"ruleId":"610","severity":1,"message":"637","line":4,"column":8,"nodeType":"609","messageId":"612","endLine":4,"endColumn":12},{"ruleId":"610","severity":1,"message":"696","line":13,"column":23,"nodeType":"609","messageId":"612","endLine":13,"endColumn":35},{"ruleId":"610","severity":1,"message":"635","line":19,"column":11,"nodeType":"609","messageId":"612","endLine":19,"endColumn":15},{"ruleId":"610","severity":1,"message":"730","line":25,"column":11,"nodeType":"609","messageId":"612","endLine":25,"endColumn":28},{"ruleId":"610","severity":1,"message":"689","line":32,"column":11,"nodeType":"609","messageId":"612","endLine":32,"endColumn":25},{"ruleId":"610","severity":1,"message":"731","line":49,"column":11,"nodeType":"609","messageId":"612","endLine":49,"endColumn":24},{"ruleId":"610","severity":1,"message":"690","line":1,"column":10,"nodeType":"609","messageId":"612","endLine":1,"endColumn":19},{"ruleId":"610","severity":1,"message":"720","line":13,"column":12,"nodeType":"609","messageId":"612","endLine":13,"endColumn":20},{"ruleId":"610","severity":1,"message":"721","line":13,"column":22,"nodeType":"609","messageId":"612","endLine":13,"endColumn":33},{"ruleId":"610","severity":1,"message":"722","line":16,"column":11,"nodeType":"609","messageId":"612","endLine":16,"endColumn":27},{"ruleId":"610","severity":1,"message":"690","line":1,"column":10,"nodeType":"609","messageId":"612","endLine":1,"endColumn":19},{"ruleId":"610","severity":1,"message":"732","line":2,"column":20,"nodeType":"609","messageId":"612","endLine":2,"endColumn":26},{"ruleId":"610","severity":1,"message":"720","line":11,"column":12,"nodeType":"609","messageId":"612","endLine":11,"endColumn":20},{"ruleId":"610","severity":1,"message":"721","line":11,"column":22,"nodeType":"609","messageId":"612","endLine":11,"endColumn":33},{"ruleId":"610","severity":1,"message":"733","line":12,"column":31,"nodeType":"609","messageId":"612","endLine":12,"endColumn":51},{"ruleId":"610","severity":1,"message":"734","line":13,"column":12,"nodeType":"609","messageId":"612","endLine":13,"endColumn":27},{"ruleId":"610","severity":1,"message":"731","line":18,"column":11,"nodeType":"609","messageId":"612","endLine":18,"endColumn":24},"no-native-reassign",["735"],"no-negated-in-lhs",["736"],"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'PatientsListHeader' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.","ArrayExpression",["737"],"'addPatientHandler' is defined but never used.","'name' is assigned a value but never used.","'sirname' is assigned a value but never used.","'diagnosis' is assigned a value but never used.","'tel' is assigned a value but never used.","'amka' is assigned a value but never used.","'history' is assigned a value but never used.","'changeNameHandler' is defined but never used.","'changeSirnameHandler' is defined but never used.","'changeDiagnosisHandler' is defined but never used.","'changeTelHandler' is defined but never used.","'changeAmkaHandler' is defined but never used.","'clearHandler' is defined but never used.","'Header' is defined but never used.","'Visits' is defined but never used.","'PatientId' is defined but never used.","'classes' is defined but never used.","'useEffect' is defined but never used.","'setLoadedPatient' is assigned a value but never used.","'auth' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'Card' is defined but never used.","'SetLoading' is assigned a value but never used.","'setLoadedBasics' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'setAge' is assigned a value but never used.","'responseData' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'fetchVisit', 'params.labId', and 'params.type'. Either include them or remove the dependency array.",["738"],"'visitDateInputRef' is assigned a value but never used.",["739"],"React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["740"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'loadVisit', and 'sendRequest'. Either include them or remove the dependency array. You can also do a functional update 'setLoadVisit(l => ...)' if you only need 'loadVisit' in the 'setLoadVisit' call.",["741"],"React Hook useEffect has missing dependencies: 'fetchVisit' and 'params.visitId'. Either include them or remove the dependency array.",["742"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["743"],["744"],"'response' is assigned a value but never used.","'emailLoading' is assigned a value but never used.","'setEmailLoading' is assigned a value but never used.","'sendingEmail' is assigned a value but never used.","'setSendingEmail' is assigned a value but never used.",["745"],"'clearError' is assigned a value but never used.",["735"],["736"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'loadedFile' is assigned a value but never used.","'setLoadedFile' is assigned a value but never used.",["746"],"'Col' is defined but never used.","'Row' is defined but never used.","'loadAnamnistiko' is assigned a value but never used.","'setLoadAnamnistiko' is assigned a value but never used.","'allergiesInputRef' is assigned a value but never used.","'cleronomicalInputRef' is assigned a value but never used.","'personalInputRef' is assigned a value but never used.","'surgeriesInputRef' is assigned a value but never used.","'drug_usageInputRef' is assigned a value but never used.","'othersInputRef' is assigned a value but never used.","'Container' is defined but never used.","'setSurgeriesList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setLoadVisit' is assigned a value but never used.","'notify' is defined but never used.","'confirming' is assigned a value but never used.","'setConfirming' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'sendRequest', and 'userId'. Either include them or remove the dependency array.",["747"],"'Highlight' is defined but never used.","'RefinementList' is defined but never used.","'Configure' is defined but never used.","'Pagination' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'algoliasearch' is defined but never used.","'InstantSearch' is defined but never used.","'SearchBox' is defined but never used.","'Hits' is defined but never used.","'createClassNames' is defined but never used.","'Hit' is defined but never used.","'isLoadding' is assigned a value but never used.","'testInputRef' is assigned a value but never used.","'showHits' is assigned a value but never used.","'setShowHits' is assigned a value but never used.","'severityInputRef' is assigned a value but never used.","'useState' is defined but never used.","'typeInputRef' is assigned a value but never used.","'nameInputRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["748"],["749"],"'useContext' is defined but never used.","'diagnosisInputRef' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'useRef' is defined but never used.","'setSelectedCondition' is assigned a value but never used.","'selectedFarmako' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"752","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"755","fix":"763"},{"desc":"755","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest, state]",{"range":"773","text":"774"},"Update the dependencies array to be: [props.patientId, auth.token, params.labId, params.type, fetchVisit]",{"range":"775","text":"776"},{"range":"777","text":"776"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"778","text":"779"},"Update the dependencies array to be: [auth.token, loadVisit, sendRequest]",{"range":"780","text":"781"},"Update the dependencies array to be: [fetchVisit, params.visitId]",{"range":"782","text":"783"},"Update the dependencies array to be: [sendRequest, query, props.patientId, auth.token]",{"range":"784","text":"785"},{"range":"786","text":"779"},{"range":"787","text":"779"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest]",{"range":"788","text":"789"},"Update the dependencies array to be: [auth, sendRequest, userId]",{"range":"790","text":"791"},"Update the dependencies array to be: [drugInput, sendRequest, atcInput, auth.token]",{"range":"792","text":"793"},"Update the dependencies array to be: [auth.token, conditionInput, sendRequest]",{"range":"794","text":"795"},[2682,2702],"[auth.token, auth.userId, sendRequest, state]",[2155,2184],"[props.patientId, auth.token, params.labId, params.type, fetchVisit]",[1967,1996],[1357,1370],"[auth.token, props.patientId, sendRequest]",[2265,2267],"[auth.token, loadVisit, sendRequest]",[3168,3170],"[fetchVisit, params.visitId]",[1663,1683],"[sendRequest, query, props.patientId, auth.token]",[1647,1660],[1269,1282],[1748,1761],"[auth.token, auth.userId, sendRequest]",[1029,1031],"[auth, sendRequest, userId]",[1595,1629],"[drugInput, sendRequest, atcInput, auth.token]",[1126,1155],"[auth.token, conditionInput, sendRequest]"]