[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js":"48","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js":"49","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js":"50","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js":"51","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js":"52","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js":"53","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js":"54","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js":"55","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js":"56","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js":"57","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js":"58","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js":"59","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js":"60","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js":"61","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js":"62","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js":"63","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js":"64","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js":"65","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js":"66","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js":"67","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js":"68","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js":"69","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js":"70","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js":"71","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js":"72","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js":"73","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js":"74","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js":"75","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js":"76","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js":"77","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js":"78","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js":"79","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js":"80","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js":"81","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyForm.js":"82","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyList.js":"83","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyListItem.js":"84","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\PatientProfile.js":"85","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\BasicInfo.js":"86","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsList.js":"87","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsInfo.js":"88","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsNavBar.js":"89","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Atomiko\\Atomiko.js":"90","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Surgeries\\SurgeriesInfo.js":"91","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Farmaka\\FarmakaInfo.js":"92","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Files\\FilesInfo.js":"93","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\AllergiesLoaded.js":"94","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoLoaded.js":"95","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\AllergiesInfo\\AllergiesInfo.js":"96","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\KlironomikoInfo\\KlironomikoInfo.js":"97","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListItem.js":"98","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListHeader.js":"99","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\Ozoi.js":"100","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiHeader.js":"101","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzosForm.js":"102","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiList.js":"103","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiListItem.js":"104","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ViewButton.js":"105","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiEditForm.js":"106","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisEditForm.js":"107","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionEditForm.js":"108","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\GynaikologikoInfo\\GynaikologikoInfo.js":"109","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Statistics.js":"110","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Biometrics.js":"111","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\OzoiStats.js":"112","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditFormButton.js":"113","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeryEditForm.js":"114","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaEditForm.js":"115","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\DefaultMessage.js":"116","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\VisitsFiles.js":"117","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyEditForm.js":"118","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteConditionsModal.js":"119","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\BMI.js":"120","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaEditForm.js":"121"},{"size":260,"mtime":1651833409357,"results":"122","hashOfConfig":"123"},{"size":5993,"mtime":1663090934380,"results":"124","hashOfConfig":"123"},{"size":5326,"mtime":1663164149151,"results":"125","hashOfConfig":"123"},{"size":3812,"mtime":1660667222483,"results":"126","hashOfConfig":"123"},{"size":2936,"mtime":1662731670767,"results":"127","hashOfConfig":"123"},{"size":1834,"mtime":1662460689075,"results":"128","hashOfConfig":"123"},{"size":1507,"mtime":1663164222214,"results":"129","hashOfConfig":"123"},{"size":222,"mtime":1652096209126,"results":"130","hashOfConfig":"123"},{"size":792,"mtime":1654802892489,"results":"131","hashOfConfig":"123"},{"size":122,"mtime":1652200578637,"results":"132","hashOfConfig":"123"},{"size":232,"mtime":1654429189609,"results":"133","hashOfConfig":"123"},{"size":3038,"mtime":1663155022666,"results":"134","hashOfConfig":"123"},{"size":4488,"mtime":1661018510802,"results":"135","hashOfConfig":"123"},{"size":19613,"mtime":1663241755781,"results":"136","hashOfConfig":"123"},{"size":526,"mtime":1652361098154,"results":"137","hashOfConfig":"123"},{"size":1004,"mtime":1657907925210,"results":"138","hashOfConfig":"123"},{"size":870,"mtime":1657043811602,"results":"139","hashOfConfig":"123"},{"size":420,"mtime":1662223152666,"results":"140","hashOfConfig":"123"},{"size":368,"mtime":1662223170623,"results":"141","hashOfConfig":"123"},{"size":692,"mtime":1662634733643,"results":"142","hashOfConfig":"123"},{"size":1656,"mtime":1662905947607,"results":"143","hashOfConfig":"123"},{"size":4228,"mtime":1663154710138,"results":"144","hashOfConfig":"123"},{"size":5960,"mtime":1663163302589,"results":"145","hashOfConfig":"123"},{"size":1940,"mtime":1654598731892,"results":"146","hashOfConfig":"123"},{"size":406,"mtime":1654528326660,"results":"147","hashOfConfig":"123"},{"size":1710,"mtime":1654529564944,"results":"148","hashOfConfig":"123"},{"size":1506,"mtime":1654598496357,"results":"149","hashOfConfig":"123"},{"size":185,"mtime":1655052061232,"results":"150","hashOfConfig":"123"},{"size":273,"mtime":1573657440000,"results":"151","hashOfConfig":"123"},{"size":1150,"mtime":1662976260896,"results":"152","hashOfConfig":"123"},{"size":1499,"mtime":1661956506685,"results":"153","hashOfConfig":"123"},{"size":2252,"mtime":1663093167666,"results":"154","hashOfConfig":"123"},{"size":1304,"mtime":1657298996541,"results":"155","hashOfConfig":"123"},{"size":1265,"mtime":1663165489757,"results":"156","hashOfConfig":"123"},{"size":442,"mtime":1662723817511,"results":"157","hashOfConfig":"123"},{"size":7153,"mtime":1663154838503,"results":"158","hashOfConfig":"123"},{"size":6125,"mtime":1663237887961,"results":"159","hashOfConfig":"123"},{"size":20858,"mtime":1663155023267,"results":"160","hashOfConfig":"123"},{"size":2176,"mtime":1663150916571,"results":"161","hashOfConfig":"123"},{"size":10594,"mtime":1663155023267,"results":"162","hashOfConfig":"123"},{"size":816,"mtime":1662915684670,"results":"163","hashOfConfig":"123"},{"size":5587,"mtime":1663155023267,"results":"164","hashOfConfig":"123"},{"size":1061,"mtime":1662716443278,"results":"165","hashOfConfig":"123"},{"size":7669,"mtime":1663165196401,"results":"166","hashOfConfig":"123"},{"size":5473,"mtime":1663155023267,"results":"167","hashOfConfig":"123"},{"size":7368,"mtime":1663166750062,"results":"168","hashOfConfig":"123"},{"size":1393,"mtime":1663154646463,"results":"169","hashOfConfig":"123"},{"size":992,"mtime":1661352728277,"results":"170","hashOfConfig":"123"},{"size":3752,"mtime":1663154730013,"results":"171","hashOfConfig":"123"},{"size":2993,"mtime":1663240655639,"results":"172","hashOfConfig":"123"},{"size":2001,"mtime":1663150917886,"results":"173","hashOfConfig":"123"},{"size":520,"mtime":1662736744998,"results":"174","hashOfConfig":"123"},{"size":530,"mtime":1661262462010,"results":"175","hashOfConfig":"123"},{"size":1879,"mtime":1662908270603,"results":"176","hashOfConfig":"123"},{"size":1752,"mtime":1662916327192,"results":"177","hashOfConfig":"123"},{"size":2422,"mtime":1663155022750,"results":"178","hashOfConfig":"123"},{"size":622,"mtime":1661608754088,"results":"179","hashOfConfig":"123"},{"size":1128,"mtime":1662131035692,"results":"180","hashOfConfig":"123"},{"size":1840,"mtime":1663155022750,"results":"181","hashOfConfig":"123"},{"size":3744,"mtime":1663155022779,"results":"182","hashOfConfig":"123"},{"size":1809,"mtime":1661594429950,"results":"183","hashOfConfig":"123"},{"size":1202,"mtime":1662917737656,"results":"184","hashOfConfig":"123"},{"size":2970,"mtime":1663154745676,"results":"185","hashOfConfig":"123"},{"size":2592,"mtime":1663154756179,"results":"186","hashOfConfig":"123"},{"size":634,"mtime":1661359781818,"results":"187","hashOfConfig":"123"},{"size":4049,"mtime":1663241394067,"results":"188","hashOfConfig":"123"},{"size":306,"mtime":1661522869844,"results":"189","hashOfConfig":"123"},{"size":318,"mtime":1661416465907,"results":"190","hashOfConfig":"123"},{"size":627,"mtime":1663086688720,"results":"191","hashOfConfig":"123"},{"size":2403,"mtime":1663241109143,"results":"192","hashOfConfig":"123"},{"size":333,"mtime":1661709474467,"results":"193","hashOfConfig":"123"},{"size":9902,"mtime":1663253695870,"results":"194","hashOfConfig":"123"},{"size":13722,"mtime":1663167404875,"results":"195","hashOfConfig":"123"},{"size":5595,"mtime":1663234922160,"results":"196","hashOfConfig":"123"},{"size":2412,"mtime":1663180293275,"results":"197","hashOfConfig":"123"},{"size":1877,"mtime":1662305639677,"results":"198","hashOfConfig":"123"},{"size":2870,"mtime":1663238207587,"results":"199","hashOfConfig":"123"},{"size":5797,"mtime":1663253811452,"results":"200","hashOfConfig":"123"},{"size":2375,"mtime":1663253320416,"results":"201","hashOfConfig":"123"},{"size":3204,"mtime":1663253519023,"results":"202","hashOfConfig":"123"},{"size":10931,"mtime":1663252939386,"results":"203","hashOfConfig":"123"},{"size":2140,"mtime":1663081411281,"results":"204","hashOfConfig":"123"},{"size":1014,"mtime":1663087519538,"results":"205","hashOfConfig":"123"},{"size":1598,"mtime":1663087535909,"results":"206","hashOfConfig":"123"},{"size":974,"mtime":1663007851541,"results":"207","hashOfConfig":"123"},{"size":6217,"mtime":1663155023267,"results":"208","hashOfConfig":"123"},{"size":3004,"mtime":1663155023217,"results":"209","hashOfConfig":"123"},{"size":1373,"mtime":1662306159962,"results":"210","hashOfConfig":"123"},{"size":1674,"mtime":1662922816360,"results":"211","hashOfConfig":"123"},{"size":1531,"mtime":1663155023267,"results":"212","hashOfConfig":"123"},{"size":525,"mtime":1661786078269,"results":"213","hashOfConfig":"123"},{"size":443,"mtime":1661786074345,"results":"214","hashOfConfig":"123"},{"size":386,"mtime":1661794191381,"results":"215","hashOfConfig":"123"},{"size":2410,"mtime":1663153263727,"results":"216","hashOfConfig":"123"},{"size":2322,"mtime":1663153430231,"results":"217","hashOfConfig":"123"},{"size":218,"mtime":1663061400252,"results":"218","hashOfConfig":"123"},{"size":927,"mtime":1662824040504,"results":"219","hashOfConfig":"123"},{"size":2139,"mtime":1663155022666,"results":"220","hashOfConfig":"123"},{"size":571,"mtime":1662023848564,"results":"221","hashOfConfig":"123"},{"size":5637,"mtime":1663155022750,"results":"222","hashOfConfig":"123"},{"size":662,"mtime":1662196733755,"results":"223","hashOfConfig":"123"},{"size":2050,"mtime":1662736905714,"results":"224","hashOfConfig":"123"},{"size":1101,"mtime":1662737097435,"results":"225","hashOfConfig":"123"},{"size":2323,"mtime":1663068577177,"results":"226","hashOfConfig":"123"},{"size":375,"mtime":1662225463433,"results":"227","hashOfConfig":"123"},{"size":2659,"mtime":1662743059059,"results":"228","hashOfConfig":"123"},{"size":2919,"mtime":1663235274709,"results":"229","hashOfConfig":"123"},{"size":2556,"mtime":1662981880905,"results":"230","hashOfConfig":"123"},{"size":391,"mtime":1662827777305,"results":"231","hashOfConfig":"123"},{"size":1267,"mtime":1662920709988,"results":"232","hashOfConfig":"123"},{"size":2723,"mtime":1663155023267,"results":"233","hashOfConfig":"123"},{"size":3511,"mtime":1663155023267,"results":"234","hashOfConfig":"123"},{"size":713,"mtime":1662714206577,"results":"235","hashOfConfig":"123"},{"size":2166,"mtime":1662915857042,"results":"236","hashOfConfig":"123"},{"size":2078,"mtime":1662918056055,"results":"237","hashOfConfig":"123"},{"size":398,"mtime":1662921375870,"results":"238","hashOfConfig":"123"},{"size":478,"mtime":1663155022727,"results":"239","hashOfConfig":"123"},{"size":2436,"mtime":1663087952591,"results":"240","hashOfConfig":"123"},{"size":2081,"mtime":1663151042083,"results":"241","hashOfConfig":"123"},{"size":456,"mtime":1663163946776,"results":"242","hashOfConfig":"123"},{"size":14068,"mtime":1663253596227,"results":"243","hashOfConfig":"123"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},"qiatdq",{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"246"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"246"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"246"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"246"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"246"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"246"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"246"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"246"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"246"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"246"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"246"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"246"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"246"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"246"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"246"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"246"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"246"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"246"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"246"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"246"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"387","usedDeprecatedRules":"246"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"246"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"246"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"246"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"246"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"246"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"246"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"246"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"246"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"246"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"246"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"246"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"246"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"246"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"246"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"246"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"246"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"246"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"246"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"246"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"246"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"246"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"246"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"246"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"246"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"246"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"246"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"246"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"246"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"246"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"246"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"246"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"535","usedDeprecatedRules":"246"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"246"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["545","546"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",["547","548","549","550","551","552","553","554"],"import { Route, Switch, Redirect } from 'react-router-dom';\nimport PatientDetail from './pages/PatientDetail';\nimport PatientProfile from './components/Patient-Profile/PatientProfile';\nimport Statistics from './components/Patient-Profile/Statistics/Statistics';\nimport Patients from './pages/Patients';\nimport Visit from './components/Patient-Details-Pages/NewVisits/Visit';\nimport Basic from './components/Patient-Details-Pages/Basic';\nimport Auth from './authentication/Auth';\nimport { AuthContext } from './context/auth-context';\nimport { PatientContext } from './context/patient-context';\nimport { useState, useCallback, useEffect } from 'react';\nimport Logo from './components/UI/Logo'\nimport { useHistory } from 'react-router-dom';\nimport EmailConfirmation from './authentication/EmailConfirmation'\n\n\nlet logoutTimer;\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [patientId, setPatientId] = useState(null);\n  const [visitId, setVisitId] = useState(null);\n  const [anamnistikoId, setAnamnistikoId] = useState(null);\n  const [gender, setGender] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n  const history = useHistory();\n\n\n  const createPatientId = useCallback((patientId) => {\n    setPatientId(patientId);\n    localStorage.setItem('patientId', patientId)\n  }, []);\n  const setPatientIdNull = useCallback(() => {\n    setPatientId(null);\n    localStorage.removeItem('patientId')\n  })\n\n  const createVisitId = useCallback((visitId) => {\n    setVisitId(visitId);\n    localStorage.setItem('visitId', visitId)\n  }, []);\n  const setVisitNull = useCallback(() => {\n    setVisitId(null);\n    localStorage.removeItem('visitId')\n  })\n\n  const changeGender = useCallback((gender) => {\n    setGender(gender);\n    localStorage.setItem('gender', gender)\n  }, []);\n  const setGenderNull = useCallback(() => {\n    setGender(null);\n    localStorage.removeItem('gender')\n  })\n\n  const createAnamnistikoId = useCallback((anamnistikoId) => {\n    setAnamnistikoId(anamnistikoId);\n  }, []);\n  const setAnamnistikoNull = useCallback(() => {\n    setAnamnistikoId(null);\n  })\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 2);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate();\n    setUserId(null);\n    localStorage.removeItem('userData');\n    localStorage.removeItem('patientId');\n    localStorage.removeItem('gender');\n    localStorage.removeItem('visitId')\n    history.replace('/')\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('patientId');\n    if (storedData) {\n      createPatientId(storedData);\n    }\n  }, [createPatientId]);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('visitId');\n    if (storedData) {\n      createVisitId(storedData);\n    }\n  }, [createVisitId]);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('gender');\n    if (storedData) {\n      changeGender(storedData);\n    }\n  }, [changeGender]);\n\n\n  let routes;\n  if (token === null) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Logo />\n          <Auth />\n        </Route >\n        <Route path='/:userId/emailconfirmation' exact>\n          <EmailConfirmation />\n        </Route>\n        {/* <Route path='/' >\n          <Redirect to='/' />\n        </Route > */}\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Logo />\n          <Patients />\n        </Route>\n\n        <Route path='/patients' exact>\n          <Logo />\n          <Patients />\n\n        </Route>\n        <Route path='/patients/:patientId/visits/:visitId' exact>\n          <Logo />\n          <Visit />\n        </Route>\n\n        <Route path='/patients/:patientId/profile' exact>\n          <Logo />\n          <PatientProfile />\n        </Route>\n\n        <Route path='/patients/:patientId/basics' exact>\n          <Logo basic/>\n          <Basic profil/>\n        </Route>\n\n        <Route path='/patients/:patientId/statistics' exact>\n          <Logo />\n          <Statistics />\n        </Route>\n\n        <Route path='/patients/:patientId' >\n          <Logo />\n          <PatientDetail />\n        </Route>\n\n        <Route path='/:userId/emailconfirmation' >\n          <Redirect to='/' />\n        </Route>\n        {/* <Route path='/' >\n          <Redirect to='/' />\n        </Route > */}\n\n      </Switch>\n    )\n\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\n      <PatientContext.Provider value={{ gender: gender, patientId: patientId, visitId: visitId, createPatientId: createPatientId, setPatientIdNull: setPatientIdNull, setGenderNull: setGenderNull, changeGender: changeGender, createVisitId: createVisitId, setVisitNull: setVisitNull }}>\n        <div className='backgroundImage'>\n          <main>\n\n            {routes}\n\n          </main>\n        </div>\n      </PatientContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["555"],"import { Container } from 'react-bootstrap';\r\nimport PatientsList from '../components/PatientsList';\r\n// import PatientsListHeader from '../components/PatientsListHeader';\r\nimport PatientSearch from '../components/UI/PatientSearch';\r\nimport Backdrop from '../components/UI/Backdrop';\r\nimport classes from './Patients.module.css';\r\nimport Modal from '../components/UI/Modal';\r\nimport DeleteModal from '../components/UI/DeleteModal';\r\nimport EditPatient from '../components/EditPatient';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useEffect, useContext, useReducer } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst defaultSearch = { sirname: '', name: '', diagnosis: '', age: '', tel: '', amka: '' };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'name':\r\n            return { ...state, name: action.payload.name };\r\n        case 'sirname':\r\n            return { ...state, sirname: action.payload.sirname };\r\n        case 'diagnosis':\r\n            return { ...state, diagnosis: action.payload.diagnosis };\r\n        case 'tel':\r\n            return { ...state, tel: action.payload.tel };\r\n        case 'amka':\r\n            return { ...state, amka: action.payload.amka };\r\n        case 'clear': {\r\n            return defaultSearch;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst Patients = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [loadedPatients, setLoadedPatients] = useState([]);\r\n    const [patientToDelete, setPatientToDelete] = useState();\r\n    const [patientToEdit, setPatientToEdit] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n\r\n    const [state, dispatch] = useReducer(reducer, defaultSearch);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/patients/getPatients/${auth.userId}?name=${state.name}&sirname=${state.sirname}&diagnosis=${state.diagnosis}&tel=${state.tel}&amka=${state.amka}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatients(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        setTimeout(fetchPatients);\r\n    }, [sendRequest, state]);\r\n\r\n\r\n\r\n    function closeHandler() {\r\n        setModalIsOpen(false);\r\n    }\r\n    function deleteHandler(patientId) {\r\n        setDeleteModalIsOpen(true);\r\n        setPatientToDelete(patientId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function editHandler(patientId) {\r\n        setEditModalIsOpen(true);\r\n        setPatientToEdit(patientId);\r\n    }\r\n    function closeEditModal() {\r\n        setEditModalIsOpen(false);\r\n    }\r\n    function submitPatientHandler(patient) {\r\n        setLoadedPatients(prevPatients => {\r\n            return [patient, ...prevPatients];\r\n        });\r\n    }\r\n    async function deletePatientHandler() {\r\n        const responseDeletedPatient = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientToDelete.id}`, 'DELETE', null, {\r\n            Authorization: 'Bearer ' + auth.token\r\n        }\r\n        );\r\n        setLoadedPatients(prevPatients => {\r\n            return prevPatients.filter(patient => patient._id !== responseDeletedPatient._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div className={classes.test}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <Container>\r\n                {/* <PatientsListHeader dispatch={dispatch} /> */}\r\n                {isLoading && <LoadingSpinner />}\r\n\r\n                {!isLoading && loadedPatients && <PatientsList patients={loadedPatients} onDelete={deleteHandler} onEdit={editHandler} />}\r\n                {modalIsOpen && <Modal onClose={closeHandler} onSubmit={submitPatientHandler} patients={loadedPatients} />}\r\n                {modalIsOpen && !error && <Backdrop onClick={closeHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deletePatientHandler} amka={patientToDelete.amka} onCancel={closeDeleteModal} description={`Για να επιβεβαιώσετε την διαγραφή του ασθενή, συμπληρώστε το ΑΜΚΑ:${patientToDelete.amka} στο πλαίσιο.`} />}\r\n                {deleteModalIsOpen && !error && <Backdrop onClick={closeDeleteModal} />}\r\n                {editModalIsOpen && !error && <Backdrop onClick={closeEditModal} />}\r\n                {editModalIsOpen && <EditPatient onClose={closeEditModal} patientId={patientToEdit} />}\r\n\r\n                {/* <button onClick={addPatientHandler} className={classes.addButton}>Δημιουργία Ασθενή</button> */}\r\n\r\n            </Container>\r\n            <PatientSearch dispatch={dispatch} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",["556","557","558","559","560","561","562","563","564","565","566","567"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport classes from './PatientsListHeader.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PatientsListHeader = (props) => {\r\n    const [name,setName]=useState();\r\n    const [sirname,setSirname]=useState();\r\n    const [diagnosis,setDiagnosis]=useState();\r\n    const [tel,setTel]=useState();\r\n    const [amka,setAmka]=useState();\r\n    const history = useHistory()\r\n    function changeNameHandler(event) {\r\n        props.dispatch({ type: 'name', payload: { name: event.target.value } })\r\n        setName(event.target.value);\r\n    }\r\n    function changeSirnameHandler(event) {\r\n        props.dispatch({ type: 'sirname', payload: { sirname: event.target.value } })\r\n        setSirname(event.target.value);\r\n    }\r\n    function changeDiagnosisHandler(event) {\r\n        props.dispatch({ type: 'diagnosis', payload: { diagnosis: event.target.value } })\r\n        setDiagnosis(event.target.value);\r\n    }\r\n    function changeTelHandler(event) {\r\n        props.dispatch({ type: 'tel', payload: { tel: event.target.value } })\r\n        setTel(event.target.value);\r\n    }\r\n    function changeAmkaHandler(event) {\r\n        props.dispatch({ type: 'amka', payload: { amka: event.target.value } })\r\n        setAmka(event.target.value);\r\n    }\r\n    function clearHandler(event) {\r\n        props.dispatch({type:'clear'});\r\n        setName('');\r\n        setSirname('');\r\n        setDiagnosis('');\r\n        setTel('');\r\n        setAmka('');\r\n        // history.push(`/patients/62aa19495a6877632fd7d9e8/lab_test?q=2022-06-16`)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            <Row><Col className='text-center'><h4 className={classes.title}>Ασθενείς</h4></Col></Row>\r\n            <Row className='justify-content-sm-space-around'>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='sirname'>Επώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='name'>Όνομα</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='diagnosis'>Πατρώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='age'>Ηλικία</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='tel'>Τηλέφωνο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='amka'>ΑΜΚΑ</label></Col>\r\n                <Col></Col>\r\n            </Row>\r\n            {/* <form>\r\n                <Row className='justify-content-sm-space-around'>\r\n\r\n                    <Col className='text-center'><input onChange={changeSirnameHandler} value={sirname} name='sirname' type='text' id='sirname' /></Col>\r\n                    <Col className='text-center'><input onChange={changeNameHandler} value={name} name='name' type='text' id='name' /></Col>\r\n                    <Col className='text-center'><input onChange={changeDiagnosisHandler} value={diagnosis} name='diagnosis' type='text' id='diagnosis' /></Col>\r\n                    <Col className='text-center'><input name='age' type='text' id='age' /></Col>\r\n                    <Col className='text-center'><input onChange={changeTelHandler} value={tel} name='tel' type='text' id='tel' /></Col>\r\n                    <Col className='text-center'><input onChange={changeAmkaHandler} value={amka} name='amka' type='text' id='amka' /></Col>\r\n                    <Col><button type='button' className={classes.button} onClick={clearHandler}>Clear filters</button></Col>\r\n\r\n                </Row>\r\n            </form> */}\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default PatientsListHeader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],["568","569"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",["570"],"import { useRef, useState } from 'react';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport { useContext } from 'react';\r\nimport classes from './PatientForm.module.css';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport ErrorModal from './ErrorModal';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst PatientForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const dateOfBirthInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const [type, setType] = useState('text')\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const onFocus = (event) => {\r\n        setType('date')\r\n    }\r\n    const onBlur = (event) => {\r\n        setType('text')\r\n    }\r\n\r\n    async function submitHandler(event) {\r\n\r\n        event.preventDefault();\r\n        const enteredPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            diagnosis: diagnosisInputRef.current.value,\r\n            dateOfBirth: dateOfBirthInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value,\r\n            uid: auth.userId\r\n        }\r\n        const response = await sendRequest('${process.env.REACT_APP_BACKEND_URL}/patients', 'POST', JSON.stringify(enteredPatient), {\r\n            Authorization: 'Bearer ' + auth.token,\r\n            'Content-Type': 'application/json'\r\n        });\r\n\r\n        // history.push('/')\r\n        props.onSubmit(response);\r\n        props.onClick(); //close form\r\n\r\n    }\r\n    return (\r\n        <div className={classes.form_style_5}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <form onSubmit={submitHandler}>\r\n                <fieldset>\r\n                    <legend>Patient Info</legend>\r\n                    <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" required />\r\n                    <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" required />\r\n                    <input ref={diagnosisInputRef} type=\"text\" name=\"diagnosis\" placeholder=\"Διάγνωση \" />\r\n                    <input ref={dateOfBirthInputRef} type={type} onFocus={onFocus} onBlur={onBlur} max={moment(new Date()).format('YYYY-MM-DD')} name=\"dateOfBirth\" placeholder=\"Ημερομηνία Γέννησης \" />\r\n                    <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" required />\r\n                    <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" />\r\n                    <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClick}>Cancel</button>\r\n                    <button className=\"btn\" type='submit'>Add </button>\r\n\r\n\r\n                </fieldset>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["571"],"import { Fragment } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\nimport EditFormButton from \"../UI/EditFormButton\";\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Card from \"../UI/Card\";\r\nimport ImageUpload from \"../UI/ImageUpload\";\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport moment from 'moment';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst Basic = (props) => {\r\n    const [loadedBasics, setLoadedBasics] = useState({ name: '', sirname: '', amka: '', diagnosis: '', tel: '', dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '', fathersName: '', imageName: null })\r\n    const [editBasics, setEditBasics] = useState(false);\r\n\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const patientContext = useContext(PatientContext)\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    // useEffect(() => {\r\n    //     console.log(patientContext.gender, patientContext.patientId);\r\n    //     console.log(loadedBasics)\r\n    // }, [patientContext,loadedBasics])\r\n    // console.log(!!patientContext.patientId)\r\n    // useEffect(() => {\r\n    //     if (!!patientContext.patientId) {\r\n    //         setEditBasics(true)\r\n    //         console.log('done')\r\n    //     }\r\n    // }, [patientContext.patientId])\r\n\r\n    // console.log(editBasics)\r\n\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n\r\n    const [age, setAge] = useState(null);\r\n\r\n\r\n    const fetchPatients = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData)\r\n            setLoadedBasics({ name: responseData.name, sirname: responseData.sirname, amka: responseData.amka, dateOfBirth: responseData.dateOfBirth, diagnosis: responseData.diagnosis, tel: responseData.tel, placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, fathersName: responseData.fathersName, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode, email: responseData.email });\r\n            if (!!responseData.files) {\r\n                setLoadedBasics((prevState) => {\r\n                    return { ...prevState, imageName: responseData.files.split('\\\\')[2] }\r\n                })\r\n            }\r\n            setEditBasics(true)\r\n\r\n            setAge(responseData.dateOfBirth);\r\n        } catch (err) { }\r\n    }\r\n    console.log(editBasics)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (patientContext.patientId !== null) {\r\n            fetchPatients()\r\n        }\r\n    }, [sendRequest, patientContext.patientId]);\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        if (!!formState.inputs.image.value) {\r\n            try {\r\n                console.log(amkaInputRef.current.value)\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                formData.append('uid', auth.userId);\r\n                formData.append('name', nameInputRef.current.value)\r\n                formData.append('sirname', sirnameInputRef.current.value)\r\n                formData.append('dateOfBirth', dateOfBirthInputRef.current.value)\r\n                formData.append('amka', amkaInputRef.current.value)\r\n                formData.append('tel', TelInputRef.current.value)\r\n                formData.append('placeOfBirth', placeOfBirthInputRef.current.value)\r\n                formData.append('job', jobInputRef.current.value)\r\n                formData.append('email', emailInputRef.current.value)\r\n                formData.append('familyStatus', familyStatusInputRef.current.value)\r\n                formData.append('gender', genderInputRef.current.value)\r\n                formData.append('address', addressInputRef.current.value)\r\n                formData.append('area', areaInputRef.current.value)\r\n                formData.append('postalCode', postalCodeRef.current.value)\r\n                formData.append('fathersName', fathersNameInputRef.current.value)\r\n                formData.append('patientId', patientContext.patientId)   ////////\r\n\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/new/basic/image`,\r\n                    'POST',\r\n                    formData\r\n                );\r\n\r\n                patientContext.createPatientId(responseData.patient._id);\r\n                patientContext.changeGender(responseData.patient.gender);\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            try {\r\n\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/new/basic`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        uid: auth.userId,\r\n                        name: nameInputRef.current.value,\r\n                        sirname: sirnameInputRef.current.value,\r\n                        dateOfBirth: dateOfBirthInputRef.current.value,\r\n                        amka: amkaInputRef.current.value,\r\n                        tel: TelInputRef.current.value,\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        email: emailInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n                        fathersName: fathersNameInputRef.current.value,\r\n                        patientId: patientContext.patientId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n                );\r\n\r\n                patientContext.createPatientId(responseData.patient._id);\r\n                patientContext.changeGender(responseData.patient.gender);\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        // fetchPatients()\r\n    }\r\n\r\n    const updateHandler = async (event) => {\r\n        event.preventDefault();\r\n        if (!!formState.inputs.image.value) {\r\n            try {\r\n                console.log(formState.inputs.image.value)\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                formData.append('uid', auth.userId);\r\n                formData.append('name', nameInputRef.current.value)\r\n                formData.append('sirname', sirnameInputRef.current.value)\r\n                formData.append('dateOfBirth', dateOfBirthInputRef.current.value)\r\n                formData.append('amka', amkaInputRef.current.value)\r\n                formData.append('tel', TelInputRef.current.value)\r\n                formData.append('placeOfBirth', placeOfBirthInputRef.current.value)\r\n                formData.append('job', jobInputRef.current.value)\r\n                formData.append('email', emailInputRef.current.value)\r\n                formData.append('familyStatus', familyStatusInputRef.current.value)\r\n                formData.append('gender', genderInputRef.current.value)\r\n                formData.append('address', addressInputRef.current.value)\r\n                formData.append('area', areaInputRef.current.value)\r\n                formData.append('postalCode', postalCodeRef.current.value)\r\n                formData.append('fathersName', fathersNameInputRef.current.value)\r\n                formData.append('patientId', patientContext.patientId)   ////////\r\n                console.log(formData)\r\n\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/basic/image`,\r\n                    'PATCH',\r\n                    formData\r\n                );\r\n\r\n                patientContext.changeGender(responseData.patient.gender);\r\n            }\r\n            catch (err) { }\r\n        } else {\r\n            try {\r\n\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/basic`,\r\n                    'PATCH',\r\n                    JSON.stringify({\r\n                        patientId: patientContext.patientId,\r\n                        name: nameInputRef.current.value,\r\n                        sirname: sirnameInputRef.current.value,\r\n                        dateOfBirth: dateOfBirthInputRef.current.value,\r\n                        amka: amkaInputRef.current.value,\r\n                        tel: TelInputRef.current.value,\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        email: emailInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n                        fathersName: fathersNameInputRef.current.value,\r\n\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n                );\r\n\r\n\r\n                patientContext.changeGender(responseData.patient.gender);\r\n            }\r\n            catch (err) { }\r\n        }\r\n        if (!!props.profil) {\r\n            history.replace(`/patients/${params.patientId}/profile`)\r\n        }\r\n        fetchPatients()\r\n\r\n        // if (!error) {\r\n        //     history.replace('/patients/new/basic')\r\n        // }\r\n        // history.replace('/patients/new/anamnistiko')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n\r\n            <Container className={classes.basicsContainer}>\r\n                <form className={classes.basicForm} onSubmit={(!!patientContext.patientId) ? updateHandler : submitHandler}>\r\n\r\n                    <Card className={classes.basicsCard}>\r\n                        <Row>\r\n                            <Col className={`text-sm-end ${classes.firstInputs}`} xs={6}>\r\n                                <div><label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>&nbsp;<input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={loadedBasics.sirname} disabled={editBasics} /></div>\r\n                                <div> <label htmlFor=\"name\">Όνομα<span>* </span> &nbsp;</label><input ref={nameInputRef} id='name' type='text' required defaultValue={loadedBasics.name} disabled={editBasics} /></div>\r\n                                <div> <label htmlFor=\"amka\"  >ΑΜΚΑ<span>* </span>&nbsp;</label><input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={loadedBasics.amka} required minLength={11} maxLength={11} disabled={editBasics} /></div>\r\n                                <div><label htmlFor=\"fathers-name\">Πατρώνυμο</label>&nbsp;&nbsp;<input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={loadedBasics.fathersName} disabled={editBasics} /></div>\r\n                            </Col>\r\n\r\n                            <Col className=\"text-center\">\r\n                                <ImageUpload editBasics={editBasics} center imageSource={(!!loadedBasics.imageName) ? `${process.env.REACT_APP_BACKEND_URL}/uploads/images/${loadedBasics.imageName}` : null} onInput={inputHandler} id='image' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"dateOfBirth\">Ημερομηνία Γέννησης</label>\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <input disabled={editBasics} ref={dateOfBirthInputRef} id='dateOfBirth' type='date' name=\"dateOfBirth\" defaultValue={moment(age).format('YYYY-MM-DD')}  />\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <input disabled={editBasics} ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <input disabled={editBasics} ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={loadedBasics.tel} required />\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"job\">Επάγγελμα</label>\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <input disabled={editBasics} ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <select ref={familyStatusInputRef} id='family_status' name='family_status' disabled={editBasics}>\r\n                                    <option value=\"none\" selected disabled hidden>Επιλέξτε</option>\r\n                                    <option value='married' selected={loadedBasics.familyStatus === 'married'} >Παντρεμμένος/η</option>\r\n                                    <option value='notmarried' selected={loadedBasics.familyStatus === 'notmarried'}>Ανύπνατρος/η</option>\r\n                                    <option value='divorced' selected={loadedBasics.familyStatus === 'divorced'}>Διαζευγμένος/η</option>\r\n                                </select>\r\n\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"gender\">Φύλο<span>* </span></label>\r\n                            </Col>\r\n                            <Col className='text-start'>\r\n                                <select ref={genderInputRef} name='gender' id='gender' required disabled={editBasics}>\r\n                                    <option value=\"\" selected disabled hidden>Επιλέξτε</option>\r\n                                    <option value='male' selected={loadedBasics.gender === 'male'}>Άρρεν</option>\r\n                                    <option value='female' selected={loadedBasics.gender === 'female'}>Θήλυ</option>\r\n\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"address\">Διεύθυνση</label>\r\n                            </Col>\r\n                            <Col className='text-start'>\r\n                                <input ref={addressInputRef} disabled={editBasics} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"location\">Περιοχή</label>\r\n                            </Col>\r\n                            <Col className='text-start'>\r\n                                <input ref={areaInputRef} disabled={editBasics} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                            </Col>\r\n                            <Col className='text-start'>\r\n                                <input ref={postalCodeRef} disabled={editBasics} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                            </Col>\r\n                            <Col className='text-sm-end '>\r\n                                <label htmlFor=\"email\">E-mail</label>\r\n                            </Col>\r\n                            <Col className='text-start'>\r\n                                <input ref={emailInputRef} disabled={editBasics} id='email' type='text' name=\"email\" defaultValue={loadedBasics.email} />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row >\r\n                            <Col  >\r\n                                {!editBasics && <SaveButton />}\r\n                                {editBasics && <EditFormButton onClick={() => { setEditBasics(false) }} />}\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </form>\r\n            </Container>\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["572","573"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from './EditPatient.module.css';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst EditPatient = (props) => {\r\n\r\n    const [loadedPatient, setLoadedPatient] = useState({ sirname: \"\", name: \"\", fathersName: \"\", dateOfBirth: \"\", tel: \"\", amka: \"\" });\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const dateOfBirthInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [type, setType] = useState('text');\r\n\r\n    const onFocus = (event) => {\r\n        setType('date')\r\n    }\r\n    const onBlur = (event) => {\r\n        setType('text')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${props.patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient({ sirname: data.sirname, name: data.name, diagnosis: data.diagnosis, dateOfBirth: moment(data.dateOfBirth).format('YYYY-MM-DD'), tel: data.tel, amka: data.amka })\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n    console.log((loadedPatient.dateOfBirth === 'Invalid date'))\r\n\r\n\r\n\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            diagnosis: diagnosisInputRef.current.value,\r\n            dateOfBirth: dateOfBirthInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value\r\n        };\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${props.patientId}`, 'PATCH', JSON.stringify(updatedPatient),\r\n            {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_modal\">\r\n            <div className={classes.form_style_5}>\r\n                <form onSubmit={submitHandler}>\r\n                    <fieldset>\r\n                        {!!error && <ErrorModal error={error} onClose={clearError} />}\r\n                        <legend>Patient Info</legend>\r\n                        <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" defaultValue={loadedPatient.sirname} required />\r\n                        <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" defaultValue={loadedPatient.name} required />\r\n                        <input ref={diagnosisInputRef} type=\"text\" name=\"diagnosis\" placeholder=\"Διάγνωση \" defaultValue={loadedPatient.diagnosis} />\r\n                        <input ref={dateOfBirthInputRef} type={type} max={moment(new Date()).format('YYYY-MM-DD')} onBlur={onBlur} onFocus={onFocus} name=\"dateOfBirth\" defaultValue={(loadedPatient.dateOfBirth !== 'Invalid date') ? loadedPatient.dateOfBirth : 'Ημερομηνία Γέννησης'} />\r\n                        <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" defaultValue={loadedPatient.tel} required />\r\n                        <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" defaultValue={loadedPatient.amka} />\r\n                        <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClose}>Cancel</button>\r\n                        <button className=\"btn\" type='submit'>Edit </button>\r\n\r\n\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPatient;","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js",["574","575"],"\r\nimport React, { useRef, useState, useEffect, Fragment } from 'react';\r\n\r\nimport Button from '../../authentication/Button';\r\nimport Card from './Card';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  console.log(props.imageSource)\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState(props.imageSource);\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {  //mporw na dialexw mono ena arxeio!\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      {/* <Fragment>\r\n       <Card className='imageUploadCard'> */}\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"  //acceptable file types\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Παρακαλώ διαλέξτε μια φωτογραφία του ασθενή.</p>}\r\n        </div>\r\n        {!props.editBasics && <Button type=\"button\" onClick={pickImageHandler}>\r\n          {(!!props.imageSource) ? \"Αλλάξτε Φωτογραφία\" : \"Επιλέξτε Φωτογραφία\"}\r\n        </Button>}\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n      {/* </Card>\r\n     </Fragment> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js",[],["576","577"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js",["578","579","580","581","582","583","584","585"],"import { Container, Col, Row } from \"react-bootstrap\";\r\nimport './History.css';\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useState, useEffect, useRef, useContext, Fragment } from \"react\";\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport Collapsible from 'react-collapsible';\r\nimport Conditions from \"./Atomiko/Conditions\";\r\nimport Allergies from \"./Atomiko/Allergies/Allergies\";\r\nimport Klironomiko from \"./Klironomiko/Klironomiko\";\r\nimport Surgeries from \"./Surgeries/Surgeries\";\r\nimport Gynaikologiko from \"./Gynaikologiko/Gynaikologiko\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst History = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n\r\n    const [conditionsList, setConditionsList] = useState([]);\r\n    const [allergiesList, setAllergiesList] = useState([]);\r\n    const [cleronomicalList, setCleronomicalList] = useState([]);\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    const [pregnacyList, setPregnaciesList] = useState([]);\r\n    const [gynaikologikoList, setGynaikologikoList] = useState({ emminarxi: null, stability: null, cycle_duration: null, period_duration: null, maieutiko: [], adk: null, tdk: null })\r\n\r\n\r\n    const paramsId = useParams().patientId;\r\n\r\n\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const emminarxiInputRef = useRef();\r\n    const stabilityInputRef = useRef();\r\n    const emminopausiInputRef = useRef();\r\n    const period_durationInputRef = useRef();\r\n    const cycle_durationInputRef = useRef();\r\n    const adkInputRef = useRef();\r\n    const tdkInputRef = useRef();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/female`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                setConditionsList(responseData.conditionsList);\r\n                setSurgeriesList(responseData.surgeries);\r\n                setPregnaciesList(responseData.maieutiko);\r\n                setCleronomicalList(responseData.cleronomicalList)\r\n                responseData.allergies.map(allergy => {\r\n                    setAllergiesList((prevState) => {\r\n                        return [...prevState, allergy]\r\n                    });\r\n                })\r\n\r\n                setGynaikologikoList(responseData.gynaikologiko)\r\n                console.log(responseData)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.anamnistikoId) {\r\n            fetchHistory();\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        try {\r\n            const responseDate = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko`, 'POST',\r\n                JSON.stringify({\r\n                    allergies: allergiesList,\r\n                    cleronomical: cleronomicalList,\r\n                    conditions: conditionsList,\r\n                    surgeries: surgeriesList,\r\n                    gynaikologiko: {\r\n                        emminarxi: emminarxiInputRef.current.value,\r\n                        stability: stabilityInputRef.current.value,\r\n                        cycle_duration: cycle_durationInputRef.current.value,\r\n                        period_duration: period_durationInputRef.current.value,\r\n                        emminopausi: emminopausiInputRef.current.value,\r\n                        pregnacyList: pregnacyList,\r\n                        adk: adkInputRef.current.checked,\r\n                        tdk: tdkInputRef.current.checked,\r\n                    }\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            console.log(responseDate)\r\n            patientContext.createAnamnistikoId(responseDate._id)\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n    const updateHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko`, 'PATCH',\r\n                JSON.stringify({\r\n                    allergies: allergiesList,\r\n                    cleronomical: cleronomicalList,\r\n                    conditions: conditionsList,\r\n                    surgeries: surgeriesList,\r\n                    gynaikologiko: {\r\n                        emminarxi: emminarxiInputRef.current.value,\r\n                        stability: stabilityInputRef.current.value,\r\n                        cycle_duration: cycle_durationInputRef.current.value,\r\n                        period_duration: period_durationInputRef.current.value,\r\n                        emminopausi: emminopausiInputRef.current.value,\r\n                        pregnacyList: pregnacyList,\r\n                        adk: adkInputRef.current.checked,\r\n                        tdk: tdkInputRef.current.checked,\r\n                    }\r\n\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n        } catch (err) { }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            {/* <form className='history' onSubmit={(!patientContext.anamnistikoId) ? submitHandler : updateHandler}> */}\r\n            <Container fluid className='history'>\r\n                <Collapsible trigger='Ατομικό >' triggerWhenOpen={'Ατομικό ^'} transitionTime={200}>\r\n                    <Conditions />\r\n                    <Allergies allergiesList={allergiesList} setAllergiesList={setAllergiesList} />\r\n                </Collapsible>\r\n                <Collapsible trigger='Κληρονομικό >' triggerWhenOpen={'Κληρονομικό ^'} transitionTime={200}>\r\n                    <Klironomiko cleronomicalList={cleronomicalList} setCleronomicalList={setCleronomicalList} />\r\n                </Collapsible>\r\n                <Collapsible trigger='Χειρουργεία >' triggerWhenOpen={'Χειρουργεία ^'} transitionTime={200}>\r\n                    <Surgeries surgeriesList={surgeriesList} setSurgeriesList={setSurgeriesList} />\r\n                </Collapsible>\r\n                {(patientContext.gender === 'female') && <Collapsible trigger='Γυναικολογικό >' triggerWhenOpen={'Γυναικολογικό ^'} transitionTime={200}>\r\n                    <Container>\r\n                        <Gynaikologiko />\r\n                    </Container>\r\n                </Collapsible >}\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js",["586","587"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from '../../../UI/Card'\r\nimport classes from './Conditions.module.css'\r\nimport ConditionsList from \"./ConditionsList\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport ConditionsForm from \"./ConditionsForms\";\r\nimport ConditionsHeader from './ConditionsHeader'\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\nimport DeleteConditionsModal from \"../../../UI/DeleteConditionsModal\";\r\n\r\n\r\n\r\nconst Conditions = (props) => {\r\n    const [conditionsList, setConditionsList] = useState([]);\r\n    const [addCondition, setAddCondition] = useState(false);\r\n    const [selectedConditionId, setSelectedConditionId] = useState()\r\n    const openAddForm = (event) => {\r\n        setAddCondition(true);\r\n    }\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        setConditionsList((!!props.conditionsList) ? props.conditionsList : []);\r\n    }, [props.conditionsList])\r\n\r\n    useEffect(() => {\r\n        const fetchConditions = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/conditions`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setConditionsList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        // if (!!patientContext.patientId) {\r\n        if (!props.profil && !!patientContext.patientId) {\r\n            fetchConditions();\r\n        }\r\n        // }\r\n    }, [patientContext.patientId, sendRequest, props.profil]);\r\n\r\n\r\n    const openDeleteModal = (id) => {\r\n        setDeleteModalIsOpen(true);\r\n        setSelectedConditionId(id);\r\n    }\r\n\r\n    const closeDeleteModal = () => {\r\n        setDeleteModalIsOpen(false)\r\n    }\r\n\r\n    const addConditionHandler = async (condition) => {\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/condition`, 'POST',\r\n                JSON.stringify({\r\n                    _id: condition._id,\r\n                    name: condition.name,\r\n                    status: condition.status,\r\n                    dateOfDiagnosis: condition.dateOfDiagnosis,\r\n                    dateOfHealing: condition.dateOfHealing\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            setConditionsList((prevState) => {\r\n                return [...prevState, condition];\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const removeConditionHandler = async () => {\r\n        try {\r\n            setDeleteModalIsOpen(false);\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/condition/${selectedConditionId}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n            setConditionsList((prevState) => {\r\n                return prevState.filter(condition => {\r\n                    return condition._id !== selectedConditionId\r\n                })\r\n            })\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    const editConditionHandler = async (addedCondition, conditionIdtoUpdate) => {\r\n\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/${conditionIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    status: addedCondition.status,\r\n                    dateOfDiagnosis: addedCondition.dateOfDiagnosis,\r\n                    dateOfHealing: addedCondition.dateOfHealing\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n            setConditionsList(prevState => {\r\n                return prevState.map(condition => {\r\n                    if (condition._id === conditionIdtoUpdate) {\r\n                        return condition = addedCondition\r\n                    } else return condition = condition\r\n                })\r\n            })\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container >\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!props.profil && <Row><Col className=\"text-center\"><div className={classes.title}><h4>Παθήσεις</h4></div></Col></Row>}\r\n            {deleteModalIsOpen && <DeleteConditionsModal onConfirm={removeConditionHandler} onCancel={closeDeleteModal} description={'Για να επιβεβαιώσετε τη διαγραφή πληκτρολόγηστε το νούμερο:'} title='Διαγραφή Πάθησης' />}\r\n\r\n            <Card className={classes.conditionsCard}>\r\n                {isLoading && <LoadingSpinner />}\r\n                <ConditionsHeader />\r\n\r\n                {addCondition && <ConditionsForm setAddCondition={setAddCondition} addConditionHandler={addConditionHandler} />}\r\n                <ConditionsList addCondition={addCondition} conditionsList={conditionsList} editConditionHandler={editConditionHandler} openDeleteModal={openDeleteModal} removeConditionHandler={removeConditionHandler} />\r\n\r\n                <Row>\r\n                    <Col>\r\n                        {!addCondition && <button className={classes.addCondition} onClick={openAddForm}>Προσθήκη Πάθησης</button>}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Conditions;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js",["588","589","590","591"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from './Allergies.module.css'\r\nimport ConditionsFinder from '../ConditionsFinder';\r\nimport Card from \"../../../../UI/Card\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport AllergiesLoaded from \"./AllergiesLoaded\";\r\nimport SaveButton from \"../../../../UI/SaveButton\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AuthContext } from \"../../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../../../context/patient-context\";\r\nimport ErrorModal from \"../../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../../UI/LoadingSpinner\";\r\n\r\n\r\nconst Allergies = (props) => {\r\n    const [allergiesList, setAllergiesList] = useState([]);\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const [selectedConditionsList, setSelectedConditionsList] = useState([])\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [allergiesLoaded, setAllergiesLoaded] = useState(false);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient()\r\n\r\n    // console.log(allergiesList)\r\n\r\n    useEffect(() => {\r\n        const fetchAllergies = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/allergies`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                if (responseData.length > 0) {\r\n                    setAllergiesList(responseData);\r\n                    setAllergiesLoaded(true)\r\n                }\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchAllergies();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!!props.profil) {\r\n            setAllergiesLoaded(true)\r\n        }\r\n    }, [props.profil])\r\n\r\n    useEffect(() => {\r\n        if (allergiesLoaded) {\r\n            setSelectedConditionsList([])\r\n        }\r\n    }, [allergiesLoaded])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (allergiesList.length === 0) {\r\n    //         setAllergiesLoaded(false)\r\n    //     }\r\n    // }, [allergiesList])\r\n\r\n    // useEffect(() => {\r\n    //     if (!!patientContext.anamnistikoId)\r\n    //         setAllergiesLoaded(true);\r\n\r\n    // }, [patientContext.anamnistikoId])\r\n\r\n\r\n    const checkIfInList = (selectedName, list) => {\r\n        let res = false;\r\n        list.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToAllergyList = async (allergyName) => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        console.log(allergyName, responseData)\r\n        setAllergiesList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName, allergiesList)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n        if (allergiesLoaded && allergiesList.length > 0) {\r\n            console.log('innnnnnnnnn')\r\n            try {\r\n                await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/allergies_loaded`, 'POST',\r\n                    JSON.stringify({\r\n                        name: allergyName,\r\n                        _id: responseData\r\n                    })\r\n                    , {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + auth.token\r\n                    }\r\n                );\r\n\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n    }\r\n    const removeFromAllergyList = async (allergyId) => {\r\n        console.log(allergyId)\r\n        try {\r\n            if (allergiesLoaded) {\r\n                await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/allergies/${allergyId}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n            }\r\n            setAllergiesList((prevState) => {\r\n                return prevState.filter((allergy) => {\r\n                    return allergy._id !== allergyId\r\n                })\r\n            })\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const changeHandler = async (event) => {\r\n\r\n        if (event.target.checked) {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setAllergiesList((prevState) => {\r\n                if (!checkIfInList(event.target.value, allergiesList)) {\r\n                    return [...prevState, { name: event.target.value, _id: responseData }]\r\n                }\r\n                else return [...prevState];\r\n            })\r\n        }\r\n        else if (!event.target.checked) {\r\n            console.log(event.target.value, selectedConditionsList)\r\n            if (checkIfInList(event.target.value, selectedConditionsList)) {\r\n                setSelectedConditionsList(prevState => {\r\n                    return prevState.filter(allergy => {\r\n                        return allergy.name !== event.target.value\r\n                    })\r\n                })\r\n                console.log(selectedConditionsList)\r\n            }\r\n            setAllergiesList((prevState) => {\r\n                return prevState.filter((allergy) => {\r\n                    return allergy.name !== event.target.value\r\n                })\r\n            })\r\n\r\n        }\r\n        console.log(allergiesList)\r\n    }\r\n\r\n    const addToSelectedConditionsList = async (hit) => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        setSelectedConditionsList((prevState) => {\r\n            return [...prevState, { name: hit.code + ': ' + hit.condition, _id: responseData }];\r\n        })\r\n        console.log(hit)\r\n        addToAllergyList(hit.code + ': ' + hit.condition)\r\n    }\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(allergiesList)\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/allergies`, 'POST',\r\n                JSON.stringify({\r\n                    allergies: allergiesList\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            setAllergiesLoaded(true)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            {(!props.profil) && <Row><Col className=\"text-center\"><div className={classes.title}><h4>Αλλεργίες</h4></div></Col></Row>}\r\n            {isLoading && allergiesLoaded && <LoadingSpinner />}\r\n            <form className={(!!props.profil) ? classes.infoAllergiesForm : classes.allergiesForm} onSubmit={submitHandler}>\r\n                <Card className={(allergiesLoaded ) ? classes.infoAllergiesCard : classes.allergiesForm}>\r\n                    {allergiesLoaded && (allergiesList.length > 0) && <AllergiesLoaded allergiesList={allergiesList} addToAllergyList={addToAllergyList} removeFromAllergyList={removeFromAllergyList} />}\r\n                    {allergiesLoaded && (allergiesList.length === 0) && <Fragment>\r\n                        <Row>\r\n                            <Col className=\"text-center\">\r\n                                Δεν υπάρχουν καταγεγραμμένες αλλεργίες,για να προσθέσετε πατήστε\r\n                                <button type='button' className={classes.addLoaded} onClick={() => { setAllergiesLoaded(false) }}>Προσθήκη</button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Fragment>}\r\n                    {!allergiesLoaded && <Fragment>\r\n                        <Row className=\"justify-content-space-around\">\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={5}><h5>Γενικές αλλεργία</h5></Col>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={5}><h5>Αλλεργίες σε Φάρμακα</h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Τ78.4: Αλλεργία,μη καθορισμένη' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Τ78.4: Αλλεργία,μη καθορισμένη</label>\r\n                            </Col>\r\n                            <Col xs={2} md={1} className='text-end'>\r\n                                <input type='checkbox' value='Ζ88.1: Ατομικό ιστορικό αλλεργίας στην πενικιλίνη' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Ζ88.1: Ατομικό ιστορικό αλλεργίας στην πενικιλίνη</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='J30.1: Αλλεργική ρινίτιδα που οφείλεται στη γύρη' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>J30.1: Αλλεργική ρινίτιδα που οφείλεται στη γύρη</label>\r\n                            </Col>\r\n\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.2: Ατομικό ιστορικό αλλεργίας σε άλλους αντιβιοτικούς παράγοντες' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.2: Ατομικό ιστορικό αλλεργίας σε άλλους αντιβιοτικούς παράγοντες</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='J30.2:  Άλλη εποχική αλλεργική ρινίτιδα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>J30.2:  Άλλη εποχική αλλεργική ρινίτιδα</label>\r\n                            </Col>\r\n\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.3: Ατομικό ιστορικό αλλεργίας στις σουλφοναμίδες' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.3: Ατομικό ιστορικό αλλεργίας στις σουλφοναμίδες</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='J30.3: Άλλη αλλεργική ρινίτιδα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>J30.3: Άλλη αλλεργική ρινίτιδα</label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.4: Ατομικό ιστορικό αλλεργίας σε άλλους παράγοντες κατά των λοιμώξεων' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.4: Ατομικό ιστορικό αλλεργίας σε άλλους παράγοντες κατά των λοιμώξεων</label>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='J30.4: Αλλεργική ρινίτιδα, μη καθορισμένη' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\" >\r\n                                <label>J30.4: Αλλεργική ρινίτιδα, μη καθορισμένη</label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.5: Ατομικό ιστορικό αλλεργίας σε αναισθητικό παράγοντα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.5: Ατομικό ιστορικό αλλεργίας σε αναισθητικό παράγοντα</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='J45: Κυρίως αλλεργικό άσθμα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>J45: Κυρίως αλλεργικό άσθμα</label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.6: Ατομικό ιστορικό αλλεργίας σε ναρκωτικό παράγοντα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.6: Ατομικό ιστορικό αλλεργίας σε ναρκωτικό παράγοντα</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='K52.2: Αλλεργική και διαιτητική γαστρεντερίτιδα και κολίτιδα' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>K52.2: Αλλεργική και διαιτητική γαστρεντερίτιδα και κολίτιδα</label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.7: Ατομικό ιστορικό αλλεργίας σε ορό και εμβόλιο' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.7: Ατομικό ιστορικό αλλεργίας σε ορό και εμβόλιο</label>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='L23: Αλλεργική δερματίτιδα εξ επαφής' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>L23: Αλλεργική δερματίτιδα εξ επαφής </label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.8: Ατομικό ιστορικό αλλεργίας σε άλλα φάρμακα, φαρμακευτικές και βιολογικές ουσίες' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.8: Ατομικό ιστορικό αλλεργίας σε άλλα φάρμακα, φαρμακευτικές και βιολογικές ουσίες</label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='L50.0: Αλλεργική κνίδωση' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>L50.0: Αλλεργική κνίδωση</label>\r\n                            </Col>\r\n                            <Col className=\"text-end\" xs={2} md={1}>\r\n                                <input type='checkbox' value='Z88.9: Ατομικό ιστορικό αλλεργίας σε μη καθορισμένα φάρμακα, φαρμακευτικές και βιολογικές ουσίες' onChange={changeHandler} />\r\n                            </Col>\r\n                            <Col className=\"text-start\">\r\n                                <label>Z88.9: Ατομικό ιστορικό αλλεργίας σε μη καθορισμένα φάρμακα, φαρμακευτικές και βιολογικές ουσίες</label>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        {selectedConditionsList.map((condition) => {\r\n                            return (\r\n                                <Row key={uuid()}>\r\n                                    <Col className=\"text-end\" xs={2} md={1}>\r\n                                        <input defaultChecked type='checkbox' value={`${condition.name}`} onChange={changeHandler} />\r\n                                    </Col>\r\n                                    <Col xs={6}>\r\n                                        <label>{`${condition.name}`}</label>\r\n                                    </Col>\r\n                                </Row>\r\n                            );\r\n                        })}\r\n                        <Row>\r\n                            <Col>\r\n                                {addAllergy && <ConditionsFinder add addToSelectedConditionsList={addToSelectedConditionsList} setSelectedCondition={setSelectedCondition} setSelectedConditionsList={setSelectedConditionsList} setAddAllergy={setAddAllergy} />}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                {!addAllergy && <button className={classes.addCondition} onClick={() => { setAddAllergy(true) }}>Προσθήκη Αλλεργίας</button>}\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                        <Col><label>Άλλα</label><input type='text'/></Col>\r\n                    </Row> */}\r\n                    </Fragment>}\r\n                    {!allergiesLoaded && <Row>\r\n                        <Col>\r\n                            <SaveButton />\r\n                        </Col>\r\n                    </Row>}\r\n                </Card>\r\n            </form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Allergies;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js",["592","593","594","595"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from './Klironomiko.module.css';\r\nimport KlironomikoOptions from \"./KlironomikoOptions\";\r\nimport Card from \"../../../UI/Card\";\r\nimport ConditionsFinder from \"../Atomiko/ConditionsFinder\";\r\nimport KlirnomikoLoaded from \"./KlironomikoLoaded\";\r\nimport SaveButton from '../../../UI/SaveButton'\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\n\r\n\r\nconst Klironomiko = (props) => {\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const [cleronomicalList, setCleronomicalList] = useState([]);\r\n    const [klirnomikoLoaded, setKlironomikoLoaded] = useState(false);\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient()\r\n    const [selectedConditionsList, setSelectedConditionsList] = useState([])\r\n    const [addKlironomiko, setAddKlironomiko] = useState(false);\r\n\r\n    console.log(cleronomicalList)\r\n\r\n    useEffect(() => {\r\n        const fetchKlironomiko = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/klironomiko`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                if (responseData.length > 0) {\r\n                    setCleronomicalList(responseData);\r\n                    setKlironomikoLoaded(true)\r\n                }\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchKlironomiko();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n    useEffect(() => {\r\n        if (!!props.profil) {\r\n            setKlironomikoLoaded(true)\r\n        }\r\n    }, [props.profil])\r\n\r\n    useEffect(() => {\r\n        if (klirnomikoLoaded) {\r\n            setSelectedConditionsList([])\r\n        }\r\n    }, [klirnomikoLoaded])\r\n\r\n\r\n\r\n    const checkIfInList = (selectedName, list) => {\r\n        let res = false;\r\n        list.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToCleronomicalList = async (allergyName) => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        setCleronomicalList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName, cleronomicalList)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n        if (klirnomikoLoaded && cleronomicalList.length > 0) {\r\n            console.log('innnnnnnnnn')\r\n            try {\r\n                await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/klironomiko_loaded`, 'POST',\r\n                    JSON.stringify({\r\n                        name: allergyName,\r\n                        _id: responseData\r\n                    })\r\n                    , {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + auth.token\r\n                    }\r\n                );\r\n\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n    }\r\n    const removeFromCleronomicalList = async (klironomikoId) => {\r\n        console.log(klironomikoId)\r\n        try {\r\n            if (klirnomikoLoaded) {\r\n                await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/klironomiko/${klironomikoId}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n            }\r\n            setCleronomicalList((prevState) => {\r\n                return prevState.filter((klironomiko) => {\r\n                    return klironomiko._id !== klironomikoId\r\n                })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const changeHandler = async (event) => {\r\n        if (event.target.checked) {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setCleronomicalList((prevState) => {\r\n                if (!checkIfInList(event.target.value, cleronomicalList)) {\r\n                    return [...prevState, { name: event.target.value, _id: responseData }]\r\n                }\r\n                else return [...prevState];\r\n            })\r\n        }\r\n        else if (!event.target.checked) {\r\n            console.log(event.target.value, selectedConditionsList)\r\n            if (checkIfInList(event.target.value, selectedConditionsList)) {\r\n                setSelectedConditionsList(prevState => {\r\n                    return prevState.filter(allergy => {\r\n                        return allergy.name !== event.target.value\r\n                    })\r\n                })\r\n                console.log(selectedConditionsList)\r\n            }\r\n            setCleronomicalList((prevState) => {\r\n                return prevState.filter((allergy) => {\r\n                    return allergy.name !== event.target.value\r\n                })\r\n            })\r\n\r\n        }\r\n        console.log(cleronomicalList)\r\n    }\r\n\r\n    const addToSelectedConditionsList = async (hit) => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        setSelectedConditionsList((prevState) => {\r\n            return [...prevState, { name: hit.code + ': ' + hit.condition, _id: responseData }];\r\n        })\r\n        console.log(hit)\r\n        addToCleronomicalList(hit.code + ': ' + hit.condition)\r\n    }\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(cleronomicalList)\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/klironomiko`, 'POST',\r\n                JSON.stringify({\r\n                    cleronomical: cleronomicalList\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            setKlironomikoLoaded(true)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.klironomiko}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <form onSubmit={submitHandler} >\r\n                <Card className={(!!props.profil) ? classes.klironomikoInfoCard : classes.klironomikoCard}>\r\n                    {isLoading && klirnomikoLoaded && <LoadingSpinner />}\r\n                    {klirnomikoLoaded && cleronomicalList.length > 0 && <KlirnomikoLoaded cleronomicalList={cleronomicalList} addToCleronomicalList={addToCleronomicalList} removeFromCleronomicalList={removeFromCleronomicalList} />}\r\n                    {klirnomikoLoaded && (cleronomicalList.length === 0) && <Fragment>\r\n                        <Row>\r\n                            <Col className=\"text-center\">\r\n                                Δεν υπάρχουν καταγεγραμμένες κληρονομικές παθήσεις,για να προσθέσετε πατήστε\r\n                                <button type='button' className={classes.addLoaded} onClick={() => { setKlironomikoLoaded(false) }}>Προσθήκη</button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Fragment>}\r\n                    {!klirnomikoLoaded && <Fragment>\r\n                        <KlironomikoOptions label='Z83.3: Οικογενειακό ιστορικό σακχαρώδους διαβήτη' changeHandler={changeHandler} />\r\n                        <KlironomikoOptions label='Z83.4: Οικογενειακό ιστορικό άλλων ενδοκρινικών, διατροφικών και μεταβολικών νοσημάτων' changeHandler={changeHandler} />\r\n                        <KlironomikoOptions label='E78.0 Αμιγής υπερχοληστερολαιμία' changeHandler={changeHandler} />\r\n                        <KlironomikoOptions label='Z81.1: Οικογενειακό ιστορικό κατάχρησης οινοπνεύματος' changeHandler={changeHandler} />\r\n                        <KlironomikoOptions label='Z81.2: Οικογενειακό ιστορικό κατάχρησης καπνού' changeHandler={changeHandler} />\r\n                        {selectedConditionsList.map((condition) => {\r\n                            return (\r\n                                <KlironomikoOptions label={`${condition.name}`} changeHandler={changeHandler} key={uuid()} defaultChecked addToCleronomicalList={addToCleronomicalList} />\r\n\r\n                            );\r\n                        })}\r\n                        <Row>\r\n                            <Col>\r\n                                {addKlironomiko && <ConditionsFinder add addToSelectedConditionsList={addToSelectedConditionsList} setSelectedCondition={setSelectedCondition} setSelectedConditionsList={setSelectedConditionsList} setAddAllergy={setAddKlironomiko} />}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                {!addKlironomiko && <button className={classes.addKlironomiko} onClick={() => { setAddKlironomiko(true) }}>Προσθήκη Πάθησης</button>}\r\n                            </Col>\r\n                        </Row>\r\n                    </Fragment>}\r\n                    {!klirnomikoLoaded && <Row>\r\n                        <Col>\r\n                            <SaveButton />\r\n                        </Col>\r\n                    </Row>}\r\n                </Card>\r\n            </form>\r\n        </Container >\r\n    );\r\n}\r\nexport default Klironomiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js",["596","597","598"],"import { useCallback, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n// import classes from './Klironomiko.module.css';\r\n\r\nconst KlironomikoOptions = (props) => {\r\n//     const addToList=useCallback(()=>{\r\n//         if (!!props.defaultChecked){\r\n//             props.addToCleronomicalList(props.label)\r\n//             console.log('done')\r\n//         }\r\n//     })\r\n//     useEffect(() => {\r\n//         addToList()\r\n// }, [addToList])\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={2} md={1} className='text-end'><input type='checkbox' value={props.label} onChange={props.changeHandler} defaultChecked={props.defaultChecked}/></Col>\r\n            <Col className='text-start'><label>{props.label}</label></Col>\r\n        </Row>\r\n    );\r\n}\r\nexport default KlironomikoOptions;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js",["599","600","601","602","603"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport SurgeriesList from \"./SurgeriesList\";\r\nimport SurgeriesForm from './SurgeriesForm';\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport classes from './Surgeries.module.css'\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\nconst Surgeries = (props) => {\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    const [addSurgery, setAddSurgery] = useState(false);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const { error, clearError, sendRequest, isLoading } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchSurgeries = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/surgeries`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setSurgeriesList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n        fetchSurgeries();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n\r\n    const openSurgeryFormHandler = (event) => {\r\n        setAddSurgery(true)\r\n    }\r\n\r\n    const addSurgeryHandler = async (surgery) => {\r\n        const id = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        \r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/surgery`, 'POST',\r\n                JSON.stringify({\r\n                    _id: id,\r\n                    title: surgery.title,\r\n                    dateOfEntrance: surgery.dateOfEntrance,\r\n                    dateOfExit: surgery.dateOfExit,\r\n                    hospital: surgery.hospital\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            setSurgeriesList((prevState) => {\r\n                return [...prevState, {\r\n                    _id: id,\r\n                    title: surgery.title,\r\n                    dateOfEntrance: surgery.dateOfEntrance,\r\n                    dateOfExit: surgery.dateOfExit,\r\n                    hospital: surgery.hospital\r\n                }];\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const removeSurgeryHandler = async (surgeryIdToDelete) => {\r\n\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/surgery/${surgeryIdToDelete}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n            setSurgeriesList((prevState) => {\r\n                return prevState.filter(surgery => {\r\n                    return surgery._id !== surgeryIdToDelete\r\n                })\r\n            })\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    const editSurgeryHandler = async (addedSurgery, surgeryIdtoUpdate) => {\r\n        setSurgeriesList(prevState => {\r\n            return prevState.map(surgery => {\r\n                if (surgery._id === surgeryIdtoUpdate) {\r\n                    return surgery = {...addedSurgery,_id:surgery._id}\r\n                } else return surgery = surgery\r\n            })\r\n        })\r\n\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/surgery/${surgeryIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    title: addedSurgery.title,\r\n                    dateOfEntrance: addedSurgery.dateOfEntrance,\r\n                    dateOfExit: addedSurgery.dateOfExit,\r\n                    hospital: addedSurgery.hospital\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.surgeriesCard}>\r\n                <Row className={classes.surgeryHeader}>\r\n                    <Col className=\"text-center\"   >Τίτλος</Col>\r\n                    <Col className=\"text-center\">Ημ/νια Εισόδου</Col>\r\n                    <Col className=\"text-center\">Ημ/νία Εξόδου</Col>\r\n                    <Col className=\"text-center\" sm={4} md={2}>Νοσοκομείο</Col>\r\n                    <Col sm={2}></Col>\r\n                </Row>\r\n                {addSurgery && <SurgeriesForm setAddSurgery={setAddSurgery} addSurgeryHandler={addSurgeryHandler} />}\r\n                <SurgeriesList editSurgeryHandler={editSurgeryHandler} surgeriesList={surgeriesList} addSurgery={addSurgery} removeSurgeryHandler={removeSurgeryHandler} />\r\n                {!addSurgery && !isLoading && <Row><Col><button onClick={openSurgeryFormHandler} className={classes.surgeryButton}>Προσθήκη Χειρουργείου</button></Col></Row>}\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Surgeries;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js",["604","605","606"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useContext, useState, useRef, useEffect } from \"react\";\r\nimport Pregnacy from './Pregnacy'\r\nimport Card from \"../../../UI/Card\";\r\nimport classes from './Gynaikologiko.module.css';\r\nimport SaveButton from '../../../UI/SaveButton';\r\nimport EditFormButton from \"../../../UI/EditFormButton\";\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst Gynaikologiko = (props) => {\r\n    const [gynaikologiko, setGynaikologiko] = useState({ emminarxi: null, stability: null, cycle_duration: null, period_duration: null, maieutiko: [], adk: null, tdk: null })\r\n    const [editGynaikologiko, setEditGynaikologiko] = useState(false)\r\n    const [stability, setStability] = useState(true);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { error, clearError, sendRequest, isLoading } = useHttpClient();\r\n\r\n    const emminarxiInputRef = useRef();\r\n    const stabilityInputRef = useRef();\r\n    const emminopausiInputRef = useRef();\r\n    const period_durationInputRef = useRef();\r\n    const cycle_durationInputRef = useRef();\r\n    const adkInputRef = useRef();\r\n    const tdkInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchGynaikologiko = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                if (!!responseData) {\r\n                    setGynaikologiko(responseData);\r\n                    setEditGynaikologiko(true)\r\n                    console.log(gynaikologiko)\r\n                }\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchGynaikologiko();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n\r\n\r\n\r\n    const stabilityChangeHandler = (event) => {\r\n        setStability(event.target.value === 'true')\r\n\r\n    }\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        try {\r\n            const responseDate = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko`, 'POST',\r\n                JSON.stringify({\r\n                    emminarxi: emminarxiInputRef.current.value,\r\n                    stability: stabilityInputRef.current.value,\r\n                    cycle_duration: cycle_durationInputRef.current.value,\r\n                    period_duration: period_durationInputRef.current.value,\r\n                    emminopausi: emminopausiInputRef.current.value,\r\n\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            console.log(responseDate)\r\n            // patientContext.createAnamnistikoId(responseDate._id)\r\n            setEditGynaikologiko(true)\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n    const updateHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('update')\r\n        try {\r\n            const responseDate = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko`, 'PATCH',\r\n                JSON.stringify({\r\n                    emminarxi: emminarxiInputRef.current.value,\r\n                    stability: stabilityInputRef.current.value,\r\n                    cycle_duration: cycle_durationInputRef.current.value,\r\n                    period_duration: period_durationInputRef.current.value,\r\n                    emminopausi: emminopausiInputRef.current.value,\r\n\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            console.log(responseDate)\r\n            patientContext.createAnamnistikoId(responseDate._id)\r\n            setEditGynaikologiko(false)\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Row><Col className=\"text-center\"><div ><h4>Έμμηνος Ρύση</h4></div></Col></Row>\r\n            <form onSubmit={(!editGynaikologiko) ? submitHandler : updateHandler}>\r\n                <Card className={classes.erCard}>\r\n                    <Row>\r\n                        <Col sm lg=\"2\" className='text-sm-end'><label>Εμμηναρχή</label></Col>\r\n                        <Col sm lg=\"2\" className='text-start'><input min={1} max={99} disabled={editGynaikologiko} type='number' placeholder=\"ηλικία σε έτη\" ref={emminarxiInputRef} defaultValue={gynaikologiko.emminarxi} required /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={6}  lg={2} className='text-sm-end'><label>Σταθερότητα</label></Col>\r\n                        <Col sm={6}  lg={2}>\r\n                            <select name='stability' onChange={stabilityChangeHandler} ref={stabilityInputRef} disabled={editGynaikologiko}>\r\n                                <option value={false} selected={!gynaikologiko.stabilityInputRef}>ασταθής</option>\r\n                                <option value={true} selected >σταθερή</option>\r\n                            </select>\r\n                        </Col>\r\n                        <Col sm={6}  lg={2} className='text-sm-end'><label>Διάρκεια Κύκλου</label></Col>\r\n                        <Col sm={6}  lg={2}><input min={1} max={999} type='number' placeholder=\"διάρκεια σε ημέρες\" defaultValue={(gynaikologiko.cycle_duration !== 28) ? (gynaikologiko.cycle_duration) : 28} disabled={(stability === false) || editGynaikologiko} ref={cycle_durationInputRef} /></Col>\r\n                        <Col sm={6}  lg={2} className='text-sm-end'><label>Διάρκεια Περιόδου</label></Col>\r\n                        <Col sm={6}  lg={2}><input min={1} max={99} type='number' placeholder=\"διάρκεια σε ημέρες\" disabled={editGynaikologiko} defaultValue={gynaikologiko.period_duration} ref={period_durationInputRef} /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={6}  lg={2} className='text-sm-end'><label>Εμμηνόπαυση</label></Col>\r\n                        <Col sm={6}  lg={2} className='text-start'><input min={1} max={99} disabled={editGynaikologiko} type='number' placeholder=\"ηλικία σε έτη\" ref={emminopausiInputRef} defaultValue={gynaikologiko.emminopausi} /></Col>\r\n                    </Row>\r\n                    {!isLoading && <Row className=\"justify-content-sm-end\">\r\n                        <Col >\r\n                            {editGynaikologiko && <EditFormButton onClick={() => { setEditGynaikologiko(false) }} />}\r\n                            {!editGynaikologiko && <SaveButton />}\r\n                        </Col>\r\n                    </Row>}\r\n                </Card>\r\n\r\n            </form>\r\n            <Row><Col className=\"text-center\"><div ><h4>Μαιευτικό Ιστορικό</h4></div></Col></Row>\r\n\r\n            <Pregnacy pregnacyList={props.pregnacyList} setPregnaciesList={props.setPregnaciesList} />\r\n\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Gynaikologiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js",["607","608","609","610","611"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport classes from './Pregnacy.module.css'\r\nimport PregnacyForm from \"./PregnacyForm\";\r\nimport PregnaciesList from \"./PregnacyList\";\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\nconst Pregnacy = (props) => {\r\n    const [pregnacyList, setPregnaciesList] = useState([]);\r\n    const [addPregnacy, setAddPregnacy] = useState(false);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const { error, clearError, sendRequest, isLoading } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchPregnacies = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko/pregnacies`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setPregnaciesList(responseData);\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchPregnacies();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n\r\n    const addPregnacyHandler = async (pregnacy) => {\r\n        const id = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko/pregnacy`, 'POST',\r\n                JSON.stringify({\r\n                    _id: id,\r\n                    date_of_birth: pregnacy.date_of_birth,\r\n                    gennisi: pregnacy.gennisi,\r\n                    baby_weight: pregnacy.baby_weight,\r\n                    comments: pregnacy.comments\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            setPregnaciesList((prevState) => {\r\n                return [...prevState, pregnacy];\r\n            })\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n    const removePregnacyHandler = async (pregnacyIdToDelete) => {\r\n\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko/pregnacy/${pregnacyIdToDelete}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n            setPregnaciesList((prevState) => {\r\n                return prevState.filter(pregnacy => {\r\n                    return pregnacy._id !== pregnacyIdToDelete\r\n                })\r\n            })\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    const editPregnacyHandler = async (addedPregnacy, pregnacyIdtoUpdate) => {\r\n        console.log(addedPregnacy,pregnacyIdtoUpdate)\r\n        setPregnaciesList(prevState => {\r\n            return prevState.map(pregnacy => {\r\n                if (pregnacy._id === pregnacyIdtoUpdate) {\r\n                    return pregnacy = addedPregnacy\r\n                } else return pregnacy = pregnacy\r\n            })\r\n        })\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/anamnistiko/gynaikologiko/pregnacy/${pregnacyIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    date_of_birth: addedPregnacy.date_of_birth,\r\n                    gennisi: addedPregnacy.gennisi,\r\n                    baby_weight: addedPregnacy.baby_weight,\r\n                    comments: addedPregnacy.comments\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.pregnacyCard}>\r\n                <Row className={classes.pregnacyHeader}>\r\n                    <Col className=\"text-center\">Ημερομηνία</Col>\r\n                    <Col className=\"text-center\">Γέννηση</Col>\r\n                    <Col className=\"text-center\">Βάρος Νεογνού(kg)</Col>\r\n                    <Col className=\"text-center\">Σχόλια</Col>\r\n                    <Col sm={2}></Col>\r\n                </Row>\r\n                {addPregnacy && <PregnacyForm setAddPregnacy={setAddPregnacy} addPregnacyHandler={addPregnacyHandler} />}\r\n                <PregnaciesList editPregnacyHandler={editPregnacyHandler} removePregnacyHandler={removePregnacyHandler} pregnacyList={pregnacyList} addPregnacy={addPregnacy} />\r\n                <Row>\r\n                    <Col>\r\n                        {((!!props.info && props.editGynaikologiko) || (!props.info)) && <button type='button' onClick={() => { setAddPregnacy(true) }} className={classes.addPregnacy}>Προσθήκη Κύησης</button>}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Pregnacy;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js",["612","613","614","615","616","617"],"import { useState, useEffect, useContext } from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../components/UI/Card\"\r\nimport Notifications, { notify } from 'react-notify-toast';\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\n\r\nconst EmailConfirmation = () => {\r\n    // const [confirming, setConfirming] = useState(true);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId=useParams().userId;\r\n    console.log(userId)\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const completeSignup = async () => {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/${userId}/login`, 'GET', null, { 'Content-Type': 'application/json' })\r\n            console.log(responseData);\r\n            auth.login(responseData.userId, responseData.token);\r\n        }\r\n        completeSignup();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Notifications />\r\n            <Card>\r\n                <Row>\r\n                    <Col className=\"text-center\"> Το e-mail επιβεβαιώθηκε επιτυχώς</Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EmailConfirmation;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js",["618","619","620","621","622"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Highlight, RefinementList, Configure, Pagination } from \"react-instantsearch-dom\";\r\n\r\n{/* <InstantSearch indexName=\"demo_ecommerce\" searchClient={searchClient}></InstantSearch> */ }\r\n\r\nconst Hit = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={1}>\r\n          <span className=\"hitCheckbox\">\r\n            {/* <Highlight hit={props.hit}><input type='checkbox' /></Highlight> */}\r\n            <input type='radio' name='condition' value={props.hit.code}/>\r\n          </span>\r\n        </Col>\r\n        <Col className=\"text-start\">\r\n\r\n          <label>\r\n            {/* <Highlight attribute=\"code\" hit={props.hit} /> */}\r\n            {props.hit.code}\r\n            <span>&nbsp;:&nbsp;&nbsp;</span>\r\n            {props.hit.condition}\r\n            {/* <Highlight attribute=\"condition\" hit={props.hit} /> */}\r\n\r\n          </label>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Hit;",["623","624"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js",["625","626","627"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport Card from '../../UI/Card';\r\nimport FarmakaList from './FarmakaList';\r\nimport FarmakaForm from './FarmakaForm';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner'\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport FarmakaHeader from './FarmakaHeader';\r\nimport classes from './Farmaka.module.css';\r\nimport { PatientContext } from '../../../context/patient-context';\r\n\r\n\r\n\r\n\r\nconst Farmaka = (props) => {\r\n    const { sendRequest, isLoadding, error, clearError } = useHttpClient();\r\n\r\n\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n\r\n\r\n    const [farmakaList, setFarmakaList] = useState([])\r\n    const [addFarmako, setAddFarmako] = useState(false);\r\n\r\n\r\n\r\n    const fetchFarmaka = useCallback(async () => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/farmaka`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setFarmakaList(responseData.farmakaList)\r\n\r\n\r\n        } catch (err) { }\r\n    }\r\n    )\r\n    useEffect(() => {\r\n        if (!!patientContext.patientId) {\r\n            fetchFarmaka();\r\n        }\r\n    }, [patientContext.patientId])\r\n\r\n\r\n\r\n    const addFarmakaHandler = (farmako) => {\r\n        setFarmakaList((prevState) => {\r\n            return [...prevState, farmako];\r\n        })\r\n        console.log(farmakaList)\r\n    }\r\n\r\n\r\n    const removeFarmakoHandler = (farmakoIdToDelete) => {\r\n        setFarmakaList((prevState) => {\r\n            return prevState.filter(farmako => {\r\n                return farmako._id !== farmakoIdToDelete\r\n            })\r\n        })\r\n    }\r\n\r\n    const editFarmakoHandler = async (newFarmako, farmakoIdToUpdate) => {\r\n        setFarmakaList(prevState => {\r\n            return prevState.map(farmako => {\r\n                if (farmako._id === farmakoIdToUpdate) {\r\n                    return farmako = { ...farmako, dateOfEnd: newFarmako.dateOfEnd, dateOfStart: newFarmako.dateOfStart }\r\n                } else return farmako = farmako\r\n            })\r\n        })\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/farmaka/${farmakoIdToUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    dateOfStart: newFarmako.dateOfStart,\r\n                    dateOfEnd: newFarmako.dateOfEnd\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={(props.info) ? classes.farmakaCard2 : classes.farmakaCard}>\r\n                {isLoadding && <LoadingSpinner />}\r\n                <FarmakaHeader />\r\n                {addFarmako && <FarmakaForm addFarmakaHandler={addFarmakaHandler} setAddFarmako={setAddFarmako} />}\r\n                <FarmakaList editFarmakoHandler={editFarmakoHandler} addFarmako={addFarmako} farmakaList={farmakaList} removeFarmakoHandler={removeFarmakoHandler} />\r\n\r\n                <Row>\r\n                    {!addFarmako && <Col><button className={classes.addFarmako} onClick={() => { setAddFarmako(true) }}>Προσθήκη Φαρμάκου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Farmaka;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js",["628"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\n\r\nimport classes from './ConditionsForm.module.css';\r\nimport ConditionsFinder from \"./ConditionsFinder\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\n\r\n\r\n\r\nconst ConditionsForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const { sendRequest } = useHttpClient();\r\n    const stateInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        const id = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n\r\n        let condition = {\r\n            name: selectedCondition,\r\n            status: (stateInputRef.current.value !== 'none') ? stateInputRef.current.value : null,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: id\r\n        }\r\n        console.log(selectedCondition)\r\n        props.addConditionHandler(condition);\r\n        props.setAddCondition(false);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.conditionsForm}>\r\n                <Col sm={4}>\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} />\r\n                </Col>\r\n                <Col sm={2} className='text-center'>\r\n                    <select ref={stateInputRef}>\r\n                        <option value=\"none\" selected disabled hidden>Επιλέξτε</option>\r\n                        <option value='Ύφεση'>Ύφεση</option>\r\n                        <option value='Υποτροπή'>Υποτροπή</option>\r\n                        <option value='Χρόνια'>Χρόνια</option>\r\n                    </select>\r\n                </Col>\r\n\r\n                <Col sm={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n                <Col sm={2}><input type='date' ref={dateOfHealingInputRef} /></Col>\r\n                <Col className='text-end' sm={1}>\r\n                    {!!selectedCondition && <SmallSaveButton />}\r\n                </Col>\r\n                <Col className='text-start' sm={1}>\r\n                    <SmallDeleteButton onClick={() => { props.setAddCondition(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ConditionsForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js",["629"],"import classes from './SmallDeleteButton.module.css';\r\nimport saveLogo from './check.png';\r\n\r\nconst SmallSaveButton = (props = { onClick: () => { } }) => {\r\n    const clickHandler = () => {\r\n        props.onClick()\r\n    }\r\n\r\n    return (\r\n        <span className={classes.buttonSpan}>\r\n            <button className={classes.saveButton} type='submit' >\r\n                <img src={saveLogo} alt='save ' title='Αποθήκευση' />\r\n            </button>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default SmallSaveButton;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js",["630","631","632","633","634","635"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../UI/Card\"\r\nimport FilesHeader from \"./FilesHeaders\"\r\nimport FilesList from './FilesList'\r\nimport FilesForm from \"./FileForm\"\r\nimport classes from './Files.module.css';\r\nimport { useState, useContext, useEffect,useCallback } from \"react\"\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport { PatientContext } from \"../../../context/patient-context\"\r\nimport { useHttpClient } from \"../../../hooks/http-hook\"\r\n\r\nconst Files = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const patientContext=useContext(PatientContext);\r\n    const {error,clearError,sendRequest,isLoading}=useHttpClient()\r\n\r\n    const [filesList, setFilesList] = useState([])\r\n    const [addFile, setAddFile] = useState(false);\r\n\r\n    const fetchFiles = useCallback(async () => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/exams`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData)\r\n            setFilesList(responseData.filesList)\r\n\r\n\r\n        } catch (err) { }\r\n    }\r\n    )\r\n    useEffect(() => {\r\n        if (!!patientContext.patientId) {\r\n            fetchFiles();\r\n        }\r\n    }, [patientContext.patientId])\r\n\r\n    \r\n\r\n\r\n    const addFileHandler = (file) => {\r\n        setFilesList((prevState) => {\r\n            return [...prevState, file];\r\n        })\r\n    }\r\n\r\n    const removeFileHandler = (fileIdToDelete) => {\r\n        setFilesList((prevState) => {\r\n            return prevState.filter(file=>{\r\n                return file.id!==fileIdToDelete\r\n            })\r\n        })\r\n    }\r\n  \r\n\r\n    return (\r\n        <Container>\r\n            <Card className={(props.info)?classes.filesCard2:classes.filesCard}>\r\n                <FilesHeader />\r\n                {addFile && <FilesForm addFileHandler={addFileHandler} setAddFile={setAddFile} />}\r\n                <FilesList filesList={filesList} addFile={addFile} removeFileHandler={removeFileHandler}/>\r\n\r\n                <Row>\r\n                    {!addFile && <Col><button className={classes.addFile} onClick={() => { setAddFile(true) }}>Προσθήκη Αρχείου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Files;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js",["636","637","638","639"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './FilesListItem.module.css'\r\nimport DeleteButton from '../../UI/DeleteButton'\r\nimport ViewButton from \"../../UI/ViewButton\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst FilesListItem = (props) => {\r\n    const { sendRequest, isLoading, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/uploads/exams/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        props.removeFileHandler(props._id)\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className={classes.filesListItem}>\r\n            <Col className=\"text-center\" sm={4} md={4}>{props.fileName}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.fileType}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.dateOfDiagnosis}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.dateOfVisit}</Col>\r\n            <Col sm={1} className=\"text-end\">\r\n                <a href={`${process.env.REACT_APP_BACKEND_URL}/uploads/exams/${props.path}`} target=\"_blank\"><ViewButton /></a>\r\n            </Col>\r\n            <Col sm={1} className=\"text-start\">\r\n                {!isLoading && <DeleteButton onClick={clickHandler} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FilesListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js",["640","641","642"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef } from \"react\";\r\nimport FileUploader from \"./FileUploader\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FileForm.module.css';\r\nimport moment from 'moment';\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { useContext } from \"react\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst FilesForm = (props) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const { sendRequest, error } = useHttpClient();\r\n\r\n\r\n    const patientContext = useContext(PatientContext)\r\n    const typeInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(selectedFile);\r\n        let fileId;\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('exam', selectedFile);\r\n            formData.append('name', selectedFile.name)\r\n            formData.append('type', typeInputRef.current.value);\r\n            formData.append('dateOfDiagnosis', dateOfDiagnosisInputRef.current.value);\r\n            formData.append('dateOfVisit', dateOfVisitInputRef.current.value);\r\n\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/uploads/exams`, 'POST', formData);\r\n            fileId = responseData.exam._id\r\n            console.log(responseData);\r\n\r\n            let file = {\r\n                name: selectedFile.path,\r\n                file: responseData.exam.file,\r\n                type: typeInputRef.current.value,\r\n                dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n                dateOfVisit: dateOfVisitInputRef.current.value,\r\n                _id: responseData.exam._id\r\n            }\r\n\r\n            console.log(file)\r\n\r\n            props.addFileHandler(file);\r\n            props.setAddFile(false);\r\n\r\n\r\n        } catch (err) { console.log(err) }\r\n\r\n\r\n\r\n        // console.log(nameInputRef.current.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.fileForm}>\r\n                <Col sm={4} md={4} className='text-center'>\r\n                    <FileUploader addFileHandler={props.addFileHandler} setSelectedFile={setSelectedFile} />\r\n                    {/* <input type='file' name='title' ref={nameInputRef} /> */}\r\n                </Col>\r\n                <Col className='text-center' sm={4} md={2}>\r\n                    {/* <label>Κατάσταση</label> */}\r\n                    <select ref={typeInputRef}>\r\n                        <option>Αίματος</option>\r\n                        <option>Απεικονιστικές </option>\r\n                        <option>Άλλη</option>\r\n                        <option></option>\r\n                    </select>\r\n                </Col>\r\n\r\n                <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfVisitInputRef} defaultValue={moment(new Date()).format('YYYY-MM-DD')} /></Col>\r\n                <Col className='text-end' sm={1}>\r\n                    {!!selectedFile && <SmallSaveButton />}\r\n                </Col>\r\n                <Col className='text-start' sm={1}>\r\n                    <SmallDeleteButton onClick={() => { props.setAddFile(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default FilesForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js",["643"],"import { useRef } from \"react\";\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useState } from \"react\";\r\nimport classes from './FileUploader.module.css';\r\n\r\nconst FileUploader = (props) => {\r\n\r\n    const fileInput = useRef(null)\r\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n        onDrop: files => { props.setSelectedFile(files[0]) },\r\n        accept: {\r\n            'image/png': 'png',\r\n            'image/jpeg': 'jpeg',\r\n            'image/jpg': 'jpg',\r\n            'application/pdf': 'pdf'\r\n        },\r\n        maxFiles: 1\r\n    });\r\n\r\n\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const handleFileInput = (e) => {\r\n        console.log(e.target.files[0]);\r\n        console.log(fileInput.current.value)\r\n        console.log('here')\r\n        // const file = e.target.files[0];\r\n        // onFileSelect(e.target.files[0])\r\n        // props.onFileSelectSuccess(file);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.container}>\r\n            <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} ref={fileInput} onChange={handleFileInput} />\r\n                <p>Σύρετε εδώ ένα αρχείο , ή κλικάρετε για να επιλέξετε</p>\r\n            </div>\r\n            <aside>\r\n                <h5>Αρχείο</h5>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n        // <div className=\"file-uploader\">\r\n        //     <input type=\"file\" onChange={handleFileInput} />\r\n        //     <button onClick={e => fileInput.current && fileInput.current.click()} className=\"btn btn-primary\"></button>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default FileUploader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js",["644","645"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FarmakaForm.module.css';\r\nimport FarmakoFinder from \"./FarmakoFinder\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\n\r\nconst FarmakaForm = (props) => {\r\n    const [selectedFarmako, setSelectedFarmako] = useState({ name: '', ATC_name: '' });\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n\r\n\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        let farmakoId;\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/farmaka`, 'POST',\r\n                JSON.stringify({\r\n                    name: selectedFarmako.name,\r\n                    ATC_name: selectedFarmako.ATC_name,\r\n                    dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n                    dateOfEnd: dateOfVisitInputRef.current.value\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            farmakoId = responseData.farmako._id\r\n\r\n            let farmako = {\r\n                name: selectedFarmako.name,\r\n                ATC_name: selectedFarmako.ATC_name,\r\n                dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n                dateOfEnd: dateOfVisitInputRef.current.value,\r\n                _id: farmakoId\r\n            }\r\n            console.log(farmako);\r\n            props.addFarmakaHandler(farmako);\r\n            props.setAddFarmako(false);\r\n\r\n        } catch (err) { console.log(err) }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.farmakoForm}>\r\n                <Col sm={8} md={6} className='text-center'>\r\n                    <FarmakoFinder setSelectedFarmako={setSelectedFarmako} />\r\n                </Col>\r\n\r\n\r\n                <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfVisitInputRef} /></Col>\r\n                <Col className='text-center' sm={2}>\r\n                    {!!selectedFarmako && <SmallSaveButton />}\r\n                    <SmallDeleteButton onClick={() => { props.setAddFarmako(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FarmakaForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js",["646","647","648"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './FarmakaListItem.module.css';\r\nimport EditButton from '../../UI/EditButton'\r\nimport FarmakaEditForm from \"./FarmakaEditForm\";\r\nimport DeleteButton from '../../UI/DeleteButton'\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { Fragment, useContext,useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst FarmakaListItem = (props) => {\r\n    const [editFarmako, setEditFarmako] = useState(false)\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const editHanlder = (event) => {\r\n        setEditFarmako(true)\r\n    }\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/farmaka/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        props.removeFarmakoHandler(props.id)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!editFarmako && <Row className={classes.farmakoListItem}>\r\n                <Col className=\"text-center\" sm={4} md={3}>{props.farmakoName}</Col>\r\n                <Col className=\"text-center\" sm={4} md={3}>{props.farmakoType}</Col>\r\n                <Col className=\"text-center\" sm={4} md={2}>{(!!props.dateOfStart) ? moment(props.dateOfStart).format('DD-MM-YYYY') : ''}</Col>\r\n                <Col className=\"text-center\" sm={4} md={2}>{(!!props.dateOfEnd) ? moment(props.dateOfEnd).format('DD-MM-YYYY') : ''}</Col>\r\n                <Col sm={1} className=\"text-end\">\r\n                    <EditButton onClick={editHanlder} />\r\n                </Col>\r\n                <Col sm={1} className=\"text-start\">\r\n                    <DeleteButton onClick={clickHandler} />\r\n                </Col>\r\n            </Row>}\r\n            {editFarmako && <FarmakaEditForm\r\n                farmakoName={props.farmakoName}\r\n                farmakoType={props.farmakoType}\r\n                dateOfStart={props.dateOfStart}\r\n                dateOfEnd={props.dateOfEnd}\r\n                setEditFarmako={setEditFarmako}\r\n                id={props.id}\r\n                editFarmakoHandler={props.editFarmakoHandler}\r\n            />}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default FarmakaListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js",["649","650","651","652"],"import { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsHits from \"./ConditionsHits\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from '../../../../context/auth-context'\r\nimport { useHttpClient } from '../../../../hooks/http-hook';\r\n\r\n\r\n\r\n\r\n\r\nconst ConditionsFinder = (props) => {\r\n    const [selectedHit, setSelectedHit] = useState('');\r\n    const [hitList, setHitList] = useState([])\r\n    const [conditionInput, setConditionInput] = useState('');\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchConditionHits = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/new/conditions/name/${conditionInput}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setHitList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n\r\n        if (conditionInput !== '') {\r\n            fetchConditionHits();\r\n        }\r\n\r\n\r\n    }, [conditionInput, sendRequest]);\r\n\r\n    const nameChangeHandler = (event) => {\r\n        setConditionInput(event.target.value);\r\n        console.log(event.target.value)\r\n        props.setSelectedCondition(event.target.value)\r\n        let hit;\r\n        for (let i = 0; i < hitList.length; i++) {\r\n\r\n            if (hitList[i].code === event.target.value.split(\":\")[0]) {       /// find selected\r\n                console.log('in')\r\n                setSelectedHit(hitList[i]);\r\n                props.setSelectedCondition(hitList[i].code + \": \" + hitList[i].condition);\r\n                hit = { code: hitList[i].code, condition: hitList[i].condition }\r\n\r\n                if (!!props.add) {\r\n                    props.addToSelectedConditionsList(hit)\r\n                    setConditionInput('')\r\n                    props.setAddAllergy(false);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <input list=\"conditionNames\" name=\"conditionName\" id=\"conditionName\" minLength={5} value={conditionInput} onChange={nameChangeHandler} required />\r\n                <datalist id=\"conditionNames\" >\r\n                    <ConditionsHits hit={hitList} />\r\n                </datalist>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ConditionsFinder;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js",["653","654","655","656","657","658","659","660","661","662","663","664"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js",["665"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../../UI/Card\";\r\nimport classes from './Antikeimeniki.module.css';\r\nimport { useContext, useRef, useState, useEffect, Fragment } from \"react\";\r\nimport SaveButton from '../../../UI/SaveButton';\r\nimport EditFormButton from '../../../UI/EditFormButton';\r\nimport BMI from \"./BMI\";\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\nimport moment from \"moment\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport VisitsFiles from \"./VisitsFiles\";\r\n\r\n\r\nconst Antikeimeniki = () => {\r\n    const [loadVisit, setLoadVisit] = useState({ test_volume: '', weight: '' });\r\n    const [filesList, setFilesList] = useState([])\r\n    const [editAntikemeniki, setEditAntikemeniki] = useState(false)\r\n\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    const { error, sendRequest, clearError, isLoading } = useHttpClient();\r\n\r\n    console.log('visitId:', patientContext.visitId)\r\n    console.log(patientContext.gender)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchHistory = async () => {\r\n            console.log('fetchHistory')\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visits/${patientContext.visitId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n                setLoadVisit(responseData.visit);\r\n                setFilesList(responseData.filesList)\r\n                setBmiParams({ height: responseData.visit.height, weight: responseData.visit.weight })\r\n                setEditAntikemeniki(true)\r\n\r\n\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n\r\n        const fetchPreviousHistory = async () => {\r\n            console.log('fetchOldHistory')\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visits/oldAntikeimeniki`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadVisit(prevState => {\r\n                    return { ...prevState, test_volume: '', height: responseData.height }\r\n                });\r\n                setBmiParams({ height: responseData.height })\r\n\r\n\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n\r\n        if (!!patientContext.visitId && patientContext.visitId !== 'new') {\r\n\r\n            fetchHistory();\r\n        }\r\n        if (patientContext.visitId === 'new') {\r\n            fetchPreviousHistory()\r\n        }\r\n\r\n    }, [patientContext.visitId, sendRequest]);\r\n\r\n\r\n    const dateInputRef = useRef();\r\n    const aitia_proseleusisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n\r\n    const teleutaia_emminos_risiInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/antikeimeniki`, 'POST',\r\n                JSON.stringify({\r\n                    date: dateInputRef.current.value,\r\n                    geniki_eikona: geniki_eikonaInputRef.current.value,\r\n                    aitia_proseleusis: aitia_proseleusisInputRef.current.value,\r\n                    piesi: piesiInputRef.current.value,\r\n                    sfiksis: sfiksisInputRef.current.value,\r\n                    weight: weightInputRef.current.value,\r\n                    height: heightInputRef.current.value,\r\n                    smkt: (patientContext.gender === 'female') ? smktInputRef.current.value : null,\r\n                    tekt: tektInputRef.current.value,\r\n                    test_volume: (patientContext.gender === 'male') ? test_volumeInputRef.current.value : null,\r\n                    teleutaia_emminos_risi: (patientContext.gender === 'female') ? teleutaia_emminos_risiInputRef.current.value : null,\r\n\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setEditAntikemeniki(true)\r\n            patientContext.createVisitId(responseData._id)\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    const updateHandler = async (event) => {\r\n        console.log('update')\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visits/${patientContext.visitId}/antikeimeniki`, 'PATCH',\r\n                JSON.stringify({\r\n                    date: dateInputRef.current.value,\r\n                    geniki_eikona: geniki_eikonaInputRef.current.value,\r\n                    aitia_proseleusis: aitia_proseleusisInputRef.current.value,\r\n\r\n\r\n                    piesi: piesiInputRef.current.value,\r\n                    sfiksis: sfiksisInputRef.current.value,\r\n                    weight: weightInputRef.current.value,\r\n                    height: heightInputRef.current.value,\r\n                    smkt: (patientContext.gender === 'female') ? smktInputRef.current.value : null,\r\n                    tekt: tektInputRef.current.value,\r\n                    // if (patientContext.gender==='male')\r\n                    test_volume: (patientContext.gender === 'male') ? test_volumeInputRef.current.value : null,\r\n                    teleutaia_emminos_risi: (patientContext.gender === 'female') ? teleutaia_emminos_risiInputRef.current.value : null,\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setEditAntikemeniki(true)\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.newVisit}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!!isLoading && <LoadingSpinner />}\r\n            <form onSubmit={(!patientContext.visitId || (patientContext.visitId === 'new')) ? submitHandler : updateHandler}>\r\n                <Card className={classes.cardsNewVisit}>\r\n\r\n                    <Row>\r\n                        <Col> <span className={classes.subtitleFirst}>Γενικά</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Ημερομηνία*</label>\r\n                            {!!loadVisit.date && <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={moment(loadVisit.date).format('YYYY-MM-DD')} required disabled={editAntikemeniki} />}\r\n                            {!loadVisit.date && <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={moment(new Date()).format('YYYY-MM-DD')} required disabled={editAntikemeniki} />}\r\n                            {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Γενική εικόνα</label>\r\n                            <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} disabled={editAntikemeniki} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Αιτία Προσέλευσης</label>\r\n                            <input ref={aitia_proseleusisInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} disabled={editAntikemeniki} />\r\n                        </Col>\r\n                    </Row>\r\n                    {(filesList.length > 0) && <Fragment>\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Συνημμένα Αρχεία</span></Col>\r\n                        </Row>\r\n                        <VisitsFiles filesList={filesList} />\r\n                    </Fragment>}\r\n                    <Row>\r\n                        <Col> <span className={classes.subtitle}>Βιομετρικά</span></Col>\r\n                    </Row>\r\n                    <Row className={classes.multiInputs}>\r\n                        <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} disabled={editAntikemeniki} /></Col>\r\n                        <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} disabled={editAntikemeniki} /></Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                        <Col lg='3'><label >Βάρος(kg)*</label> <input ref={weightInputRef} minLength={2} maxLength={3} name='weight' disabled={editAntikemeniki} defaultValue={loadVisit.weight} onChange={changeWeightHandler} required /></Col>\r\n                        <Col lg='3'><label >Ύψος(mt)*</label> <input ref={heightInputRef} minLength={4} maxLength={4} name='height' disabled={editAntikemeniki} defaultValue={loadVisit.height} onChange={changeHeightHandler} required /></Col>\r\n                        <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col> <span className={classes.subtitle}>Γεννητικά Όργανα</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                            <select ref={tektInputRef} name='tekt' disabled={editAntikemeniki}>\r\n                                <option value={0} selected disabled hidden>Select an Option</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt' disabled={editAntikemeniki}>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Col>\r\n                            <label>Τελευταία Έμμηνος Ρύση</label>\r\n                            <input ref={teleutaia_emminos_risiInputRef} defaultValue={(!!loadVisit.teleutaia_emminos_risi) ? moment(loadVisit.teleutaia_emminos_risi).format('YYYY-MM-DD') : null} className={classes.date} type='date' disabled={editAntikemeniki} />\r\n                        </Col>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'male') && <Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                    </Row>}\r\n                    <Row>\r\n                        {!editAntikemeniki && <SaveButton />}\r\n                        {editAntikemeniki && <EditFormButton onClick={() => { setEditAntikemeniki(false) }} />}\r\n                    </Row>\r\n                </Card>\r\n            </form>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Antikeimeniki;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js",["666","667","668","669"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from '../../../UI/Card'\r\nimport classes from './Diagnosis.module.css'\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport DiagnosisList from \"./DiagnosisList\";\r\nimport ConditionsHeader from '../../History/Atomiko/ConditionsHeader'\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport ErrorModal from \"../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\n\r\n\r\n\r\nconst Diagnosis = (props) => {\r\n    const [addDiagnosis, setAddDiagnosis] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchDiagnosis = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/diagnosis`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                props.dispatch({ type: 'loadDiagnosisList', payload: { loadedDiagnosisList: responseData } })\r\n                props.dispatch({ type: 'oldDiagnosis', payload: { oldDiagnosis: true } })\r\n\r\n\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n        if (!!patientContext.visitId && patientContext.visitId !== 'new') {\r\n            fetchDiagnosis();\r\n        }\r\n\r\n    }, [patientContext.visitId, sendRequest]);\r\n\r\n\r\n    const openAddForm = (event) => {\r\n        setAddDiagnosis(true);\r\n        props.dispatch({ type: 'touchDiagnosis', payload: { touchDiagnosisForm: true } })\r\n\r\n    }\r\n\r\n    const addDiagnosisHandler = async (newDiagnosis) => {\r\n        console.log('add')\r\n        try {\r\n            props.dispatch({ type: 'addDiagnosisList', payload: { diagnosis: newDiagnosis } })\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/diagnosis`, 'POST',\r\n                JSON.stringify({\r\n                    _id: newDiagnosis._id,\r\n                    name: newDiagnosis.name,\r\n                    status: newDiagnosis.status,\r\n                    dateOfDiagnosis: newDiagnosis.dateOfDiagnosis,\r\n                    dateOfHealing: newDiagnosis.dateOfHealing\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n    const removeDiagnosisHandler = async (diagnosisIdToDelete) => {\r\n        let diagnosisList = props.state.diagnosisList.filter(diagnosis => {\r\n            return diagnosis._id !== diagnosisIdToDelete\r\n        })\r\n\r\n        try {\r\n            props.dispatch({ type: 'removeDiagnosisList', payload: { diagnosisList: diagnosisList } })\r\n\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/diagnosis/${diagnosisIdToDelete}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n        } catch (err) { }\r\n\r\n\r\n    }\r\n    const editDiagnosisHanlder = async (addedDiagnosis, diagnosisIdtoUpdate) => {\r\n        let tempList = props.state.diagnosisList;\r\n        tempList = tempList.map(diagnosis => {\r\n            if (diagnosis._id === diagnosisIdtoUpdate) {\r\n                return diagnosis = addedDiagnosis\r\n            } else { return diagnosis = diagnosis }\r\n        })\r\n        try {\r\n            props.dispatch({ type: 'editDiagnosisList', payload: { diagnosisList: tempList } })\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/diagnosis/${diagnosisIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    status: addedDiagnosis.status,\r\n                    dateOfDiagnosis: addedDiagnosis.dateOfDiagnosis,\r\n                    dateOfHealing: addedDiagnosis.dateOfHealing\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n        } catch (err) { }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container >\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.conditionsCard}>\r\n                {isLoading && <LoadingSpinner />}\r\n                <ConditionsHeader />\r\n\r\n                {addDiagnosis && <DiagnosisForm setAddDiagnosis={setAddDiagnosis} addDiagnosisHandler={addDiagnosisHandler} />}\r\n                <DiagnosisList editDiagnosisHanlder={editDiagnosisHanlder} removeDiagnosisHandler={removeDiagnosisHandler} loadedDiagnosisList={props.loadedDiagnosisList} touchForm={props.state.touchDiagnosisForm} oldDiagnosis={props.state.oldDiagnosis} dispatch={props.dispatch} addDiagnosis={addDiagnosis} diagnosisList={props.diagnosisList} />\r\n\r\n                <Row>\r\n                    <Col>\r\n                        {!addDiagnosis && <button className={classes.addCondition} onClick={openAddForm}>Προσθήκη Διάγνωσης</button>}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Diagnosis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js",["670","671","672"],"import { useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisList.module.css'\r\nimport DiagnosisListItem from \"./DiagnosisListItem\";\r\n\r\nconst DiagnosisList = (props) => {\r\n    const visitId = useParams().visitId\r\n\r\n    const loadHandler = async (event) => {\r\n\r\n        props.dispatch({ type: 'oldDiagnosis', payload: { oldDiagnosis: true } })\r\n    }\r\n\r\n    return (\r\n        <Container fluid className={classes.diagnosisList}>\r\n            <Row>\r\n                {(props.diagnosisList.length !== 0) && props.diagnosisList.map((diagnosis) => {\r\n\r\n                    return <DiagnosisListItem\r\n                        condition={diagnosis.conditionName}\r\n                        status={diagnosis.status}\r\n                        dateOfDiagnosis={(!!diagnosis.dateOfDiagnosis) ? moment(diagnosis.dateOfDiagnosis).format('DD-MM-YYYY') : ''}\r\n                        dateOfHealing={(!!diagnosis.dateOfHealing) ? moment(diagnosis.dateOfHealing).format('DD-MM-YYYY') : ''}\r\n                        date_of_diagnosis={diagnosis.dateOfDiagnosis}\r\n                        date_of_healing={diagnosis.dateOfHealing}\r\n                        key={diagnosis._id}\r\n                        id={diagnosis._id}\r\n                        removeDiagnosisHandler={props.removeDiagnosisHandler}\r\n                        editDiagnosisHanlder={props.editDiagnosisHanlder}\r\n                    />\r\n                })}\r\n                {/* {(props.loadedDiagnosisList.length !== 0) && (!props.addDiagnosis)&& (!props.oldDiagnosis)&&(props.diagnosisList.length === 0) && (visitId === 'new') && <Row>\r\n                    <Col className={`text-center ${classes.loadRow}`}>\r\n                        Για να φορτώσετε τις  διαγνώσεις της τελευταίας επίσκεψης πατήστε το κουμπί <button type='button' onClick={loadHandler}>Φόρτωση</button>\r\n                    </Col>\r\n                </Row>} */}\r\n                {(props.diagnosisList.length === 0) && (!props.addDiagnosis) && <Row>\r\n                    <Col className='text-center'>Η λίστα είναι άδεια,προσθέστε μια διάγνωση.</Col>\r\n                </Row>}\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DiagnosisList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js",["673"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './DiagnosisListItem.module.css'\r\nimport DeleteButton from \"../../../UI/DeleteButton\";\r\nimport EditButton from \"../../../UI/EditButton\";\r\nimport { Fragment, useState } from \"react\";\r\nimport DiagnosisEditForm from \"./DiagnosisEditForm\";\r\nimport moment from 'moment'\r\n\r\nconst DiagnosisListItem = (props) => {\r\n    const [editForm, setEditForm] = useState(false)\r\n\r\n    const deleteHanlder = () => {\r\n        props.removeDiagnosisHandler(props.id);\r\n    }\r\n    const editHanlder = () => {\r\n        setEditForm(true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!editForm && <Row className={classes.conditionsListItem}>\r\n                <Col className=\"text-center\" sm={4}><span>{props.condition}</span></Col>\r\n                <Col className=\"text-center\" sm={2}><span>{props.status}</span></Col>\r\n                {/* <Col className=\"text-center\" sm={2}><span>{props.severity}</span></Col> */}\r\n                <Col className=\"text-center\"><span>{props.dateOfDiagnosis}</span></Col>\r\n                <Col className=\"text-center\" ><span>{props.dateOfHealing}</span></Col>\r\n                <Col sm={1} className='text-end'>\r\n                    <EditButton onClick={editHanlder}/>\r\n                </Col>\r\n                <Col sm={1} className='text-start'>\r\n                    <DeleteButton onClick={deleteHanlder} />\r\n                </Col>\r\n            </Row>}\r\n            {editForm&&<DiagnosisEditForm\r\n            id={props.id}\r\n            condition={props.condition}\r\n            status={props.status}\r\n            dateOfDiagnosis={props.date_of_diagnosis}\r\n            dateOfHealing={props.date_of_healing}\r\n            setEditForm={setEditForm}\r\n            editDiagnosisHanlder={props.editDiagnosisHanlder}\r\n            />}\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default DiagnosisListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js",["674"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisForm.module.css';\r\nimport ConditionsFinder from \"../../History/Atomiko/ConditionsFinder\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst DiagnosisForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest } = useHttpClient()\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const stateInputRef = useRef();\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault()\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        let diagnosis = {\r\n            name: selectedCondition.code + ': ' + selectedCondition.condition,\r\n            conditionName: selectedCondition.code + ': ' + selectedCondition.condition,\r\n            status: stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: responseData\r\n        }\r\n        console.log('add')\r\n        props.addDiagnosisHandler(diagnosis);\r\n        props.setAddDiagnosis(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.conditionsForm}>\r\n                <Col sm={4}>\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} />\r\n                </Col>\r\n                <Col sm={2} className='text-center'>\r\n                    <select ref={stateInputRef}>\r\n                        <option value='Ύφεση'>Ύφεση</option>\r\n                        <option value='Υποτροπή'>Υποτροπή</option>\r\n                        <option value='Χρόνια'>Χρόνια</option>\r\n                    </select>\r\n                </Col>\r\n\r\n                <Col sm={2}><input type='date' ref={dateOfDiagnosisInputRef} defaultValue={moment(new Date()).format('YYYY-MM-DD')} /></Col>\r\n                <Col sm={2}><input type='date' ref={dateOfHealingInputRef} /></Col>\r\n                <Col className='text-start' sm={2}>\r\n                    {!!selectedCondition && <SmallSaveButton />}\r\n                    <SmallDeleteButton onClick={() => { props.setAddDiagnosis(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default DiagnosisForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js",["675","676"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js",["677","678","679","680"],"import { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TherapeiaListItem from \"./TherapeiaListItem\";\r\nimport classes from './TherapeiaList.module.css'\r\n\r\nconst TherapeiaList = (props) => {\r\n    const visitId = useParams().visitId\r\n    const patientId = useParams().patientId;\r\n\r\n    const loadHandler = async (event) => {\r\n\r\n        props.dispatch({ type: 'oldTherapeia', payload: { oldTherapeia: true } })\r\n    }\r\n    // console.log(props.oldTherapeia,visitId !== 'new',props.touchForm,props.loadedTherapeiaList.length===0,props.therapeiaList.length !== 0)\r\n    // console.log((((props.oldTherapeia) || (visitId !== 'new')) || (((props.touchForm)||(props.loadedTherapeiaList.length === 0))&&(props.therapeiaList.length !== 0))))\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {(props.therapeiaList.length !== 0) && props.therapeiaList.map((therapeia) => {\r\n                return <TherapeiaListItem\r\n                    condition={therapeia.condition}\r\n                    drugName={therapeia.name}\r\n                    ATC_name={therapeia.ATC_name}\r\n                    quantity={therapeia.posotita}\r\n                    frequency={therapeia.syxnotita}\r\n                    duration={therapeia.duration}\r\n                    key={therapeia._id}\r\n                    id={therapeia._id}\r\n                    removeTherapeiaHandler={props.removeTherapeiaHandler}\r\n                />\r\n            })}\r\n\r\n            {/* {(props.loadedTherapeiaList.length !== 0) && (!props.addTherapeia)&& (!props.oldTherapeia)&&(props.therapeiaList.length === 0) && (visitId === 'new') && <Row>\r\n                <Col className={`text-center ${classes.loadRow}`}>\r\n                    Για να φορτώσετε τις  θεραπείες της τελευταίας επίσκεψης πατήστε το κουμπί <button type='button' onClick={loadHandler}>Φόρτωση</button>\r\n                </Col>\r\n            </Row>} */}\r\n            {(props.therapeiaList.length === 0) && (!props.addTherapeia) && <Row>\r\n                <Col className='text-center'>Η λίστα είναι άδεια,προσθέστε μια θεραπεία.</Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TherapeiaList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\PatientProfile.js",["681"],"import { Container } from \"react-bootstrap\";\r\nimport ConditionsInfo from \"./ConditionsInfo/ConditionsInfo\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport VisitsList from \"./VisitsList/VisitsList\";\r\nimport classes from './PatientProfile.module.css';\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst PatientProfile = () => {\r\n    const patientContext = useContext(PatientContext);\r\n    const patientId = useParams().patientId;\r\n\r\n    useEffect(() => {\r\n        patientContext.createPatientId(patientId)\r\n        // patientContext.setVisitNull()\r\n        patientContext.createVisitId('new')\r\n    }, [patientId]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <Container fluid className={classes.patientProfile}>\r\n            <BasicInfo />\r\n            <ConditionsInfo />\r\n            <VisitsList />\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default PatientProfile;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\BasicInfo.js",["682","683"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './PatientProfile.module.css';\r\nimport profile from './profile.webp';\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport moment from \"moment\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst BasicInfo = (props) => {\r\n    const [loadedBasics, setLoadedBasics] = useState({ name: '', sirname: '', amka: '', diagnosis: '', tel: '', dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '', fathersName: '', imageName: null })\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n    const params = useParams()\r\n\r\n\r\n    const fetchPatients = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadedBasics({ name: responseData.name, sirname: responseData.sirname, amka: responseData.amka, dateOfBirth: responseData.dateOfBirth, diagnosis: responseData.diagnosis, tel: responseData.tel, placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, fathersName: responseData.fathersName, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode, email: responseData.email });\r\n            patientContext.changeGender(responseData.gender)\r\n            if (!!responseData.files) {\r\n                setLoadedBasics((prevState) => {\r\n                    return { ...prevState, imageName: responseData.files.split('\\\\')[2] }\r\n                })\r\n            }\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (patientContext.patientId !== null) {\r\n            fetchPatients()\r\n        }\r\n    }, [sendRequest, patientContext.patientId]);\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && < ErrorModal onClear={clearError} error={error} />}\r\n            <Row className={classes.basicInfo}>\r\n                <Col md={2} className='text-center'>\r\n                    <div>\r\n                        <label>Όνομα:</label>\r\n                        <span>{loadedBasics.name}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Τόπος Γέννησης:</label>\r\n                        <span>{loadedBasics.placeOfBirth}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Επάγγελμα:</label>\r\n                        <span>{loadedBasics.job}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Τηλέφωνο:</label>\r\n                        <span>{loadedBasics.tel}</span>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md={3} className='text-center'>\r\n                    <div>\r\n                        <label>Πατρώνυμο:</label>\r\n                        <span>{loadedBasics.fathersName}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Ημ/ Γεννήσης:</label>\r\n                        <span>{(!!loadedBasics.dateOfBirth) ? moment(loadedBasics.dateOfBirth).format('DD-MM-YYYY') : ''}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Οικογενειακή Κατάσταση:</label>\r\n                        {(loadedBasics.familyStatus === 'married') && <span>Παντρεμμένος/η</span>}\r\n                        {(loadedBasics.familyStatus === 'notmarried') && <span>Ανύπνατρος/η</span>}\r\n                        {(loadedBasics.familyStatus === 'divorced') && <span>Διαζευγμένος/η</span>}\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label>E-mail:</label>\r\n                        <span>{loadedBasics.email}</span>\r\n                    </div>\r\n                </Col>\r\n                <Col md={2} className='text-center'>\r\n                    <div>\r\n                        <label>Επώνυμο:</label>\r\n                        <span>{loadedBasics.sirname}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Φύλο:</label>\r\n                        <span>{(loadedBasics.gender === 'male') ? 'Άρρεν' : 'Θήλυ'}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Περιοχή:</label>\r\n                        <span>{loadedBasics.area}</span>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md={2} className='text-center'>\r\n                    <div>\r\n                        <label>ΑΜΚΑ:</label>\r\n                        <span>{loadedBasics.amka}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Διεύθυνση:</label>\r\n                        <span>{loadedBasics.address}</span>\r\n                    </div>\r\n                    <div>\r\n                        <label>Τ.Κ:</label>\r\n                        <span>{loadedBasics.postalCode}</span>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div><button className={classes.editBasicsButton}><Link to={`/patients/${params.patientId}/basics`}> Επεξεργασία</Link></button></div>\r\n                </Col>\r\n\r\n\r\n                <Col md={3} className='text-end' xs={{ order: 'first' }} sm={{ order: 'last' }}>\r\n                    <span className={classes.profileImage}>\r\n                        <img src={(!!loadedBasics.imageName) ? `${process.env.REACT_APP_BACKEND_URL}/uploads/images/${loadedBasics.imageName}` : profile} />\r\n                    </span>\r\n\r\n                </Col>\r\n            </Row >\r\n            \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default BasicInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsList.js",["684","685"],"import classes from './VisitsList.module.css'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Card from '../../UI/Card';\r\nimport VisitsListHeader from './VisitsListHeader';\r\nimport VisitsListItem from './VisitsListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport moment from 'moment';\r\nimport { PatientContext } from '../../../context/patient-context';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner'\r\n\r\n\r\nconst VisitsList = (props) => {\r\n    const [visitList, setVisitList] = useState([])\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchVisits = async () => {\r\n            try{\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visits`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setVisitList(responseData)\r\n            }catch(err){}\r\n        }\r\n        if (!!patientContext.patientId) {\r\n            fetchVisits();\r\n        }\r\n    }, [sendRequest, patientContext.patientId])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Row>\r\n                <Col className={`text-center ${classes.visitsTitle}`}>\r\n                <h4>Επισκέψεις</h4>\r\n                </Col>\r\n            </Row>\r\n            <Card className={classes.visitsListCard}>\r\n                {isLoading && <LoadingSpinner />}\r\n                <VisitsListHeader />\r\n                {visitList.map(visit => {\r\n                    return <VisitsListItem\r\n                        visitDate={moment(visit.date).format('DD-MM-YYYY')}\r\n                        geniki_eikona={visit.geniki_eikona}\r\n                        aitia_proseleusis={visit.aitia_proseleusis}\r\n                        key={visit._id}\r\n                        id={visit._id}\r\n                    />\r\n                })}\r\n                {(visitList.length === 0) &&\r\n                    <Row>\r\n                        <Col className='text-center'>\r\n                            Η λίστα των επισκέψεων είναι άδεια.\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </Card>\r\n            {/* <Row>\r\n                <Col className='text-end'>\r\n                    <Link to={`/patients/${patientContext.patientId}/visits/new`} style={{ textDecoration: 'none', color: 'black' }}> <button className={classes.visitButton}>Δημιουργία Επίσκεψης</button></Link>\r\n                </Col>\r\n            </Row> */}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default VisitsList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsInfo.js",["686","687","688","689"],"import classes from './ConditionsInfo.module.css'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport ConditionsNavBar from './ConditionsNavBar';\r\nimport Card from '../../UI/Card';\r\nimport { Fragment, useState } from 'react';\r\nimport Atomiko from './Atomiko/Atomiko';\r\nimport Farmaka from './Farmaka/FarmakaInfo';\r\nimport SurgeriesInfo from './Surgeries/SurgeriesInfo';\r\nimport AllergiesInfo from './AllergiesInfo/AllergiesInfo';\r\nimport KlironomikoInfo from './KlironomikoInfo/KlironomikoInfo'\r\nimport FilesInfo from './Files/FilesInfo';\r\nimport GynaikologikoInfo from './GynaikologikoInfo/GynaikologikoInfo';\r\n\r\n\r\n\r\nconst ConditionsInfo = (props) => {\r\nconst [tabIsOpen,setTabIsOpen]=useState('atomiko')\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ConditionsNavBar setTabIsOpen={setTabIsOpen} tabIsOpen={tabIsOpen}/>\r\n        {/* <Card className={classes.conditionsInfoCard}> */}\r\n            {tabIsOpen==='atomiko'&&<Atomiko/>}\r\n            {tabIsOpen==='allergies'&&<AllergiesInfo/>}\r\n            {tabIsOpen==='klironomiko'&&<KlironomikoInfo/>}\r\n            {tabIsOpen==='surgeries'&&<SurgeriesInfo/>}\r\n            {tabIsOpen==='farmaka'&&<Farmaka/>}\r\n            {tabIsOpen==='files'&&<FilesInfo/>}\r\n            {tabIsOpen==='gynaikologiko'&&<GynaikologikoInfo/>}\r\n        {/* </Card> */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ConditionsInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsNavBar.js",["690"],"import { useContext } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport classes from './ConditionsNavBar.module.css'\r\nimport {PatientContext} from '../../../context/patient-context'\r\n\r\nconst ConditionsNavBar = (props) => {\r\n    const patientContext = useContext(PatientContext)\r\n\r\n    return (\r\n        <Row className={classes.navBar}>\r\n            <button className={(props.tabIsOpen === 'atomiko') ? classes.activated : null} onClick={() => { props.setTabIsOpen('atomiko') }}>Ατομικό</button>\r\n            <button className={(props.tabIsOpen === 'allergies') ? classes.activated : null} onClick={() => { props.setTabIsOpen('allergies') }}>Αλλεργίες</button>\r\n            <button className={(props.tabIsOpen === 'klironomiko') ? classes.activated : null} onClick={() => { props.setTabIsOpen('klironomiko') }}>Κληρονομικό</button>\r\n            <button className={(props.tabIsOpen === 'surgeries') ? classes.activated : null} onClick={() => { props.setTabIsOpen('surgeries') }}> Χειρουργεία</button>\r\n            <button className={(props.tabIsOpen === 'farmaka') ? classes.activated : null} onClick={() => { props.setTabIsOpen('farmaka') }}>Φάρμακα</button>\r\n            <button className={(props.tabIsOpen === 'files') ? classes.activated : null} onClick={() => { props.setTabIsOpen('files') }}>Αρχεία</button>\r\n            {(patientContext.gender === 'female') && <button className={(props.tabIsOpen === 'gynaikologiko') ? classes.activated : null} onClick={() => { props.setTabIsOpen('gynaikologiko') }}> Γυναικολογικό</button>}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ConditionsNavBar;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Atomiko\\Atomiko.js",["691","692","693"],"import classes from './Atomiko.module.css'\r\nimport { Container, } from 'react-bootstrap'\r\nimport ErrorModal from '../../../UI/ErrorModal';\r\nimport Conditions from '../../../Patient-Details-Pages/History/Atomiko/Conditions';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../../../context/auth-context';\r\nimport { useHttpClient } from '../../../../hooks/http-hook';\r\nimport { PatientContext } from '../../../../context/patient-context';\r\n\r\n\r\nconst Atomiko = (props) => {\r\n    const [conditionsList, setConditionsList] = useState([]);\r\n    const { sendRequest, isLoading, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setConditionsList(responseData.conditionsList)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchHistory();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n   \r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Conditions profil conditionsList={conditionsList}/>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Atomiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Surgeries\\SurgeriesInfo.js",["694","695","696"],"// import classes from './Atomiko.module.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Surgeries from '../../../Patient-Details-Pages/History/Surgeries/Surgeries'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst SurgeriesInfo = (props) => {\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Surgeries surgeriesList={surgeriesList} setSurgeriesList={setSurgeriesList} />\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default SurgeriesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Farmaka\\FarmakaInfo.js",["697","698","699","700"],"// import classes from './Atomiko.module.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Farmaka from '../../../Patient-Details-Pages/Farmaka/Farmaka'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst FarmakaInfo = (props) => {\r\n    // const [farmakaList, setFarmakaList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Farmaka  info/>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default FarmakaInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Files\\FilesInfo.js",["701","702","703","704"],"import { Container, Row, Col } from 'react-bootstrap'\r\nimport Files from '../../../Patient-Details-Pages/NewFiles/Files'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst FilesInfo = (props) => {\r\n    // const [farmakaList, setFarmakaList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Files info/>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default FilesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\AllergiesLoaded.js",["705","706"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsFinder from \"../ConditionsFinder\";\r\nimport classes from './AllergiesLoaded.module.css'\r\n\r\nconst AllergiesLoaded = (props) => {\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' });\r\n\r\n    console.log(props.allergiesList)\r\n\r\n    let removeHandler = (nameToDelete) => {\r\n        console.log('out')\r\n    };\r\n    useEffect(() => {\r\n        removeHandler = (nameToDelete) => {\r\n            props.removeFromAllergyList(nameToDelete)\r\n            console.log('in')\r\n        }\r\n\r\n    }, [props.allergiesList, props.removeFromAllergyList])\r\n    useEffect(() => {\r\n        if (selectedCondition.code !== '') {\r\n            props.addToAllergyList(selectedCondition.code + ': ' + selectedCondition.condition)\r\n            setAddAllergy(false)\r\n        }\r\n    }, [selectedCondition])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {props.allergiesList.map((allergy) => {\r\n                return (\r\n                    <Row className={classes.loadedAllergy} key={allergy._id}>\r\n                        <Col sm={12} md={10}>\r\n                            <span>\r\n                                {allergy.name}\r\n                            </span>\r\n                        </Col>\r\n                        <Col sm={2} className='text-start'>\r\n                            <button type='button' onClick={() => { removeHandler(allergy._id) }}>Διαγραφή</button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n            {addAllergy && <Row className={classes.addAllergy}>\r\n                <Col  sm={12} md={10}>\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} setAddAllergy={setAddAllergy} />\r\n                </Col>\r\n                <Col xs={2}>\r\n                    <button type='button' onClick={() => { setAddAllergy(false) }}>Ακύρωση</button>\r\n                </Col>\r\n            </Row>}\r\n            {!addAllergy && <Row>\r\n                <Col xs={2} className={classes.addButton} >\r\n                    <button type='button' onClick={() => { setAddAllergy(true) }}>Προσθήκη</button>\r\n                </Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default AllergiesLoaded;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoLoaded.js",["707","708"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsFinder from \"../Atomiko/ConditionsFinder\";\r\n\r\nimport classes from './KlironomikoLoaded.module.css'\r\n\r\nconst KlirnomikoLoaded = (props) => {\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' });\r\n    \r\n    \r\n    \r\n    let removeHandler=(nameToDelete)=>{\r\n        console.log('out')\r\n    };\r\n    useEffect(()=>{\r\n        removeHandler=(nameToDelete)=>{\r\n            props.removeFromCleronomicalList(nameToDelete)\r\n            console.log('in')\r\n        }\r\n    \r\n    },[props.cleronomicalList,props.removeFromCleronomicalList])\r\n    useEffect(()=>{\r\n        if (selectedCondition.code!==''){\r\n            props.addToCleronomicalList(selectedCondition.code+': '+selectedCondition.condition)\r\n            setAddAllergy(false)\r\n        }\r\n    },[selectedCondition])\r\n     \r\n\r\n    return (\r\n        <Fragment>\r\n            {props.cleronomicalList.map((allergy) => {\r\n                return (\r\n                    <Row className={classes.loadedAllergy} key={allergy._id}>\r\n                        <Col sm={12} md={10}>\r\n                            <span>\r\n                                {allergy.name}\r\n                            </span>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            <button type='button' onClick={()=>{removeHandler(allergy._id)}}>Διαγραφή</button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n             {addAllergy&&<Row className={classes.addAllergy}>\r\n                <Col  sm={12} md={10} >\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} setAddAllergy={setAddAllergy}/>\r\n                </Col>\r\n                <Col sm={2}>\r\n                    <button>Ακύρωση</button>\r\n                </Col>\r\n            </Row>}\r\n            {!addAllergy&&<Row>\r\n                <Col xs={2} className={classes.addButton} >\r\n                    <button type='button' onClick={()=>{setAddAllergy(true)}}>Προσθήκη</button>\r\n                </Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n   \r\n}\r\n\r\nexport default KlirnomikoLoaded;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\AllergiesInfo\\AllergiesInfo.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\KlironomikoInfo\\KlironomikoInfo.js",["709","710","711","712","713","714","715","716","717"],"import { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport Klironomiko from '../../../Patient-Details-Pages/History/Klironomiko/Klironomiko';\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport classes from './Klironomiko.module.css'\r\n\r\n\r\n\r\nconst AllergiesInfo = (props) => {\r\n    // const [cleronomicalList, setCleronomicalList] = useState([])\r\n    // const auth = useContext(AuthContext);\r\n    // const patientContext = useContext(PatientContext);\r\n    // const { isLoading, error, clearError, sendRequest } = useHttpClient()\r\n    \r\n    return (\r\n        <Container>\r\n                <Klironomiko  profil/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllergiesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListItem.js",["718","719","720","721"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './VisitsListItem.module.css';\r\n// import SmallDeleteButton from '../../UI/SmallDeleteButton'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst VisitsListItem = (props) => {\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visits/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        // props.removeFarmakoHandler(props.id)\r\n    }\r\n\r\n    return (\r\n        <Row className={classes.visitsListItem}>\r\n            <Col className=\"text-center\" sm={3} md={3}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.visitDate}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={4}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.geniki_eikona}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={3}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.aitia_proseleusis}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={2}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}></Link></Col>\r\n            {/* <Col sm={2} className=\"text-center\">\r\n                <SmallDeleteButton onClick={clickHandler} />\r\n            </Col> */}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default VisitsListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\Ozoi.js",["722","723","724","725"],"import { useContext, useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../../../UI/Card\";\r\nimport classes from './Ozoi.module.css';\r\nimport OzoiHeader from \"./OzoiHeader\";\r\nimport OzosForm from \"./OzosForm\";\r\nimport OzoiList from \"./OzoiList\";\r\nimport { AuthContext } from \"../../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../../hooks/http-hook\";\r\nimport ErrorModal from \"../../../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../../../UI/LoadingSpinner\";\r\n\r\n\r\nconst Ozoi = (props) => {\r\n    const [ozosList, setOzosList] = useState([]);\r\n    const [addOzos, setAddOzos] = useState(false);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchOzoi = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/ozos`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                \r\n                setOzosList((prevState) => {\r\n                    return prevState.concat(responseData)\r\n                });\r\n\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n\r\n        const fetchPreviousOzoi = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/previousOzos`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n               \r\n                setOzosList(responseData);\r\n\r\n            } catch (err) { console.log(err) }\r\n\r\n        };\r\n\r\n        if (!!patientContext.visitId && patientContext.visitId !== 'new') {\r\n            fetchOzoi();\r\n        }\r\n        // if (patientContext.visitId === 'new') {\r\n        //     fetchPreviousOzoi();\r\n        // }\r\n\r\n    }, [patientContext.visitId, sendRequest]);\r\n\r\n    const addOzosHandler = async (ozos) => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        ozos._id = responseData;\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/ozos`, 'POST',\r\n                JSON.stringify({\r\n                    name: ozos.name,\r\n                    length: ozos.depth,\r\n                    height: ozos.depth,\r\n                    depth: ozos.depth,\r\n                    dateOfFinding: ozos.dateOfFinding,\r\n                    _id: responseData\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setOzosList((prevState) => {\r\n                return [...prevState, ozos];\r\n            })\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n\r\n    const removeOzosHandler = async (ozosIdToDelete) => {\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/visit/${patientContext.visitId}/ozos/${ozosIdToDelete}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n            setOzosList((prevState) => {\r\n                return prevState.filter(ozos => {\r\n                    return ozos._id !== ozosIdToDelete\r\n                })\r\n            })\r\n        } catch (err) { }\r\n\r\n\r\n    }\r\n\r\n    const editOzosHanlder = async (addedOzos, ozosIdtoUpdate) => {\r\n        setOzosList(prevState => {\r\n            return prevState.map(ozos => {\r\n                if (ozos._id === ozosIdtoUpdate) {\r\n                    return ozos = addedOzos\r\n                } else { return ozos = ozos }\r\n            })\r\n        })\r\n        try {\r\n            const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/631889e05aa8e7970c0e6155/visit/${patientContext.visitId}/ozos/${ozosIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    length: addedOzos.length,\r\n                    height: addedOzos.height,\r\n                    depth: addedOzos.depth,\r\n                    dateOfFinding: addedOzos.dateOfFinding\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {(!!error) && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            <Row>\r\n                <Col className=\"text-center\"> <span className={classes.subtitle}>Υπερηχογράφημα Θυρεοειδούς</span></Col>\r\n            </Row>\r\n            <Card className={classes.ozoiCard}>\r\n                <OzoiHeader />\r\n                {addOzos && <OzosForm addOzosHandler={addOzosHandler} setAddOzos={setAddOzos} />}\r\n                <OzoiList addOzos={addOzos} ozosList={ozosList} removeOzosHandler={removeOzosHandler} editOzosHanlder={editOzosHanlder} />\r\n\r\n                <Row>\r\n                    {!addOzos && <Col><button className={classes.addOzos} onClick={() => { setAddOzos(true) }}>Προσθήκη Όζου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Ozoi;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzosForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiListItem.js",["726","727","728","729","730"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './OzoiListItem.module.css';\r\nimport DeleteButton from '../../../../UI/DeleteButton'\r\nimport EditButton from '../../../../UI/EditButton'\r\nimport OzoiEditForm from './OzoiEditForm';\r\nimport { useHttpClient } from \"../../../../../hooks/http-hook\";\r\nimport { Fragment, useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../../context/patient-context\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst OzoiListItem = (props) => {\r\n    const [editForm, setEditForm] = useState(false)\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const deleteHandler =  (event) => {\r\n        props.removeOzosHandler(props.id)\r\n    }\r\n    const editHandler = () => {\r\n        setEditForm(true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!editForm && <Row className={classes.ozoiListItem}>\r\n                <Col sm={4} md={2} className='text-center'> {props.name}</Col>\r\n                <Col sm={4} md={2} className='text-center'> {props.length}</Col>\r\n                <Col sm={4} md={2} className='text-center'>{props.height}</Col>\r\n                <Col sm={4} md={2} className='text-center'>{props.depth}</Col>\r\n                <Col sm={4} md={2} className='text-center'>{(!!props.dateOfFinding) ? moment(props.dateOfFinding).format('DD-MM-YYYY') : ''}</Col>\r\n                <Col sm={1} className='text-end'>\r\n                    <EditButton onClick={editHandler} />\r\n                </Col>\r\n                <Col sm={1} className='text-start'>\r\n                    <DeleteButton onClick={deleteHandler} />\r\n                </Col>\r\n            </Row>}\r\n            {editForm && <OzoiEditForm\r\n                id={props.id}\r\n                name={props.name}\r\n                length={props.length}\r\n                identifier={props.identifier}\r\n                height={props.height}\r\n                depth={props.depth}\r\n                dateOfFinding={props.dateOfFinding}\r\n                setEditForm={setEditForm}\r\n                editOzosHanlder={props.editOzosHanlder}\r\n            />}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default OzoiListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ViewButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiEditForm.js",["731","732","733","734"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../../UI/SmallSaveButton\"\r\nimport SmallDeleteButton from \"../../../../UI/SmallDeleteButton\"\r\nimport classes from './OzosForm.module.css';\r\nimport { AuthContext } from \"../../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../../hooks/http-hook\";\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst OzoiEditForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { sendRequest } = useHttpClient()\r\n\r\n\r\n    const nameInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const depthInputRef = useRef();\r\n    const lengthInputRef = useRef();\r\n    const dateOfFindingInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        let ozos = {\r\n            name: nameInputRef.current.value,\r\n            height: heightInputRef.current.value,\r\n            length: lengthInputRef.current.value,\r\n            depth: depthInputRef.current.value,\r\n            dateOfFinding: dateOfFindingInputRef.current.value,\r\n            _id: props.id\r\n\r\n        }\r\n\r\n        props.editOzosHanlder(ozos, props.id)\r\n        props.setEditForm(false);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.ozosForm}>\r\n                <Col className='text-center' sm={4} md={2}><input disabled ref={nameInputRef} defaultValue={props.name} /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='number' min={1} max={100} ref={lengthInputRef} defaultValue={props.length} required /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='number' min={1} max={100} ref={heightInputRef} defaultValue={props.height} required /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='number' min={1} max={100} ref={depthInputRef} defaultValue={props.depth} required /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfFindingInputRef} defaultValue={moment(props.dateOfFinding).format('YYYY-MM-DD')} /></Col>\r\n                <Col className='text-end' sm={1}>\r\n                    <SmallSaveButton onClick={submitHandler} />\r\n                </Col>\r\n                <Col className='text-start' sm={1}>\r\n                    <SmallDeleteButton onClick={() => { props.setEditForm(false) }} />\r\n                </Col>\r\n\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default OzoiEditForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisEditForm.js",["735","736","737","738"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisForm.module.css';\r\n// import { AuthContext } from \"../../../../context/auth-context\";\r\n// import { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst DiagnosisEditForm = (props) => {\r\n\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const stateInputRef = useRef();\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        // const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n        event.preventDefault();\r\n        let diagnosis = {\r\n            conditionName: props.condition,\r\n            status: stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: props.id\r\n\r\n        }\r\n\r\n        props.editDiagnosisHanlder(diagnosis, props.id);\r\n        props.setEditForm(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.conditionsForm}>\r\n                <Col sm={4} className='text-center'>\r\n                    {props.condition}\r\n                </Col>\r\n                <Col sm={2} className='text-center'>\r\n                    <select ref={stateInputRef}>\r\n                        <option value='Ύφεση' selected={props.status === 'Ύφεση'}>Ύφεση</option>\r\n                        <option value='Υποτροπή' selected={props.status === 'Υποτροπή'}>Υποτροπή</option>\r\n                        <option value='Χρόνια' selected={props.status === 'Χρόνια'}>Χρόνια</option>\r\n                    </select>\r\n                </Col>\r\n\r\n                <Col sm={2} className='text-center'><input type='date' ref={dateOfDiagnosisInputRef} defaultValue={(!!props.dateOfDiagnosis) && moment(props.dateOfDiagnosis).format('YYYY-MM-DD')} /></Col>\r\n                <Col sm={2} className='text-center'><input type='date' ref={dateOfHealingInputRef} defaultValue={(!!props.dateOfHealing) && moment(props.dateOfHealing).format('YYYY-MM-DD')} /></Col>\r\n                <Col className='text-end' sm={1}>\r\n                    <SmallSaveButton />\r\n                </Col>\r\n                <Col sm={1} className='text_-start'>\r\n                    <SmallDeleteButton onClick={() => { props.setEditForm(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default DiagnosisEditForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionEditForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\GynaikologikoInfo\\GynaikologikoInfo.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Statistics.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Biometrics.js",["739"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport {\r\n    Chart,\r\n    LineSeries,\r\n    Title,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\nimport DefaultMessage from \"./DefaultMessage\";\r\nimport classes from './Biometrics.module.css';\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\nconst Biometrics = (props) => {\r\n    const [bmiData, setBmiData] = useState([]);\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const [showDefault, setShowDefault] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchBiometrics = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/statistics/biometrics`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                if (responseData.BMI_data.length > 0) {\r\n                    setBmiData(responseData.BMI_data)\r\n                    setShowDefault(false)\r\n                }\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchBiometrics();\r\n        }\r\n    }, [patientContext.patientId, sendRequest])\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!showDefault && <Row>\r\n\r\n                <Col >\r\n                    <Container className={classes.biometrics}>\r\n                            <Chart\r\n                                data={bmiData}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n                                <LineSeries\r\n                                    valueField=\"bmi\"\r\n                                    argumentField=\"date\"\r\n                                />\r\n                                <Title text=\"BMI\" />\r\n                                <Animation />\r\n                            </Chart>\r\n                    </Container>\r\n                </Col>\r\n            </Row>}\r\n            {showDefault && <DefaultMessage message='Δεν υπάρχουν επισκέψεις για την δημιουργία Βιομετρικών Στατιστικών' />}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Biometrics;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\OzoiStats.js",["740","741","742"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Plugin } from '@devexpress/dx-react-core';\r\nimport {\r\n    Chart,\r\n    LineSeries,\r\n    Title,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Legend,\r\n\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n// import { styled } from '@mui/material/styles';\r\nimport classes from './OzoiStats.module.css';\r\nimport DefaultMessage from \"./DefaultMessage\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\nconst OzoiStats = (props) => {\r\n    const [showDefault, setShowDefault] = useState(true)\r\n\r\n    const [ozoiData, setOzoiData] = useState([]);\r\n    const [namesList, setNamesList] = useState([])\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { sendRequest, error, clearError } = useHttpClient()\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchOzoiStats = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/patients/${patientContext.patientId}/statistics/ozoi`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                if (responseData.ozosData.length>0){\r\n                setOzoiData(responseData.ozosData)\r\n                setNamesList(responseData.namesList)\r\n                setShowDefault(false)\r\n            }\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchOzoiStats();\r\n        }\r\n    }, [patientContext.patientId, sendRequest])\r\n    console.log(ozoiData)\r\n\r\n    return (\r\n        <Fragment>\r\n            {!showDefault && <Row>\r\n                <Col>\r\n                    <Container className={classes.biometrics}>\r\n                            <Chart\r\n                                data={ozoiData}\r\n                                className={classes.chart}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n                                <Plugin name='oz'>\r\n                                    {namesList.length > 0 && ozoiData.length > 0 && namesList.map(ozos => {\r\n                                        console.log(`${ozos}volume`, `${ozos}date`)\r\n                                        return (<LineSeries\r\n                                            name={ozos}\r\n                                            valueField={`${ozos}volume`}\r\n                                            argumentField={`${ozos}date`}\r\n                                            key={ozos}\r\n                                        />)\r\n                                    })}\r\n                                </Plugin>\r\n                                <Legend position=\"bottom\" />\r\n                                <Title text=\"Όγκος Όζων\" />\r\n                                <Animation />\r\n                            </Chart>\r\n                    </Container>\r\n                </Col>\r\n            </Row>}\r\n            {showDefault && <DefaultMessage message='Δεν υπάρχουν καταγεγραμμένοι Όζοι για την δημιουργία Στατιστικών' />}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OzoiStats;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditFormButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeryEditForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaEditForm.js",["743","744"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FarmakaForm.module.css';\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst FarmakaEditForm = (props) => {\r\n    const [selectedFarmako, setSelectedFarmako] = useState({ name: '', ATC_name: '' });\r\n\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let farmako = {\r\n                dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n                dateOfEnd: dateOfVisitInputRef.current.value,\r\n            }\r\n            console.log(farmako);\r\n            props.editFarmakoHandler(farmako,props.id);\r\n            props.setEditFarmako(false);\r\n\r\n        } catch (err) { console.log(err) }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Row className={classes.farmakoForm}>\r\n                <Col sm={8} md={3} className='text-center'>\r\n                    {props.farmakoName}\r\n                </Col>\r\n                <Col sm={8} md={3} className='text-center'>\r\n                    {props.farmakoType}\r\n                </Col>\r\n\r\n                <Col className='text-center' sm={4} md={2}><input type='date' defaultValue={(!!props.dateOfStart) ? moment(props.dateOfStart).format('YYYY-MM-DD') : null} ref={dateOfDiagnosisInputRef} /></Col>\r\n                <Col className='text-center' sm={4} md={2}><input type='date' defaultValue={(!!props.dateOfEnd) ? moment(props.dateOfEnd).format('YYYY-MM-DD') : null} ref={dateOfVisitInputRef} /></Col>\r\n                <Col className='text-center' sm={2}>\r\n                    {!!selectedFarmako && <SmallSaveButton />}\r\n                    <SmallDeleteButton onClick={() => { props.setEditFarmako(false) }} />\r\n                </Col>\r\n            </Row>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FarmakaEditForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\DefaultMessage.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\VisitsFiles.js",["745"],"import { Container } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst VisitsFiles = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.filesList.map(file => {\r\n                return (\r\n                    <a href={`${process.env.REACT_APP_BACKEND_URL}/uploads/exams/${file.file.split('\\\\')[2]}`} target=\"_blank\" key={file._id} >\r\n                        {file.name}\r\n                    </a>)\r\n            })}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default VisitsFiles;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyEditForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteConditionsModal.js",["746"],"import classes from './DeleteModal.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Backdrop from './Backdrop';\r\nimport { Fragment, useState } from 'react';\r\n\r\nconst DeleteConditionsModal = (props) => {\r\n    const [activatedButton, setActivatedButton] = useState(false)\r\n    const [userValue, setUserValue] = useState('')\r\n    const [correctValue,setCorrectValue]=useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1)\r\n\r\n\r\n    // const correctValue = Math.floor(Math.random() * (9 - 1 + 1)) + 1;\r\n\r\n    const changeHandler = (event) => {\r\n        setUserValue(event.target.value);\r\n        if (Number(event.target.value) === correctValue) {\r\n            setActivatedButton(true)\r\n        } else {\r\n            setActivatedButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop onClick={props.onCancel} />\r\n            <Container className={classes.deleteModal}>\r\n\r\n                <Row>\r\n                    <header>\r\n                        <h3> {props.title}</h3>\r\n                    </header>\r\n                </Row>\r\n                <Row className={classes.descriptionRow}>\r\n                    <Col><span>{props.description + ' ' + correctValue}</span></Col>\r\n                </Row>\r\n                <Row className={classes.inputRow}>\r\n                    <Col className='text-center'>\r\n                        <input placeholder={`Γράψτε ${correctValue}`} minLength={11} maxLength={11} value={userValue} onChange={changeHandler} />\r\n                    </Col>\r\n                </Row>\r\n                <Row className={`${classes.buttonRow} justify-content-sm-end`}>\r\n                    <Col sm={3}><button className={classes.cancel} onClick={props.onCancel}>Ακύρωση</button></Col>\r\n                    <Col sm={3}><button disabled={!activatedButton} className={(!activatedButton) ? classes.disabled : classes.delete} onClick={props.onConfirm}>Διαγραφή</button></Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default DeleteConditionsModal;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaEditForm.js",["747","748"],{"ruleId":"749","replacedBy":"750"},{"ruleId":"751","replacedBy":"752"},{"ruleId":"753","severity":1,"message":"754","line":24,"column":10,"nodeType":"755","messageId":"756","endLine":24,"endColumn":23},{"ruleId":"757","severity":1,"message":"758","line":35,"column":28,"nodeType":"755","endLine":35,"endColumn":39},{"ruleId":"757","severity":1,"message":"758","line":44,"column":24,"nodeType":"755","endLine":44,"endColumn":35},{"ruleId":"757","severity":1,"message":"758","line":53,"column":25,"nodeType":"755","endLine":53,"endColumn":36},{"ruleId":"753","severity":1,"message":"759","line":58,"column":9,"nodeType":"755","messageId":"756","endLine":58,"endColumn":28},{"ruleId":"753","severity":1,"message":"760","line":61,"column":9,"nodeType":"755","messageId":"756","endLine":61,"endColumn":27},{"ruleId":"757","severity":1,"message":"758","line":61,"column":30,"nodeType":"755","endLine":61,"endColumn":41},{"ruleId":"757","severity":1,"message":"761","line":87,"column":6,"nodeType":"762","endLine":87,"endColumn":8,"suggestions":"763"},{"ruleId":"757","severity":1,"message":"764","line":67,"column":8,"nodeType":"762","endLine":67,"endColumn":28,"suggestions":"765"},{"ruleId":"753","severity":1,"message":"766","line":7,"column":12,"nodeType":"755","messageId":"756","endLine":7,"endColumn":16},{"ruleId":"753","severity":1,"message":"767","line":8,"column":12,"nodeType":"755","messageId":"756","endLine":8,"endColumn":19},{"ruleId":"753","severity":1,"message":"768","line":9,"column":12,"nodeType":"755","messageId":"756","endLine":9,"endColumn":21},{"ruleId":"753","severity":1,"message":"769","line":10,"column":12,"nodeType":"755","messageId":"756","endLine":10,"endColumn":15},{"ruleId":"753","severity":1,"message":"770","line":11,"column":12,"nodeType":"755","messageId":"756","endLine":11,"endColumn":16},{"ruleId":"753","severity":1,"message":"771","line":12,"column":11,"nodeType":"755","messageId":"756","endLine":12,"endColumn":18},{"ruleId":"753","severity":1,"message":"772","line":13,"column":14,"nodeType":"755","messageId":"756","endLine":13,"endColumn":31},{"ruleId":"753","severity":1,"message":"773","line":17,"column":14,"nodeType":"755","messageId":"756","endLine":17,"endColumn":34},{"ruleId":"753","severity":1,"message":"774","line":21,"column":14,"nodeType":"755","messageId":"756","endLine":21,"endColumn":36},{"ruleId":"753","severity":1,"message":"775","line":25,"column":14,"nodeType":"755","messageId":"756","endLine":25,"endColumn":30},{"ruleId":"753","severity":1,"message":"776","line":29,"column":14,"nodeType":"755","messageId":"756","endLine":29,"endColumn":31},{"ruleId":"753","severity":1,"message":"777","line":33,"column":14,"nodeType":"755","messageId":"756","endLine":33,"endColumn":26},{"ruleId":"749","replacedBy":"778"},{"ruleId":"751","replacedBy":"779"},{"ruleId":"780","severity":1,"message":"781","line":43,"column":44,"nodeType":"782","messageId":"783","endLine":43,"endColumn":91},{"ruleId":"757","severity":1,"message":"784","line":100,"column":8,"nodeType":"762","endLine":100,"endColumn":47,"suggestions":"785"},{"ruleId":"757","severity":1,"message":"786","line":48,"column":8,"nodeType":"762","endLine":48,"endColumn":21,"suggestions":"787"},{"ruleId":"753","severity":1,"message":"788","line":64,"column":15,"nodeType":"755","messageId":"756","endLine":64,"endColumn":23},{"ruleId":"753","severity":1,"message":"789","line":2,"column":46,"nodeType":"755","messageId":"756","endLine":2,"endColumn":54},{"ruleId":"753","severity":1,"message":"790","line":5,"column":8,"nodeType":"755","messageId":"756","endLine":5,"endColumn":12},{"ruleId":"749","replacedBy":"791"},{"ruleId":"751","replacedBy":"792"},{"ruleId":"753","severity":1,"message":"793","line":1,"column":21,"nodeType":"755","messageId":"756","endLine":1,"endColumn":24},{"ruleId":"753","severity":1,"message":"794","line":1,"column":26,"nodeType":"755","messageId":"756","endLine":1,"endColumn":29},{"ruleId":"753","severity":1,"message":"795","line":26,"column":12,"nodeType":"755","messageId":"756","endLine":26,"endColumn":29},{"ruleId":"753","severity":1,"message":"796","line":29,"column":11,"nodeType":"755","messageId":"756","endLine":29,"endColumn":19},{"ruleId":"797","severity":1,"message":"798","line":56,"column":52,"nodeType":"799","messageId":"800","endLine":56,"endColumn":54},{"ruleId":"757","severity":1,"message":"801","line":70,"column":8,"nodeType":"762","endLine":70,"endColumn":10,"suggestions":"802"},{"ruleId":"753","severity":1,"message":"803","line":76,"column":11,"nodeType":"755","messageId":"756","endLine":76,"endColumn":24},{"ruleId":"753","severity":1,"message":"804","line":107,"column":11,"nodeType":"755","messageId":"756","endLine":107,"endColumn":24},{"ruleId":"757","severity":1,"message":"805","line":48,"column":8,"nodeType":"762","endLine":48,"endColumn":61,"suggestions":"806"},{"ruleId":"807","severity":1,"message":"808","line":121,"column":47,"nodeType":"755","messageId":"809","endLine":121,"endColumn":56},{"ruleId":"753","severity":1,"message":"810","line":18,"column":12,"nodeType":"755","messageId":"756","endLine":18,"endColumn":29},{"ruleId":"757","severity":1,"message":"805","line":43,"column":8,"nodeType":"762","endLine":43,"endColumn":47,"suggestions":"811"},{"ruleId":"797","severity":1,"message":"812","line":74,"column":26,"nodeType":"799","messageId":"813","endLine":74,"endColumn":28},{"ruleId":"753","severity":1,"message":"814","line":173,"column":19,"nodeType":"755","messageId":"756","endLine":173,"endColumn":31},{"ruleId":"753","severity":1,"message":"810","line":18,"column":12,"nodeType":"755","messageId":"756","endLine":18,"endColumn":29},{"ruleId":"757","severity":1,"message":"805","line":43,"column":8,"nodeType":"762","endLine":43,"endColumn":47,"suggestions":"815"},{"ruleId":"797","severity":1,"message":"812","line":61,"column":26,"nodeType":"799","messageId":"813","endLine":61,"endColumn":28},{"ruleId":"753","severity":1,"message":"814","line":158,"column":19,"nodeType":"755","messageId":"756","endLine":158,"endColumn":31},{"ruleId":"753","severity":1,"message":"816","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":21},{"ruleId":"753","severity":1,"message":"817","line":1,"column":23,"nodeType":"755","messageId":"756","endLine":1,"endColumn":32},{"ruleId":"753","severity":1,"message":"818","line":2,"column":10,"nodeType":"755","messageId":"756","endLine":2,"endColumn":19},{"ruleId":"757","severity":1,"message":"805","line":32,"column":8,"nodeType":"762","endLine":32,"endColumn":47,"suggestions":"819"},{"ruleId":"753","severity":1,"message":"814","line":43,"column":19,"nodeType":"755","messageId":"756","endLine":43,"endColumn":31},{"ruleId":"753","severity":1,"message":"814","line":73,"column":19,"nodeType":"755","messageId":"756","endLine":73,"endColumn":31},{"ruleId":"807","severity":1,"message":"820","line":89,"column":41,"nodeType":"755","messageId":"809","endLine":89,"endColumn":48},{"ruleId":"753","severity":1,"message":"814","line":94,"column":19,"nodeType":"755","messageId":"756","endLine":94,"endColumn":31},{"ruleId":"753","severity":1,"message":"821","line":29,"column":11,"nodeType":"755","messageId":"756","endLine":29,"endColumn":22},{"ruleId":"753","severity":1,"message":"822","line":30,"column":11,"nodeType":"755","messageId":"756","endLine":30,"endColumn":22},{"ruleId":"757","severity":1,"message":"823","line":48,"column":8,"nodeType":"762","endLine":48,"endColumn":47,"suggestions":"824"},{"ruleId":"753","severity":1,"message":"825","line":20,"column":45,"nodeType":"755","messageId":"756","endLine":20,"endColumn":54},{"ruleId":"757","severity":1,"message":"805","line":33,"column":8,"nodeType":"762","endLine":33,"endColumn":47,"suggestions":"826"},{"ruleId":"753","severity":1,"message":"814","line":39,"column":19,"nodeType":"755","messageId":"756","endLine":39,"endColumn":31},{"ruleId":"753","severity":1,"message":"814","line":62,"column":19,"nodeType":"755","messageId":"756","endLine":62,"endColumn":31},{"ruleId":"807","severity":1,"message":"827","line":79,"column":42,"nodeType":"755","messageId":"809","endLine":79,"endColumn":50},{"ruleId":"753","severity":1,"message":"828","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":18},{"ruleId":"753","severity":1,"message":"829","line":4,"column":25,"nodeType":"755","messageId":"756","endLine":4,"endColumn":31},{"ruleId":"753","severity":1,"message":"825","line":13,"column":13,"nodeType":"755","messageId":"756","endLine":13,"endColumn":22},{"ruleId":"753","severity":1,"message":"830","line":13,"column":24,"nodeType":"755","messageId":"756","endLine":13,"endColumn":29},{"ruleId":"753","severity":1,"message":"831","line":13,"column":44,"nodeType":"755","messageId":"756","endLine":13,"endColumn":54},{"ruleId":"757","severity":1,"message":"832","line":27,"column":8,"nodeType":"762","endLine":27,"endColumn":10,"suggestions":"833"},{"ruleId":"753","severity":1,"message":"834","line":2,"column":10,"nodeType":"755","messageId":"756","endLine":2,"endColumn":19},{"ruleId":"753","severity":1,"message":"835","line":2,"column":21,"nodeType":"755","messageId":"756","endLine":2,"endColumn":35},{"ruleId":"753","severity":1,"message":"836","line":2,"column":37,"nodeType":"755","messageId":"756","endLine":2,"endColumn":46},{"ruleId":"753","severity":1,"message":"837","line":2,"column":48,"nodeType":"755","messageId":"756","endLine":2,"endColumn":58},{"ruleId":"838","severity":1,"message":"839","line":4,"column":1,"nodeType":"840","messageId":"841","endLine":4,"endColumn":96},{"ruleId":"749","replacedBy":"842"},{"ruleId":"751","replacedBy":"843"},{"ruleId":"757","severity":1,"message":"758","line":32,"column":26,"nodeType":"755","endLine":32,"endColumn":37},{"ruleId":"757","severity":1,"message":"844","line":45,"column":8,"nodeType":"762","endLine":45,"endColumn":34,"suggestions":"845"},{"ruleId":"807","severity":1,"message":"846","line":70,"column":41,"nodeType":"755","messageId":"809","endLine":70,"endColumn":48},{"ruleId":"753","severity":1,"message":"818","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":19},{"ruleId":"753","severity":1,"message":"847","line":5,"column":11,"nodeType":"755","messageId":"756","endLine":5,"endColumn":23},{"ruleId":"753","severity":1,"message":"848","line":9,"column":8,"nodeType":"755","messageId":"756","endLine":9,"endColumn":18},{"ruleId":"753","severity":1,"message":"830","line":16,"column":12,"nodeType":"755","messageId":"756","endLine":16,"endColumn":17},{"ruleId":"753","severity":1,"message":"831","line":16,"column":18,"nodeType":"755","messageId":"756","endLine":16,"endColumn":28},{"ruleId":"753","severity":1,"message":"825","line":16,"column":41,"nodeType":"755","messageId":"756","endLine":16,"endColumn":50},{"ruleId":"757","severity":1,"message":"758","line":21,"column":24,"nodeType":"755","endLine":21,"endColumn":35},{"ruleId":"757","severity":1,"message":"849","line":35,"column":8,"nodeType":"762","endLine":35,"endColumn":34,"suggestions":"850"},{"ruleId":"753","severity":1,"message":"830","line":12,"column":37,"nodeType":"755","messageId":"756","endLine":12,"endColumn":42},{"ruleId":"753","severity":1,"message":"831","line":12,"column":44,"nodeType":"755","messageId":"756","endLine":12,"endColumn":54},{"ruleId":"753","severity":1,"message":"814","line":19,"column":19,"nodeType":"755","messageId":"756","endLine":19,"endColumn":31},{"ruleId":"851","severity":1,"message":"852","line":35,"column":17,"nodeType":"853","messageId":"854","endLine":35,"endColumn":110,"fix":"855"},{"ruleId":"753","severity":1,"message":"856","line":9,"column":16,"nodeType":"755","messageId":"756","endLine":9,"endColumn":20},{"ruleId":"753","severity":1,"message":"830","line":16,"column":26,"nodeType":"755","messageId":"756","endLine":16,"endColumn":31},{"ruleId":"753","severity":1,"message":"857","line":38,"column":13,"nodeType":"755","messageId":"756","endLine":38,"endColumn":19},{"ruleId":"753","severity":1,"message":"828","line":3,"column":10,"nodeType":"755","messageId":"756","endLine":3,"endColumn":18},{"ruleId":"753","severity":1,"message":"830","line":19,"column":26,"nodeType":"755","messageId":"756","endLine":19,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":19,"column":33,"nodeType":"755","messageId":"756","endLine":19,"endColumn":43},{"ruleId":"753","severity":1,"message":"830","line":15,"column":26,"nodeType":"755","messageId":"756","endLine":15,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":15,"column":33,"nodeType":"755","messageId":"756","endLine":15,"endColumn":43},{"ruleId":"753","severity":1,"message":"814","line":25,"column":19,"nodeType":"755","messageId":"756","endLine":25,"endColumn":31},{"ruleId":"753","severity":1,"message":"858","line":12,"column":12,"nodeType":"755","messageId":"756","endLine":12,"endColumn":23},{"ruleId":"753","severity":1,"message":"830","line":16,"column":26,"nodeType":"755","messageId":"756","endLine":16,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":16,"column":33,"nodeType":"755","messageId":"756","endLine":16,"endColumn":43},{"ruleId":"757","severity":1,"message":"805","line":32,"column":8,"nodeType":"762","endLine":32,"endColumn":37,"suggestions":"859"},{"ruleId":"753","severity":1,"message":"794","line":1,"column":21,"nodeType":"755","messageId":"756","endLine":1,"endColumn":24},{"ruleId":"753","severity":1,"message":"793","line":1,"column":26,"nodeType":"755","messageId":"756","endLine":1,"endColumn":29},{"ruleId":"753","severity":1,"message":"860","line":59,"column":22,"nodeType":"755","messageId":"756","endLine":59,"endColumn":33},{"ruleId":"753","severity":1,"message":"861","line":60,"column":12,"nodeType":"755","messageId":"756","endLine":60,"endColumn":21},{"ruleId":"753","severity":1,"message":"862","line":60,"column":23,"nodeType":"755","messageId":"756","endLine":60,"endColumn":35},{"ruleId":"757","severity":1,"message":"863","line":79,"column":8,"nodeType":"762","endLine":79,"endColumn":17,"suggestions":"864"},{"ruleId":"753","severity":1,"message":"865","line":84,"column":15,"nodeType":"755","messageId":"756","endLine":84,"endColumn":27},{"ruleId":"757","severity":1,"message":"866","line":110,"column":8,"nodeType":"762","endLine":110,"endColumn":41,"suggestions":"867"},{"ruleId":"753","severity":1,"message":"868","line":126,"column":14,"nodeType":"755","messageId":"756","endLine":126,"endColumn":33},{"ruleId":"753","severity":1,"message":"869","line":132,"column":14,"nodeType":"755","messageId":"756","endLine":132,"endColumn":33},{"ruleId":"753","severity":1,"message":"803","line":140,"column":11,"nodeType":"755","messageId":"756","endLine":140,"endColumn":24},{"ruleId":"753","severity":1,"message":"804","line":168,"column":11,"nodeType":"755","messageId":"756","endLine":168,"endColumn":24},{"ruleId":"757","severity":1,"message":"870","line":73,"column":8,"nodeType":"762","endLine":73,"endColumn":45,"suggestions":"871"},{"ruleId":"757","severity":1,"message":"872","line":37,"column":8,"nodeType":"762","endLine":37,"endColumn":45,"suggestions":"873"},{"ruleId":"753","severity":1,"message":"814","line":50,"column":19,"nodeType":"755","messageId":"756","endLine":50,"endColumn":31},{"ruleId":"807","severity":1,"message":"874","line":84,"column":41,"nodeType":"755","messageId":"809","endLine":84,"endColumn":50},{"ruleId":"753","severity":1,"message":"814","line":88,"column":19,"nodeType":"755","messageId":"756","endLine":88,"endColumn":31},{"ruleId":"753","severity":1,"message":"875","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":20},{"ruleId":"753","severity":1,"message":"876","line":9,"column":11,"nodeType":"755","messageId":"756","endLine":9,"endColumn":18},{"ruleId":"753","severity":1,"message":"877","line":11,"column":11,"nodeType":"755","messageId":"756","endLine":11,"endColumn":22},{"ruleId":"753","severity":1,"message":"878","line":7,"column":8,"nodeType":"755","messageId":"756","endLine":7,"endColumn":14},{"ruleId":"753","severity":1,"message":"818","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":19},{"ruleId":"757","severity":1,"message":"879","line":37,"column":8,"nodeType":"762","endLine":37,"endColumn":45,"suggestions":"880"},{"ruleId":"807","severity":1,"message":"881","line":84,"column":41,"nodeType":"755","messageId":"809","endLine":84,"endColumn":50},{"ruleId":"753","severity":1,"message":"882","line":5,"column":8,"nodeType":"755","messageId":"756","endLine":5,"endColumn":15},{"ruleId":"753","severity":1,"message":"876","line":8,"column":11,"nodeType":"755","messageId":"756","endLine":8,"endColumn":18},{"ruleId":"753","severity":1,"message":"883","line":9,"column":11,"nodeType":"755","messageId":"756","endLine":9,"endColumn":20},{"ruleId":"753","severity":1,"message":"877","line":11,"column":11,"nodeType":"755","messageId":"756","endLine":11,"endColumn":22},{"ruleId":"757","severity":1,"message":"863","line":19,"column":8,"nodeType":"762","endLine":19,"endColumn":19,"suggestions":"884"},{"ruleId":"757","severity":1,"message":"784","line":39,"column":8,"nodeType":"762","endLine":39,"endColumn":47,"suggestions":"885"},{"ruleId":"886","severity":1,"message":"887","line":123,"column":25,"nodeType":"853","endLine":123,"endColumn":157},{"ruleId":"753","severity":1,"message":"888","line":6,"column":10,"nodeType":"755","messageId":"756","endLine":6,"endColumn":14},{"ruleId":"757","severity":1,"message":"805","line":33,"column":8,"nodeType":"762","endLine":33,"endColumn":47,"suggestions":"889"},{"ruleId":"753","severity":1,"message":"882","line":1,"column":8,"nodeType":"755","messageId":"756","endLine":1,"endColumn":15},{"ruleId":"753","severity":1,"message":"794","line":2,"column":10,"nodeType":"755","messageId":"756","endLine":2,"endColumn":13},{"ruleId":"753","severity":1,"message":"793","line":2,"column":15,"nodeType":"755","messageId":"756","endLine":2,"endColumn":18},{"ruleId":"753","severity":1,"message":"790","line":4,"column":8,"nodeType":"755","messageId":"756","endLine":4,"endColumn":12},{"ruleId":"753","severity":1,"message":"793","line":2,"column":15,"nodeType":"755","messageId":"756","endLine":2,"endColumn":18},{"ruleId":"753","severity":1,"message":"882","line":1,"column":8,"nodeType":"755","messageId":"756","endLine":1,"endColumn":15},{"ruleId":"753","severity":1,"message":"825","line":13,"column":26,"nodeType":"755","messageId":"756","endLine":13,"endColumn":35},{"ruleId":"757","severity":1,"message":"805","line":29,"column":8,"nodeType":"762","endLine":29,"endColumn":47,"suggestions":"890"},{"ruleId":"753","severity":1,"message":"794","line":2,"column":21,"nodeType":"755","messageId":"756","endLine":2,"endColumn":24},{"ruleId":"753","severity":1,"message":"793","line":2,"column":26,"nodeType":"755","messageId":"756","endLine":2,"endColumn":29},{"ruleId":"753","severity":1,"message":"817","line":4,"column":20,"nodeType":"755","messageId":"756","endLine":4,"endColumn":29},{"ruleId":"753","severity":1,"message":"794","line":2,"column":21,"nodeType":"755","messageId":"756","endLine":2,"endColumn":24},{"ruleId":"753","severity":1,"message":"793","line":2,"column":26,"nodeType":"755","messageId":"756","endLine":2,"endColumn":29},{"ruleId":"753","severity":1,"message":"828","line":4,"column":10,"nodeType":"755","messageId":"756","endLine":4,"endColumn":18},{"ruleId":"753","severity":1,"message":"817","line":4,"column":20,"nodeType":"755","messageId":"756","endLine":4,"endColumn":29},{"ruleId":"753","severity":1,"message":"794","line":1,"column":21,"nodeType":"755","messageId":"756","endLine":1,"endColumn":24},{"ruleId":"753","severity":1,"message":"793","line":1,"column":26,"nodeType":"755","messageId":"756","endLine":1,"endColumn":29},{"ruleId":"753","severity":1,"message":"828","line":3,"column":10,"nodeType":"755","messageId":"756","endLine":3,"endColumn":18},{"ruleId":"753","severity":1,"message":"817","line":3,"column":20,"nodeType":"755","messageId":"756","endLine":3,"endColumn":29},{"ruleId":"757","severity":1,"message":"891","line":16,"column":25,"nodeType":"799","endLine":19,"endColumn":10},{"ruleId":"757","severity":1,"message":"892","line":27,"column":8,"nodeType":"762","endLine":27,"endColumn":27,"suggestions":"893"},{"ruleId":"757","severity":1,"message":"891","line":17,"column":23,"nodeType":"799","endLine":20,"endColumn":10},{"ruleId":"757","severity":1,"message":"892","line":28,"column":7,"nodeType":"762","endLine":28,"endColumn":26,"suggestions":"894"},{"ruleId":"753","severity":1,"message":"789","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":18},{"ruleId":"753","severity":1,"message":"875","line":1,"column":20,"nodeType":"755","messageId":"756","endLine":1,"endColumn":30},{"ruleId":"753","severity":1,"message":"828","line":1,"column":32,"nodeType":"755","messageId":"756","endLine":1,"endColumn":40},{"ruleId":"753","severity":1,"message":"817","line":1,"column":42,"nodeType":"755","messageId":"756","endLine":1,"endColumn":51},{"ruleId":"753","severity":1,"message":"790","line":3,"column":8,"nodeType":"755","messageId":"756","endLine":3,"endColumn":12},{"ruleId":"753","severity":1,"message":"895","line":5,"column":10,"nodeType":"755","messageId":"756","endLine":5,"endColumn":21},{"ruleId":"753","severity":1,"message":"896","line":6,"column":10,"nodeType":"755","messageId":"756","endLine":6,"endColumn":24},{"ruleId":"753","severity":1,"message":"897","line":7,"column":10,"nodeType":"755","messageId":"756","endLine":7,"endColumn":23},{"ruleId":"753","severity":1,"message":"882","line":8,"column":8,"nodeType":"755","messageId":"756","endLine":8,"endColumn":15},{"ruleId":"753","severity":1,"message":"830","line":12,"column":26,"nodeType":"755","messageId":"756","endLine":12,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":12,"column":33,"nodeType":"755","messageId":"756","endLine":12,"endColumn":43},{"ruleId":"753","severity":1,"message":"847","line":16,"column":11,"nodeType":"755","messageId":"756","endLine":16,"endColumn":23},{"ruleId":"753","severity":1,"message":"814","line":18,"column":19,"nodeType":"755","messageId":"756","endLine":18,"endColumn":31},{"ruleId":"753","severity":1,"message":"898","line":38,"column":15,"nodeType":"755","messageId":"756","endLine":38,"endColumn":32},{"ruleId":"757","severity":1,"message":"870","line":55,"column":8,"nodeType":"762","endLine":55,"endColumn":45,"suggestions":"899"},{"ruleId":"807","severity":1,"message":"900","line":102,"column":40,"nodeType":"755","messageId":"809","endLine":102,"endColumn":44},{"ruleId":"753","severity":1,"message":"814","line":106,"column":19,"nodeType":"755","messageId":"756","endLine":106,"endColumn":31},{"ruleId":"753","severity":1,"message":"901","line":15,"column":13,"nodeType":"755","messageId":"756","endLine":15,"endColumn":24},{"ruleId":"753","severity":1,"message":"830","line":15,"column":26,"nodeType":"755","messageId":"756","endLine":15,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":15,"column":33,"nodeType":"755","messageId":"756","endLine":15,"endColumn":43},{"ruleId":"753","severity":1,"message":"902","line":16,"column":11,"nodeType":"755","messageId":"756","endLine":16,"endColumn":15},{"ruleId":"753","severity":1,"message":"903","line":17,"column":11,"nodeType":"755","messageId":"756","endLine":17,"endColumn":25},{"ruleId":"753","severity":1,"message":"828","line":2,"column":10,"nodeType":"755","messageId":"756","endLine":2,"endColumn":18},{"ruleId":"753","severity":1,"message":"902","line":14,"column":11,"nodeType":"755","messageId":"756","endLine":14,"endColumn":15},{"ruleId":"753","severity":1,"message":"903","line":15,"column":11,"nodeType":"755","messageId":"756","endLine":15,"endColumn":25},{"ruleId":"753","severity":1,"message":"901","line":16,"column":13,"nodeType":"755","messageId":"756","endLine":16,"endColumn":24},{"ruleId":"753","severity":1,"message":"818","line":1,"column":10,"nodeType":"755","messageId":"756","endLine":1,"endColumn":19},{"ruleId":"753","severity":1,"message":"875","line":2,"column":28,"nodeType":"755","messageId":"756","endLine":2,"endColumn":38},{"ruleId":"753","severity":1,"message":"810","line":14,"column":12,"nodeType":"755","messageId":"756","endLine":14,"endColumn":29},{"ruleId":"753","severity":1,"message":"904","line":14,"column":31,"nodeType":"755","messageId":"756","endLine":14,"endColumn":51},{"ruleId":"757","severity":1,"message":"805","line":40,"column":8,"nodeType":"762","endLine":40,"endColumn":47,"suggestions":"905"},{"ruleId":"753","severity":1,"message":"830","line":29,"column":26,"nodeType":"755","messageId":"756","endLine":29,"endColumn":31},{"ruleId":"753","severity":1,"message":"831","line":29,"column":33,"nodeType":"755","messageId":"756","endLine":29,"endColumn":43},{"ruleId":"757","severity":1,"message":"805","line":49,"column":8,"nodeType":"762","endLine":49,"endColumn":47,"suggestions":"906"},{"ruleId":"753","severity":1,"message":"875","line":2,"column":28,"nodeType":"755","messageId":"756","endLine":2,"endColumn":38},{"ruleId":"753","severity":1,"message":"907","line":12,"column":29,"nodeType":"755","messageId":"756","endLine":12,"endColumn":47},{"ruleId":"851","severity":1,"message":"852","line":10,"column":21,"nodeType":"853","messageId":"854","endLine":10,"endColumn":144,"fix":"908"},{"ruleId":"753","severity":1,"message":"909","line":9,"column":25,"nodeType":"755","messageId":"756","endLine":9,"endColumn":40},{"ruleId":"753","severity":1,"message":"856","line":4,"column":16,"nodeType":"755","messageId":"756","endLine":4,"endColumn":20},{"ruleId":"753","severity":1,"message":"910","line":18,"column":11,"nodeType":"755","messageId":"756","endLine":18,"endColumn":24},"no-native-reassign",["911"],"no-negated-in-lhs",["912"],"no-unused-vars","'anamnistikoId' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'createAnamnistikoId' is assigned a value but never used.","'setAnamnistikoNull' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["913"],"React Hook useEffect has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.",["914"],"'name' is assigned a value but never used.","'sirname' is assigned a value but never used.","'diagnosis' is assigned a value but never used.","'tel' is assigned a value but never used.","'amka' is assigned a value but never used.","'history' is assigned a value but never used.","'changeNameHandler' is defined but never used.","'changeSirnameHandler' is defined but never used.","'changeDiagnosisHandler' is defined but never used.","'changeTelHandler' is defined but never used.","'changeAmkaHandler' is defined but never used.","'clearHandler' is defined but never used.",["911"],["912"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has a missing dependency: 'fetchPatients'. Either include it or remove the dependency array.",["915"],"React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["916"],"'response' is assigned a value but never used.","'Fragment' is defined but never used.","'Card' is defined but never used.",["911"],["912"],"'Col' is defined but never used.","'Row' is defined but never used.","'gynaikologikoList' is assigned a value but never used.","'paramsId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'auth.token', 'patientContext.anamnistikoId', 'patientContext.patientId', and 'sendRequest'. Either include them or remove the dependency array.",["917"],"'submitHandler' is assigned a value but never used.","'updateHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["918"],"no-self-assign","'condition' is assigned to itself.","selfAssignment","'selectedCondition' is assigned a value but never used.",["919"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'responseData' is assigned a value but never used.",["920"],"'useCallback' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.",["921"],"'surgery' is assigned to itself.","'adkInputRef' is assigned a value but never used.","'tdkInputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'gynaikologiko'. Either include them or remove the dependency array.",["922"],"'isLoading' is assigned a value but never used.",["923"],"'pregnacy' is assigned to itself.","'useState' is defined but never used.","'notify' is defined but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'sendRequest', and 'userId'. Either include them or remove the dependency array.",["924"],"'Highlight' is defined but never used.","'RefinementList' is defined but never used.","'Configure' is defined but never used.","'Pagination' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["911"],["912"],"React Hook useEffect has a missing dependency: 'fetchFarmaka'. Either include it or remove the dependency array.",["925"],"'farmako' is assigned to itself.","'clickHandler' is assigned a value but never used.","'SaveButton' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchFiles'. Either include it or remove the dependency array.",["926"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"927","text":"928"},"'uuid' is defined but never used.","'fileId' is assigned a value but never used.","'selectedHit' is assigned a value but never used.",["929"],"'setOzosList' is assigned a value but never used.","'loadVisit' is assigned a value but never used.","'setLoadVisit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patientContext'. Either include it or remove the dependency array.",["930"],"'fetchHistory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'paramsId'. Either include them or remove the dependency array.",["931"],"'changeHeightHandler' is defined but never used.","'changeWeightHandler' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'patientContext.patientId'. Either include them or remove the dependency array.",["932"],"React Hook useEffect has missing dependencies: 'auth.token', 'patientContext.patientId', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["933"],"'diagnosis' is assigned to itself.","'useContext' is defined but never used.","'visitId' is assigned a value but never used.","'loadHandler' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["934"],"'therapeia' is assigned to itself.","'classes' is defined but never used.","'patientId' is assigned a value but never used.",["935"],["936"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.",["937"],["938"],"Assignments to the 'removeHandler' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["939"],["940"],"'AuthContext' is defined but never used.","'PatientContext' is defined but never used.","'useHttpClient' is defined but never used.","'fetchPreviousOzoi' is assigned a value but never used.",["941"],"'ozos' is assigned to itself.","'sendRequest' is assigned a value but never used.","'auth' is assigned a value but never used.","'patientContext' is assigned a value but never used.","'setSelectedCondition' is assigned a value but never used.",["942"],["943"],"'setSelectedFarmako' is assigned a value but never used.",{"range":"944","text":"928"},"'setCorrectValue' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"945","fix":"946"},{"desc":"947","fix":"948"},{"desc":"949","fix":"950"},{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"957","fix":"959"},{"desc":"957","fix":"960"},{"desc":"961","fix":"962"},{"desc":"957","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},[1599,1599]," rel=\"noreferrer\"",{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"949","fix":"984"},{"desc":"985","fix":"986"},{"desc":"957","fix":"987"},{"desc":"988","fix":"989"},{"desc":"988","fix":"990"},{"desc":"976","fix":"991"},{"desc":"957","fix":"992"},{"desc":"957","fix":"993"},[332,332],"Update the dependencies array to be: [history]",{"range":"994","text":"995"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest, state]",{"range":"996","text":"997"},"Update the dependencies array to be: [sendRequest, patientContext.patientId, fetchPatients]",{"range":"998","text":"999"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [auth.token, patientContext.anamnistikoId, patientContext.patientId, sendRequest]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [patientContext.patientId, sendRequest, props.profil, auth.token]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [auth.token, patientContext.patientId, sendRequest]",{"range":"1006","text":"1007"},{"range":"1008","text":"1007"},{"range":"1009","text":"1007"},"Update the dependencies array to be: [auth.token, gynaikologiko, patientContext.patientId, sendRequest]",{"range":"1010","text":"1011"},{"range":"1012","text":"1007"},"Update the dependencies array to be: [auth, sendRequest, userId]",{"range":"1013","text":"1014"},"Update the dependencies array to be: [fetchFarmaka, patientContext.patientId]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [fetchFiles, patientContext.patientId]",{"range":"1017","text":"1018"},"Update the dependencies array to be: [auth.token, conditionInput, sendRequest]",{"range":"1019","text":"1020"},"Update the dependencies array to be: [patientContext, visitId]",{"range":"1021","text":"1022"},"Update the dependencies array to be: [auth.token, paramsId, patientId, sendRequest, visitId]",{"range":"1023","text":"1024"},"Update the dependencies array to be: [auth.token, patientContext.patientId, patientContext.visitId, sendRequest]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [auth.token, patientContext.patientId, patientContext.visitId, props, sendRequest]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [auth.token, patientContext.visitId, props, sendRequest]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [patientContext, patientId]",{"range":"1031","text":"1032"},{"range":"1033","text":"999"},"Update the dependencies array to be: [sendRequest, patientContext.patientId, auth.token]",{"range":"1034","text":"1035"},{"range":"1036","text":"1007"},"Update the dependencies array to be: [props, selectedCondition]",{"range":"1037","text":"1038"},{"range":"1039","text":"1038"},{"range":"1040","text":"1026"},{"range":"1041","text":"1007"},{"range":"1042","text":"1007"},[2894,2896],"[history]",[2702,2722],"[auth.token, auth.userId, sendRequest, state]",[3879,3918],"[sendRequest, patientContext.patientId, fetchPatients]",[1662,1675],"[auth.token, props.patientId, sendRequest]",[2921,2923],"[auth.token, patientContext.anamnistikoId, patientContext.patientId, sendRequest]",[1994,2047],"[patientContext.patientId, sendRequest, props.profil, auth.token]",[1935,1974],"[auth.token, patientContext.patientId, sendRequest]",[2011,2050],[1354,1393],[2131,2170],"[auth.token, gynaikologiko, patientContext.patientId, sendRequest]",[1393,1432],[1047,1049],"[auth, sendRequest, userId]",[1446,1472],"[fetchFarmaka, patientContext.patientId]",[1354,1380],"[fetchFiles, patientContext.patientId]",[1081,1110],"[auth.token, conditionInput, sendRequest]",[3712,3721],"[patientContext, visitId]",[5194,5227],"[auth.token, paramsId, patientId, sendRequest, visitId]",[2862,2899],"[auth.token, patientContext.patientId, patientContext.visitId, sendRequest]",[1659,1696],"[auth.token, patientContext.patientId, patientContext.visitId, props, sendRequest]",[1587,1624],"[auth.token, patientContext.visitId, props, sendRequest]",[718,729],"[patientContext, patientId]",[2180,2219],[1368,1407],"[sendRequest, patientContext.patientId, auth.token]",[1242,1281],[966,985],"[props, selectedCondition]",[955,974],[2097,2134],[1572,1611],[1776,1815]]