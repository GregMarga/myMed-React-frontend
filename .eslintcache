[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js":"48","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js":"49","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js":"50","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js":"51","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointment.js":"52","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js":"53","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js":"54","D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js":"55","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js":"56","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js":"57","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js":"58","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js":"59","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js":"60","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js":"61","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js":"62","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js":"63","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js":"64","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js":"65","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\NewVisit.js":"66","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js":"67","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js":"68","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js":"69","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js":"70","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js":"71","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js":"72","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js":"73","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js":"74","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js":"75","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js":"76","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js":"77","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js":"78","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js":"79","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js":"80","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js":"81","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js":"82","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js":"83","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js":"84","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js":"85","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js":"86","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js":"87","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js":"88","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js":"89","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js":"90","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js":"91","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js":"92","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js":"93","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js":"94","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js":"95","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js":"96","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js":"97","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js":"98","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js":"99","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js":"100","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js":"101","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js":"102","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyForm.js":"103","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyList.js":"104","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyListItem.js":"105","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\PatientProfile.js":"106","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\BasicInfo.js":"107","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsList.js":"108","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsInfo.js":"109","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsNavBar.js":"110","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Atomiko\\Atomiko.js":"111","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Surgeries\\SurgeriesInfo.js":"112","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Farmaka\\FarmakaInfo.js":"113","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Files\\FilesInfo.js":"114","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\AllergiesLoaded.js":"115","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoLoaded.js":"116","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\AllergiesInfo\\AllergiesInfo.js":"117","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\KlironomikoInfo\\KlironomikoInfo.js":"118","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListItem.js":"119","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListHeader.js":"120","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\Ozoi.js":"121","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiHeader.js":"122","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzosForm.js":"123","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiList.js":"124","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiListItem.js":"125","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ViewButton.js":"126","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiEditForm.js":"127","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisEditForm.js":"128","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionEditForm.js":"129","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\GynaikologikoInfo\\GynaikologikoInfo.js":"130","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Statistics.js":"131","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Biometrics.js":"132","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\OzoiStats.js":"133"},{"size":260,"mtime":1651833409357,"results":"134","hashOfConfig":"135"},{"size":4685,"mtime":1662374725290,"results":"136","hashOfConfig":"135"},{"size":5365,"mtime":1662317609779,"results":"137","hashOfConfig":"135"},{"size":1739,"mtime":1661007492526,"results":"138","hashOfConfig":"135"},{"size":3812,"mtime":1660667222483,"results":"139","hashOfConfig":"135"},{"size":2888,"mtime":1662113438482,"results":"140","hashOfConfig":"135"},{"size":1832,"mtime":1662317243255,"results":"141","hashOfConfig":"135"},{"size":4055,"mtime":1662027650059,"results":"142","hashOfConfig":"135"},{"size":222,"mtime":1652096209126,"results":"143","hashOfConfig":"135"},{"size":792,"mtime":1654802892489,"results":"144","hashOfConfig":"135"},{"size":122,"mtime":1652200578637,"results":"145","hashOfConfig":"135"},{"size":232,"mtime":1654429189609,"results":"146","hashOfConfig":"135"},{"size":3023,"mtime":1657902393557,"results":"147","hashOfConfig":"135"},{"size":4488,"mtime":1661018510802,"results":"148","hashOfConfig":"135"},{"size":18229,"mtime":1662112132785,"results":"149","hashOfConfig":"135"},{"size":526,"mtime":1652361098154,"results":"150","hashOfConfig":"135"},{"size":8527,"mtime":1657727880663,"results":"151","hashOfConfig":"135"},{"size":3873,"mtime":1657728320476,"results":"152","hashOfConfig":"135"},{"size":1004,"mtime":1657907925210,"results":"153","hashOfConfig":"135"},{"size":3797,"mtime":1657728020027,"results":"154","hashOfConfig":"135"},{"size":7212,"mtime":1657727984913,"results":"155","hashOfConfig":"135"},{"size":2976,"mtime":1656171673556,"results":"156","hashOfConfig":"135"},{"size":995,"mtime":1654968392119,"results":"157","hashOfConfig":"135"},{"size":1294,"mtime":1655828825098,"results":"158","hashOfConfig":"135"},{"size":12114,"mtime":1660919935170,"results":"159","hashOfConfig":"135"},{"size":456,"mtime":1654886504748,"results":"160","hashOfConfig":"135"},{"size":4782,"mtime":1656175715746,"results":"161","hashOfConfig":"135"},{"size":3928,"mtime":1657042275816,"results":"162","hashOfConfig":"135"},{"size":870,"mtime":1657043811602,"results":"163","hashOfConfig":"135"},{"size":862,"mtime":1657042296882,"results":"164","hashOfConfig":"135"},{"size":1369,"mtime":1656167920349,"results":"165","hashOfConfig":"135"},{"size":420,"mtime":1662223152666,"results":"166","hashOfConfig":"135"},{"size":368,"mtime":1662223170623,"results":"167","hashOfConfig":"135"},{"size":645,"mtime":1661505782685,"results":"168","hashOfConfig":"135"},{"size":2175,"mtime":1662317462425,"results":"169","hashOfConfig":"135"},{"size":4634,"mtime":1657902316861,"results":"170","hashOfConfig":"135"},{"size":6843,"mtime":1661089030074,"results":"171","hashOfConfig":"135"},{"size":1940,"mtime":1654598731892,"results":"172","hashOfConfig":"135"},{"size":406,"mtime":1654528326660,"results":"173","hashOfConfig":"135"},{"size":1710,"mtime":1654529564944,"results":"174","hashOfConfig":"135"},{"size":1506,"mtime":1654598496357,"results":"175","hashOfConfig":"135"},{"size":185,"mtime":1655052061232,"results":"176","hashOfConfig":"135"},{"size":273,"mtime":1573657440000,"results":"177","hashOfConfig":"135"},{"size":633,"mtime":1662317909799,"results":"178","hashOfConfig":"135"},{"size":1499,"mtime":1661956506685,"results":"179","hashOfConfig":"135"},{"size":2211,"mtime":1657041955811,"results":"180","hashOfConfig":"135"},{"size":2977,"mtime":1661249144601,"results":"181","hashOfConfig":"135"},{"size":754,"mtime":1657387645538,"results":"182","hashOfConfig":"135"},{"size":1389,"mtime":1657388156154,"results":"183","hashOfConfig":"135"},{"size":2229,"mtime":1661514996049,"results":"184","hashOfConfig":"135"},{"size":3230,"mtime":1657710488550,"results":"185","hashOfConfig":"135"},{"size":5099,"mtime":1656867173756,"results":"186","hashOfConfig":"135"},{"size":1304,"mtime":1657298996541,"results":"187","hashOfConfig":"135"},{"size":1156,"mtime":1661428223278,"results":"188","hashOfConfig":"135"},{"size":361,"mtime":1662113360193,"results":"189","hashOfConfig":"135"},{"size":11497,"mtime":1662116487287,"results":"190","hashOfConfig":"135"},{"size":1461,"mtime":1662303061389,"results":"191","hashOfConfig":"135"},{"size":14322,"mtime":1662115978384,"results":"192","hashOfConfig":"135"},{"size":2111,"mtime":1662306850197,"results":"193","hashOfConfig":"135"},{"size":4928,"mtime":1662127163074,"results":"194","hashOfConfig":"135"},{"size":494,"mtime":1662114472555,"results":"195","hashOfConfig":"135"},{"size":1748,"mtime":1662118365877,"results":"196","hashOfConfig":"135"},{"size":947,"mtime":1662118041846,"results":"197","hashOfConfig":"135"},{"size":3287,"mtime":1662369000036,"results":"198","hashOfConfig":"135"},{"size":1683,"mtime":1662374718120,"results":"199","hashOfConfig":"135"},{"size":7455,"mtime":1661097271995,"results":"200","hashOfConfig":"135"},{"size":4979,"mtime":1662390937518,"results":"201","hashOfConfig":"135"},{"size":1375,"mtime":1661094096216,"results":"202","hashOfConfig":"135"},{"size":992,"mtime":1661352728277,"results":"203","hashOfConfig":"135"},{"size":2569,"mtime":1662204521472,"results":"204","hashOfConfig":"135"},{"size":2729,"mtime":1662305862135,"results":"205","hashOfConfig":"135"},{"size":2056,"mtime":1662306870628,"results":"206","hashOfConfig":"135"},{"size":542,"mtime":1661262470333,"results":"207","hashOfConfig":"135"},{"size":530,"mtime":1661262462010,"results":"208","hashOfConfig":"135"},{"size":1790,"mtime":1662118086679,"results":"209","hashOfConfig":"135"},{"size":489,"mtime":1662118042906,"results":"210","hashOfConfig":"135"},{"size":2407,"mtime":1662204549296,"results":"211","hashOfConfig":"135"},{"size":622,"mtime":1661608754088,"results":"212","hashOfConfig":"135"},{"size":1128,"mtime":1662131035692,"results":"213","hashOfConfig":"135"},{"size":1810,"mtime":1662225817685,"results":"214","hashOfConfig":"135"},{"size":3516,"mtime":1662221508853,"results":"215","hashOfConfig":"135"},{"size":1809,"mtime":1661594429950,"results":"216","hashOfConfig":"135"},{"size":1134,"mtime":1662131039461,"results":"217","hashOfConfig":"135"},{"size":2940,"mtime":1662221823732,"results":"218","hashOfConfig":"135"},{"size":1710,"mtime":1662223255484,"results":"219","hashOfConfig":"135"},{"size":634,"mtime":1661359781818,"results":"220","hashOfConfig":"135"},{"size":3816,"mtime":1661450466295,"results":"221","hashOfConfig":"135"},{"size":306,"mtime":1661522869844,"results":"222","hashOfConfig":"135"},{"size":318,"mtime":1661416465907,"results":"223","hashOfConfig":"135"},{"size":627,"mtime":1661424293393,"results":"224","hashOfConfig":"135"},{"size":2409,"mtime":1662287281297,"results":"225","hashOfConfig":"135"},{"size":333,"mtime":1661709474467,"results":"226","hashOfConfig":"135"},{"size":17101,"mtime":1662388517314,"results":"227","hashOfConfig":"135"},{"size":7392,"mtime":1661440316603,"results":"228","hashOfConfig":"135"},{"size":2480,"mtime":1662303937495,"results":"229","hashOfConfig":"135"},{"size":2663,"mtime":1662305626535,"results":"230","hashOfConfig":"135"},{"size":1877,"mtime":1662305639677,"results":"231","hashOfConfig":"135"},{"size":2605,"mtime":1662305917446,"results":"232","hashOfConfig":"135"},{"size":2095,"mtime":1662227742263,"results":"233","hashOfConfig":"135"},{"size":2495,"mtime":1662304028580,"results":"234","hashOfConfig":"135"},{"size":1830,"mtime":1661772631121,"results":"235","hashOfConfig":"135"},{"size":3773,"mtime":1662052116221,"results":"236","hashOfConfig":"135"},{"size":1980,"mtime":1662126540419,"results":"237","hashOfConfig":"135"},{"size":872,"mtime":1662374720370,"results":"238","hashOfConfig":"135"},{"size":547,"mtime":1662310439284,"results":"239","hashOfConfig":"135"},{"size":871,"mtime":1662204351924,"results":"240","hashOfConfig":"135"},{"size":4964,"mtime":1662290360000,"results":"241","hashOfConfig":"135"},{"size":2533,"mtime":1662290347433,"results":"242","hashOfConfig":"135"},{"size":1373,"mtime":1662306159962,"results":"243","hashOfConfig":"135"},{"size":1408,"mtime":1662306291339,"results":"244","hashOfConfig":"135"},{"size":4075,"mtime":1662305225528,"results":"245","hashOfConfig":"135"},{"size":525,"mtime":1661786078269,"results":"246","hashOfConfig":"135"},{"size":443,"mtime":1661786074345,"results":"247","hashOfConfig":"135"},{"size":386,"mtime":1661794191381,"results":"248","hashOfConfig":"135"},{"size":2359,"mtime":1661869996165,"results":"249","hashOfConfig":"135"},{"size":2324,"mtime":1661870773082,"results":"250","hashOfConfig":"135"},{"size":2638,"mtime":1662223780760,"results":"251","hashOfConfig":"135"},{"size":2756,"mtime":1662223779110,"results":"252","hashOfConfig":"135"},{"size":2124,"mtime":1662290309639,"results":"253","hashOfConfig":"135"},{"size":571,"mtime":1662023848564,"results":"254","hashOfConfig":"135"},{"size":1024,"mtime":1662283613499,"results":"255","hashOfConfig":"135"},{"size":662,"mtime":1662196733755,"results":"256","hashOfConfig":"135"},{"size":2545,"mtime":1662387555064,"results":"257","hashOfConfig":"135"},{"size":1134,"mtime":1662387859428,"results":"258","hashOfConfig":"135"},{"size":2257,"mtime":1662387510744,"results":"259","hashOfConfig":"135"},{"size":375,"mtime":1662225463433,"results":"260","hashOfConfig":"135"},{"size":2503,"mtime":1662387583162,"results":"261","hashOfConfig":"135"},{"size":2765,"mtime":1662305631389,"results":"262","hashOfConfig":"135"},{"size":2839,"mtime":1662305539940,"results":"263","hashOfConfig":"135"},{"size":5615,"mtime":1662370272443,"results":"264","hashOfConfig":"135"},{"size":1195,"mtime":1662400751743,"results":"265","hashOfConfig":"135"},{"size":2230,"mtime":1662394416074,"results":"266","hashOfConfig":"135"},{"size":3851,"mtime":1662399648292,"results":"267","hashOfConfig":"135"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},"qiatdq",{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"270"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"270"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"270"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"270"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"270"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"270"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"270"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"270"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"270"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"270"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"270"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"270"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"270"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"378"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"270"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"270"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"270"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"270"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"270"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"270"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"270"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"270"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"425"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"270"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"270"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"270"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"270"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"460","usedDeprecatedRules":"270"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"270"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"270"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"270"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"270"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"270"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"270"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"496"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"270"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"270"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"270"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"270"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"270"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"270"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"270"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"270"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"270"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"270"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"270"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"270"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"270"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"270"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"270"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"270"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"270"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"270"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"270"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"270"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"270"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"270"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["597","598"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",["599","600","601","602","603","604"],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["605","606","607"],"import { Container } from 'react-bootstrap';\r\nimport PatientsList from '../components/PatientsList';\r\nimport PatientsListHeader from '../components/PatientsListHeader';\r\nimport PatientSearch from '../components/UI/PatientSearch';\r\nimport Backdrop from '../components/UI/Backdrop';\r\nimport classes from './Patients.module.css';\r\nimport Modal from '../components/UI/Modal';\r\nimport DeleteModal from '../components/UI/DeleteModal';\r\nimport EditPatient from '../components/EditPatient';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useEffect, useContext, useReducer } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst defaultSearch = { sirname: '', name: '', diagnosis: '', age: '', tel: '', amka: '' };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'name':\r\n            return { ...state, name: action.payload.name };\r\n        case 'sirname':\r\n            return { ...state, sirname: action.payload.sirname };\r\n        case 'diagnosis':\r\n            return { ...state, diagnosis: action.payload.diagnosis };\r\n        case 'tel':\r\n            return { ...state, tel: action.payload.tel };\r\n        case 'amka':\r\n            return { ...state, amka: action.payload.amka };\r\n        case 'clear': {\r\n            return defaultSearch;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst Patients = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [loadedPatients, setLoadedPatients] = useState([]);\r\n    const [patientToDelete, setPatientToDelete] = useState();\r\n    const [patientToEdit, setPatientToEdit] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n\r\n    const [state, dispatch] = useReducer(reducer, defaultSearch);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/patients/getPatients/${auth.userId}?name=${state.name}&sirname=${state.sirname}&diagnosis=${state.diagnosis}&tel=${state.tel}&amka=${state.amka}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatients(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        setTimeout(fetchPatients);\r\n    }, [sendRequest, state]);\r\n\r\n\r\n    function addPatientHandler() {\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    function closeHandler() {\r\n        setModalIsOpen(false);\r\n    }\r\n    function deleteHandler(patientId) {\r\n        setDeleteModalIsOpen(true);\r\n        setPatientToDelete(patientId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function editHandler(patientId) {\r\n        setEditModalIsOpen(true);\r\n        setPatientToEdit(patientId);\r\n    }\r\n    function closeEditModal() {\r\n        setEditModalIsOpen(false);\r\n    }\r\n    function submitPatientHandler(patient) {\r\n        setLoadedPatients(prevPatients => {\r\n            return [patient, ...prevPatients];\r\n        });\r\n    }\r\n    async function deletePatientHandler() {\r\n        const responseDeletedPatient = await sendRequest(`http://localhost:5000/patients/${patientToDelete.id}`, 'DELETE', null, {\r\n            Authorization: 'Bearer ' + auth.token\r\n        }\r\n        );\r\n        setLoadedPatients(prevPatients => {\r\n            return prevPatients.filter(patient => patient._id !== responseDeletedPatient._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div className={classes.test}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <Container>\r\n                {/* <PatientsListHeader dispatch={dispatch} /> */}\r\n                {isLoading && <LoadingSpinner />}\r\n\r\n                {!isLoading && loadedPatients && <PatientsList patients={loadedPatients} onDelete={deleteHandler} onEdit={editHandler} />}\r\n                {modalIsOpen && <Modal onClose={closeHandler} onSubmit={submitPatientHandler} patients={loadedPatients} />}\r\n                {modalIsOpen && !error && <Backdrop onClick={closeHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deletePatientHandler} amka={patientToDelete.amka} onCancel={closeDeleteModal} description={`Για να επιβεβαιώσετε την διαγραφή του ασθενή, συμπληρώστε το ΑΜΚΑ:${patientToDelete.amka} στο πλαίσιο.`} />}\r\n                {deleteModalIsOpen && !error && <Backdrop onClick={closeDeleteModal} />}\r\n                {editModalIsOpen && !error && <Backdrop onClick={closeEditModal} />}\r\n                {editModalIsOpen && <EditPatient onClose={closeEditModal} patientId={patientToEdit} />}\r\n\r\n                {/* <button onClick={addPatientHandler} className={classes.addButton}>Δημιουργία Ασθενή</button> */}\r\n\r\n            </Container>\r\n            <PatientSearch dispatch={dispatch} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",["608","609","610","611","612","613","614","615","616","617","618","619"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport classes from './PatientsListHeader.module.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PatientsListHeader = (props) => {\r\n    const [name,setName]=useState();\r\n    const [sirname,setSirname]=useState();\r\n    const [diagnosis,setDiagnosis]=useState();\r\n    const [tel,setTel]=useState();\r\n    const [amka,setAmka]=useState();\r\n    const history = useHistory()\r\n    function changeNameHandler(event) {\r\n        props.dispatch({ type: 'name', payload: { name: event.target.value } })\r\n        setName(event.target.value);\r\n    }\r\n    function changeSirnameHandler(event) {\r\n        props.dispatch({ type: 'sirname', payload: { sirname: event.target.value } })\r\n        setSirname(event.target.value);\r\n    }\r\n    function changeDiagnosisHandler(event) {\r\n        props.dispatch({ type: 'diagnosis', payload: { diagnosis: event.target.value } })\r\n        setDiagnosis(event.target.value);\r\n    }\r\n    function changeTelHandler(event) {\r\n        props.dispatch({ type: 'tel', payload: { tel: event.target.value } })\r\n        setTel(event.target.value);\r\n    }\r\n    function changeAmkaHandler(event) {\r\n        props.dispatch({ type: 'amka', payload: { amka: event.target.value } })\r\n        setAmka(event.target.value);\r\n    }\r\n    function clearHandler(event) {\r\n        props.dispatch({type:'clear'});\r\n        setName('');\r\n        setSirname('');\r\n        setDiagnosis('');\r\n        setTel('');\r\n        setAmka('');\r\n        // history.push(`/patients/62aa19495a6877632fd7d9e8/lab_test?q=2022-06-16`)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            <Row><Col className='text-center'><h4 className={classes.title}>Ασθενείς</h4></Col></Row>\r\n            <Row className='justify-content-sm-space-around'>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='sirname'>Επώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='name'>Όνομα</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='diagnosis'>Πατρώνυμο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='age'>Ηλικία</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='tel'>Τηλέφωνο</label></Col>\r\n                <Col className='text-center'><label className={classes.labels} htmlFor='amka'>ΑΜΚΑ</label></Col>\r\n                <Col></Col>\r\n            </Row>\r\n            {/* <form>\r\n                <Row className='justify-content-sm-space-around'>\r\n\r\n                    <Col className='text-center'><input onChange={changeSirnameHandler} value={sirname} name='sirname' type='text' id='sirname' /></Col>\r\n                    <Col className='text-center'><input onChange={changeNameHandler} value={name} name='name' type='text' id='name' /></Col>\r\n                    <Col className='text-center'><input onChange={changeDiagnosisHandler} value={diagnosis} name='diagnosis' type='text' id='diagnosis' /></Col>\r\n                    <Col className='text-center'><input name='age' type='text' id='age' /></Col>\r\n                    <Col className='text-center'><input onChange={changeTelHandler} value={tel} name='tel' type='text' id='tel' /></Col>\r\n                    <Col className='text-center'><input onChange={changeAmkaHandler} value={amka} name='amka' type='text' id='amka' /></Col>\r\n                    <Col><button type='button' className={classes.button} onClick={clearHandler}>Clear filters</button></Col>\r\n\r\n                </Row>\r\n            </form> */}\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default PatientsListHeader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",["620","621","622","623","624","625","626","627","628"],"import { Fragment } from 'react';\r\nimport { useParams, Switch, Route } from 'react-router-dom'\r\nimport Header from '../components/Header';\r\nimport Basic from '../components/Patient-Details-Pages/Basic';\r\nimport Farmaka from '../components/Patient-Details-Pages/Farmaka/Farmaka';\r\nimport ClinicalExamination from '../components/Patient-Details-Pages/ClinicalExamination';\r\nimport History from '../components/Patient-Details-Pages/History/History';\r\nimport LabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/LabAnalysis';\r\nimport Visits from '../components/Patient-Details-Pages/Visits/Visits';\r\nimport PatientId from '../components/PatientId';\r\nimport classes from './PatientDetail.module.css';\r\nimport VisitDetail from '../components/Patient-Details-Pages/Visits/VisitDetail';\r\nimport FileEdit from '../components/Patient-Details-Pages/files/FileEdit';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport NewLabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/NewLabAnalysis';\r\nimport Files from '../components/Patient-Details-Pages/NewFiles/Files';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Visit from '../components/Patient-Details-Pages/NewVisits/Visit';\r\n// import NewVisit from '../components/Patient-Details-Pages/Visits/NewVisit';\r\n\r\n\r\nconst PatientDetail = () => {\r\n    const [loadedPatient, setLoadedPatient] = useState({ name: '', sirname: '', age: '', amka: '', fathersName: '', tel: '' });\r\n    const params = useParams();\r\n    const patientId = params.patientId;\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchPatients = async () => {\r\n    //         try {\r\n    //             const responseData = await sendRequest(`http://localhost:5000/patients/${patientId}`, 'GET', null, {\r\n    //                 Authorization: 'Bearer ' + auth.token\r\n    //             });\r\n    //             setLoadedPatient(responseData);\r\n    //         } catch (err) { }\r\n\r\n    //     };\r\n    //     fetchPatients();\r\n    // }, [sendRequest]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {/* <Header patientId={params.patientId} /> */}\r\n            {/* <PatientId patient={loadedPatient} /> */}\r\n            {/* <h5 className={classes.mytitle}>Τα πεδία με <span>* </span>είναι απαραίτητα</h5> */}\r\n\r\n            <Switch>\r\n                <Route path={`/patients/:patientId/basic`} exact><Basic patient={loadedPatient} patientId={patientId} /></Route>\r\n                <Route path={`/patients/:patientId/anamnistiko`}><History patientId={patientId} /></Route>\r\n                <Route path={`/patients/:patientId/farmaka`}><Farmaka /></Route>\r\n                <Route path={`/patients/:patientId/visits`} exact><div><Visit /></div></Route>\r\n                <Route path={`/patients/:patientId/visits/:visitId`} exact><div><Visit /></div></Route>\r\n               \r\n                <Route path={`/patients/:patientId/clinical`}><ClinicalExamination /></Route>\r\n                <Route path={`/patients/:patientId/lab_test`} exact><LabAnalysis patientId={patientId} /></Route>\r\n                <Route path={`/patients/:patientId/aad`} exact><Files patientId={patientId} /></Route>\r\n                <Route path={`/patients/:patientId/aad/:fileId`} ><FileEdit patientId={patientId} /></Route>\r\n                <Route path={`/patients/:patientId/lab_test/:type/:labId`}><NewLabAnalysis patientId={params.patientId} /></Route>\r\n                <Route path={`/patients/:patientId/lab_test/:labId`}><NewLabAnalysis patientId={params.patientId} /></Route>\r\n                {/* <Route path={`/patients/${params.patientId}/visits/:visitId`}><VisitDetail patientId={params.patientId} /></Route> */}\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PatientDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["629","630","631","632","633","634","635","636","637"],"import { Fragment, useCallback } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n// import Card from \"../UI/Card\";\r\nimport ImageUpload from \"../UI/ImageUpload\";\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport moment from 'moment';\r\n\r\n\r\nconst Basic = (props) => {\r\n\r\n    const [loading, SetLoading] = useState(false);\r\n    const [loadedBasics, setLoadedBasics] = useState({ name: '', sirname: '', amka: '', diagnosis: '', tel: '', dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '', fathersName: '', imageName: null })\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const patientContext = useContext(PatientContext)\r\n\r\n    // useEffect(() => {\r\n    //     console.log(patientContext.gender, patientContext.patientId);\r\n    //     console.log(loadedBasics)\r\n    // }, [patientContext,loadedBasics])\r\n\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n\r\n    const [age, setAge] = useState(null);\r\n\r\n\r\n    const fetchPatients = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData)\r\n            setLoadedBasics({ name: responseData.name, sirname: responseData.sirname, amka: responseData.amka, dateOfBirth: responseData.dateOfBirth, diagnosis: responseData.diagnosis, tel: responseData.tel, placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, fathersName: responseData.fathersName, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode,email:responseData.email });\r\n            if (!!responseData.files) {\r\n                setLoadedBasics((prevState) => {\r\n                    return { ...prevState, imageName: responseData.files.split('\\\\')[2] }\r\n                })\r\n            }\r\n            console.log(loadedBasics)\r\n\r\n            setAge(responseData.dateOfBirth);\r\n        } catch (err) { }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (patientContext.patientId !== null) {\r\n            fetchPatients()\r\n        }\r\n    }, [sendRequest, patientContext.patientId]);\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        let patientId = null;\r\n        if (!!formState.inputs.image.value) {\r\n            try {\r\n                console.log(amkaInputRef.current.value)\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                formData.append('uid', auth.userId);\r\n                formData.append('name', nameInputRef.current.value)\r\n                formData.append('sirname', sirnameInputRef.current.value)\r\n                formData.append('dateOfBirth', dateOfBirthInputRef.current.value)\r\n                formData.append('amka', amkaInputRef.current.value)\r\n                formData.append('tel', TelInputRef.current.value)\r\n                formData.append('placeOfBirth', placeOfBirthInputRef.current.value)\r\n                formData.append('job', jobInputRef.current.value)\r\n                formData.append('email', emailInputRef.current.value)\r\n                formData.append('familyStatus', familyStatusInputRef.current.value)\r\n                formData.append('gender', genderInputRef.current.value)\r\n                formData.append('address', addressInputRef.current.value)\r\n                formData.append('area', areaInputRef.current.value)\r\n                formData.append('postalCode', postalCodeRef.current.value)\r\n                formData.append('fathersName', fathersNameInputRef.current.value)\r\n                formData.append('patientId', patientContext.patientId)   ////////\r\n\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/new/basic/image`,\r\n                    'POST',\r\n                    formData\r\n                );\r\n\r\n                patientContext.createPatientId(responseData.patient._id);\r\n                patientContext.changeGender(responseData.patient.gender);\r\n                patientId = responseData.patient._id;\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        } else {\r\n            try {\r\n\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/new/basic`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        uid: auth.userId,\r\n                        name: nameInputRef.current.value,\r\n                        sirname: sirnameInputRef.current.value,\r\n                        dateOfBirth: dateOfBirthInputRef.current.value,\r\n                        amka: amkaInputRef.current.value,\r\n                        tel: TelInputRef.current.value,\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        email: emailInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n                        fathersName: fathersNameInputRef.current.value,\r\n                        patientId: patientContext.patientId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n                );\r\n\r\n                patientContext.createPatientId(responseData.patient._id);\r\n                patientContext.changeGender(responseData.patient.gender);\r\n                patientId = responseData.patient._id;\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        // fetchPatients()\r\n    }\r\n\r\n    const updateHandler = async (event) => {\r\n        event.preventDefault();\r\n        if (!!formState.inputs.image.value) {\r\n            try {\r\n                console.log(formState.inputs.image.value)\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                formData.append('uid', auth.userId);\r\n                formData.append('name', nameInputRef.current.value)\r\n                formData.append('sirname', sirnameInputRef.current.value)\r\n                formData.append('dateOfBirth', dateOfBirthInputRef.current.value)\r\n                formData.append('amka', amkaInputRef.current.value)\r\n                formData.append('tel', TelInputRef.current.value)\r\n                formData.append('placeOfBirth', placeOfBirthInputRef.current.value)\r\n                formData.append('job', jobInputRef.current.value)\r\n                formData.append('email', emailInputRef.current.value)\r\n                formData.append('familyStatus', familyStatusInputRef.current.value)\r\n                formData.append('gender', genderInputRef.current.value)\r\n                formData.append('address', addressInputRef.current.value)\r\n                formData.append('area', areaInputRef.current.value)\r\n                formData.append('postalCode', postalCodeRef.current.value)\r\n                formData.append('fathersName', fathersNameInputRef.current.value)\r\n                formData.append('patientId', patientContext.patientId)   ////////\r\n                console.log(formData)\r\n\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/basic/image`,\r\n                    'PATCH',\r\n                    formData\r\n                );\r\n\r\n                patientContext.changeGender(responseData.patient.gender);\r\n            }\r\n            catch (err) { }\r\n        } else {\r\n            try {\r\n\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/basic`,\r\n                    'PATCH',\r\n                    JSON.stringify({\r\n                        patientId: patientContext.patientId,\r\n                        name: nameInputRef.current.value,\r\n                        sirname: sirnameInputRef.current.value,\r\n                        dateOfBirth: dateOfBirthInputRef.current.value,\r\n                        amka: amkaInputRef.current.value,\r\n                        tel: TelInputRef.current.value,\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        email: emailInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n                        fathersName: fathersNameInputRef.current.value,\r\n\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n                );\r\n\r\n\r\n                patientContext.changeGender(responseData.patient.gender);\r\n            }\r\n            catch (err) { }\r\n        }\r\n        fetchPatients()\r\n        // if (!error) {\r\n        //     history.replace('/patients/new/basic')\r\n        // }\r\n        // history.replace('/patients/new/anamnistiko')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading || loading && <LoadingSpinner asOverlay />}\r\n\r\n            {!isLoading && <form className={classes.basicForm} onSubmit={(!!patientContext.patientId) ? updateHandler : submitHandler}>\r\n\r\n                <Container >\r\n\r\n                    <Row>\r\n                        <Col className={`text-sm-end ${classes.firstInputs}`} xs={6}>\r\n                            <div><label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>&nbsp;<input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={loadedBasics.sirname} /></div>\r\n                            <div> <label htmlFor=\"name\">Όνομα<span>* </span> &nbsp;</label><input ref={nameInputRef} id='name' type='text' required defaultValue={loadedBasics.name} /></div>\r\n                            <div> <label htmlFor=\"amka\"  >ΑΜΚΑ<span>* </span>&nbsp;</label><input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={loadedBasics.amka} required minLength={11} maxLength={11} /></div>\r\n                            <div><label htmlFor=\"fathers-name\">Πατρώνυμο</label>&nbsp;&nbsp;<input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={loadedBasics.fathersName} /></div>\r\n                        </Col>\r\n\r\n                        <Col className=\"text-center\">\r\n                            <ImageUpload center imageSource={(!!loadedBasics.imageName) ? `http://localhost:5000/uploads/images/${loadedBasics.imageName}` : null} onInput={inputHandler} id='image' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"dateOfBirth\">Ημερομηνία Γέννησης</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={dateOfBirthInputRef} id='dateOfBirth' type='date' name=\"dateOfBirth\" defaultValue={moment(age).format('YYYY-MM-DD')} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={loadedBasics.tel} required />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"job\">Επάγγελμα</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <select ref={familyStatusInputRef} id='family_status' name='family_status'>\r\n                                <option value=\"none\" selected disabled hidden>Επιλέξτε</option>\r\n                                <option value='married' selected={loadedBasics.familyStatus === 'married'} >Παντρεμμένος/η</option>\r\n                                <option value='notmarried' selected={loadedBasics.familyStatus === 'notmarried'}>Ανύπνατρος/η</option>\r\n                                <option value='divorced' selected={loadedBasics.familyStatus === 'divorced'}>Διαζευγμένος/η</option>\r\n                            </select>\r\n\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"gender\">Φύλο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <select ref={genderInputRef} name='gender' id='gender' required>\r\n                                <option value=\"\" selected disabled hidden>Επιλέξτε</option>\r\n                                <option value='male' selected={loadedBasics.gender === 'male'}>Άρρεν</option>\r\n                                <option value='female' selected={loadedBasics.gender === 'female'}>Θήλυ</option>\r\n\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"address\">Διεύθυνση</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={addressInputRef} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"location\">Περιοχή</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={areaInputRef} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={postalCodeRef} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={emailInputRef} id='email' type='text' name=\"email\" defaultValue={loadedBasics.email} />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row >\r\n                        <Col  ><SaveButton /></Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </form>}\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js",["638"],"import classes from './GeneralBlood.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Fragment } from 'react';\r\nimport Card from '../../UI/Card';\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport moment from 'moment';\r\nimport SaveButton from '../../UI/SaveButton';\r\n\r\nconst GeneralBlood = (props) => {\r\n    const [loadBlood, setLoadBlood] = useState({ date: '', visitDate: '', kallio: '', natrio: '', asbestio: '', ht: '', mcv: '', sgot: '', b12: '', hb: '', visitId: '' });\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    const dateInputRef = useRef();\r\n    const kallioInputRef = useRef();\r\n    const natrioInputRef = useRef();\r\n    const asbestioInputRef = useRef();\r\n    const htInputRef = useRef();\r\n    const mcvInputRef = useRef();\r\n    const sgotInputRef = useRef();\r\n    const b12InputRef = useRef();\r\n    const hbInputRef = useRef();\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/blood/${params.labId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            props.setLoadVisitId(responseData.visitId)\r\n            setLoadBlood({ date: moment(responseData.date).format('YYYY-MM-DD'), visitDate: moment(responseData.visitDate).format('YYYY-MM-DD'), kallio: responseData.kallio, natrio: responseData.natrio, asbestio: responseData.asbestio, ht: responseData.ht, mcv: responseData.mcv, sgot: responseData.sgot, b12: responseData.b12, hb: responseData.hb, visitId: responseData.visitId });\r\n        } catch (err) { console.log(err) }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (params.labId !== 'new' && params.type === 'blood') {\r\n            fetchVisit()\r\n        }\r\n    }, [props.patientId, auth.token]);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(dateInputRef.current.value)\r\n        if (params.labId === 'new' || loadBlood.date === '') {   //neo document giati date required ara den yparxei eggrafi gia ayto to typo eksetasis\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests`, 'POST',\r\n                    JSON.stringify({\r\n                        type: 'blood',\r\n                        date: dateInputRef.current.value,\r\n                        visitId: props.visitId,\r\n                        kallio: kallioInputRef.current.value,\r\n                        natrio: natrioInputRef.current.value,\r\n                        asbestio: asbestioInputRef.current.value,\r\n                        ht: htInputRef.current.value,\r\n                        mcv: mcvInputRef.current.value,\r\n                        sgot: sgotInputRef.current.value,\r\n                        b12: b12InputRef.current.value,\r\n                        hb: hbInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n        else {\r\n            try {\r\n\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/${params.labId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        type: 'blood',\r\n                        date: dateInputRef.current.value,\r\n                        kallio: kallioInputRef.current.value,\r\n                        natrio: natrioInputRef.current.value,\r\n                        asbestio: asbestioInputRef.current.value,\r\n                        ht: htInputRef.current.value,\r\n                        mcv: mcvInputRef.current.value,\r\n                        sgot: sgotInputRef.current.value,\r\n                        b12: b12InputRef.current.value,\r\n                        hb: hbInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            {!isLoading && <Card>\r\n                <form className={classes.bloodForm} onSubmit={submitHandler}>\r\n                    <Container >\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <span>Πεδία</span>\r\n                                <span>Τιμές(mg)</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ημ/νία</label>\r\n                                <input ref={dateInputRef} name='date' type='date' required defaultValue={loadBlood.date} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <label>Κάλλιο</label>\r\n                                <input type='number' name='kallio' ref={kallioInputRef} defaultValue={loadBlood.kallio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Νάτριο</label>\r\n                                <input type='number' name='natrio' ref={natrioInputRef} defaultValue={loadBlood.natrio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ασβέστιο</label>\r\n                                <input type='number' name='asbestio' ref={asbestioInputRef} defaultValue={loadBlood.asbestio} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ht</label>\r\n                                <input type='number' name='ht' ref={htInputRef} defaultValue={loadBlood.ht} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>MCV</label>\r\n                                <input type='number' name='mcv' ref={mcvInputRef} defaultValue={loadBlood.mcv} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>SGOT</label>\r\n                                <input type='number' name='sgot' ref={sgotInputRef} defaultValue={loadBlood.sgot} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>B12</label>\r\n                                <input type='number' name='b12' ref={b12InputRef} defaultValue={loadBlood.b12} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Hb</label>\r\n                                <input type='number' name='hb' ref={hbInputRef} defaultValue={loadBlood.hb} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n\r\n                    </Container>\r\n                </form>\r\n            </Card>}\r\n\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default GeneralBlood;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js",["639","640"],"import { Fragment } from 'react';\r\nimport classes from './Parathyro.module.css';\r\nimport Card from '../../UI/Card';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport moment from 'moment';\r\nimport SaveButton from '../../UI/SaveButton';\r\n\r\n\r\nconst Parathyro = (props) => {\r\n    const [loadParathyro, setLoadParathyro] = useState({ date: '', visitDate: '', pth: '', vitd: '', ca: '', p: '', alvoumini: '', kreatanini: '' });\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, isLoading, sendRequest } = useHttpClient();\r\n\r\n    const dateInputRef = useRef();\r\n    const visitDateInputRef = useRef();\r\n    const pthInputRef = useRef();\r\n    const vitdInputRef = useRef();\r\n    const caInputRef = useRef();\r\n    const pInputRef = useRef();\r\n    const alvouminiInputRef = useRef();\r\n    const kreataniniInputRef = useRef();\r\n\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/parathyro/${params.labId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadParathyro({ date: moment(responseData.date).format('YYYY-MM-DD'), visitDate: moment(responseData.visitDate).format('YYYY-MM-DD'), pth: responseData.pth, vitd: responseData.vitd, ca: responseData.ca, p: responseData.p, alvoumini: responseData.alvoumini, kreatanini: responseData.kreatanini });\r\n        } catch (err) { }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (params.labId !== 'new' && params.type === 'parathyro') {\r\n            fetchVisit()\r\n        }\r\n    }, [props.patientId, auth.token]);\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        if (params.labId === 'new' || loadParathyro.date === '') {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests`, 'POST',\r\n                    JSON.stringify({\r\n                        type: 'parathyro',\r\n                        date: dateInputRef.current.value,\r\n                        pth: pthInputRef.current.value,\r\n                        vitd: vitdInputRef.current.value,\r\n                        ca: caInputRef.current.value,\r\n                        p: pInputRef.current.value,\r\n                        alvoumini: alvouminiInputRef.current.value,\r\n                        kreatanini: kreataniniInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/${params.labId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        type: 'parathyro',\r\n                        date: dateInputRef.current.value,\r\n                        pth: pthInputRef.current.value,\r\n                        vitd: vitdInputRef.current.value,\r\n                        ca: caInputRef.current.value,\r\n                        p: pInputRef.current.value,\r\n                        alvoumini: alvouminiInputRef.current.value,\r\n                        kreatanini: kreataniniInputRef.current.value\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            <Card>\r\n                <form className={classes.thyroForm} onSubmit={submitHandler}>\r\n\r\n                    <Container >\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <span>Πεδία</span>\r\n                                <span>Τιμές(mg)</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ημ/νία</label>\r\n                                <input ref={dateInputRef} name='date' type='date' defaultValue={loadParathyro.date} required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row >\r\n                            <Col className={classes.myCol}>\r\n                                <label>PTH</label>\r\n                                <input type='number' ref={pthInputRef} name='pth' defaultValue={loadParathyro.pth} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>vitD</label>\r\n                                <input type='number' ref={vitdInputRef} name='vitd' defaultValue={loadParathyro.vitd} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Ca</label>\r\n                                <input type='number' ref={caInputRef} name='ca' defaultValue={loadParathyro.ca} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>P</label>\r\n                                <input type='number' ref={pInputRef} name='p' defaultValue={loadParathyro.p} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Αλβουμίνη</label>\r\n                                <input type='number' ref={alvouminiInputRef} name='alvoumini' defaultValue={loadParathyro.alvoumini} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='justify-content-center '>\r\n                            <Col className={classes.myCol}>\r\n                                <label>Κρεατινίνη</label>\r\n                                <input ref={kreataniniInputRef} type='number' name='kreatinini' defaultValue={loadParathyro.kreatanini} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n\r\n                    </Container>\r\n                </form>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Parathyro;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js",["641"],"import ListsHeader from \"../../ListsHeader\";\r\nimport classes from './Visits.module.css';\r\nimport { Container } from \"react-bootstrap\";\r\nimport VisitsList from \"./VisitsList\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\n\r\n\r\nconst Visits = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedVisits, setLoadedVisits] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [visitToDelete, setVisitToDelete] = useState();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchHistory();\r\n    }, [sendRequest]);\r\n\r\n    function deleteHandler(visitId) {\r\n        setDeleteModalIsOpen(true);\r\n        setVisitToDelete(visitId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    async function deleteVisitHandler() {\r\n        const deletedVisit = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${visitToDelete}`, 'DELETE', null,\r\n            {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n        setLoadedVisits(prevVisits => {\r\n            return prevVisits.filter(visit => visit._id !== deletedVisit._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container fluid className={classes.visits}>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!isLoading && <Card className={classes.cardsVisit}>\r\n                <ListsHeader type='Τύπος Επίσκεψης' date='Ημερομηνία' diagnosis='Διάγνωση' />\r\n                {!isLoading && <VisitsList visits={loadedVisits} onDelete={deleteHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deleteVisitHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\" />}\r\n                {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n            </Card>}\r\n            <Button />\r\n        </Container>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Visits;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js",["642","643","644"],"import classes from './VisitDetail.module.css';\r\nimport Card from \"../../UI/Card\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BMI from './BMI';\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport moment from 'moment';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport { Fragment } from 'react';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst VisitDetail = (props) => {\r\n    // const [loadVisit,setLoadVisit]=useState({date:'',diagnosis:'',geniki_eikona,piesi,sfiksis,weight,height,test_volume,others})\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const location = useLocation();\r\n    const path = (params.visitId !== 'new') ? location.pathname.split('/visits')[0] + '/lab_test' : location.pathname.split('/visits')[0] + '/lab_test/new';\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadVisit, setLoadVisit] = useState({ date: '', diagnosis: '', geniki_eikona: '', piesi: '', sfiksis: '', weight: '', height: '', test_volume: '', others: '', smkt: '', tekt: '' });\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const createVisitId = async () => {\r\n            const visitId = await sendRequest(`http://localhost:5000/patients/visits/createVisitId`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadVisit({ ...loadVisit, visitId: visitId })\r\n        }\r\n        createVisitId();\r\n    }, []);\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData._id)\r\n            setLoadVisit({ diagnosis: responseData.diagnosis, date: moment(responseData.date).format('YYYY-MM-DD'), tekt: responseData.tekt, smkt: responseData.smkt, geniki_eikona: responseData.geniki_eikona, piesi: responseData.piesi, sfiksis: responseData.sfiksis, weight: responseData.weight, height: responseData.height, test_volume: responseData.test_volume, others: responseData.others, visitId: responseData._id });\r\n        } catch (err) { }\r\n        console.log(loadVisit.visitId)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.visitId !== 'new') {\r\n            fetchVisit();\r\n        }\r\n    }, []);\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.visitId === 'new') {\r\n            console.log(loadVisit.visitId)\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'POST',\r\n                    JSON.stringify({\r\n                        id: loadVisit.visitId,\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                        uid: auth.userId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n            <Container fluid className={classes.visitDetail}>\r\n                <Card className={classes.cardsNewVisit}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row className={` justify-content-md-start`}>\r\n                            <Col className={classes.label} lg='2'><h5>Στοιχεία Επίσκεψης</h5></Col>\r\n\r\n                            <Col className={classes.label} lg='2'><h5><Link to={`${path}?visitId=${loadVisit.visitId}`}>Εργαστηριακές</Link></h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Διάγνωση</label>\r\n                                <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Ημερομηνία*</label>\r\n                                <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={loadVisit.date} required />\r\n                                {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Γενική εικόνα</label>\r\n                                <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={classes.multiInputs}>\r\n                            <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                            <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                            <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                            <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                            <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                                <select ref={tektInputRef} name='tekt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                        <Row >\r\n                            <Col sm='1' className='text-md-end'>\r\n                                <label htmlFor=\"others\">Άλλα</label>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col><SaveButton /></Col>\r\n                        </Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default VisitDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js",["645","646"],"import classes from './NewLabAnalysis.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useState, useReducer, useEffect } from 'react';\r\nimport GeneralBlood from './GeneralBlood';\r\nimport Thyro from './Thyro';\r\nimport Ypofysi from './Ypofysi';\r\nimport Parathyro from './Parathyro';\r\nimport NewLabSelect from './NewLabSelect';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst defaultState = {\r\n    blood: false,\r\n    thyro: false,\r\n    parathyro: false,\r\n    ypofysi: false,\r\n    epinefridio: false,\r\n    eggs: false,\r\n    balls: false\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'blood':\r\n            return { ...defaultState, blood: true };\r\n        case 'thyro':\r\n            return { ...defaultState, thyro: true };\r\n        case 'parathyro':\r\n            return { ...defaultState, parathyro: true };\r\n        case 'epinefridia':\r\n            return { ...defaultState, epinefridia: true };\r\n        case 'ypofysi':\r\n            return { ...defaultState, ypofysi: true };\r\n        case 'eggs':\r\n            return { ...defaultState, eggs: true };\r\n        case 'balls':\r\n            return { ...defaultState, balss: true };\r\n\r\n    }\r\n}\r\n\r\n\r\nconst NewLabAnalysis = (props) => {\r\n    const [visitId, setVisitId] = useState();\r\n    const [loadVisitId, setLoadVisitId] = useState('');\r\n    const type = useParams().type;\r\n    const defaultState = {\r\n        blood: false,\r\n        thyro: false,\r\n        parathyro: false,\r\n        ypofysi: false,\r\n        epinefridio: false,\r\n        eggs: false,\r\n        balls: false\r\n    }\r\n    const [state, dispatch] = useReducer(reducer, defaultState)\r\n\r\n    useEffect(() => {\r\n        if (typeof (type) === 'undefined') {\r\n            dispatch({ type: 'blood' })\r\n        } else {\r\n            dispatch({ type: type })\r\n        }\r\n    }, [type])\r\n\r\n\r\n    function changeVisitDateHandler(visitId) {\r\n        setVisitId(visitId);\r\n    }\r\n\r\n\r\n    function changeHandler(event) {\r\n        const selectValue = event.target.value;\r\n        switch (selectValue) {\r\n            case 'blood':\r\n                return dispatch({ type: 'blood' });\r\n            case 'thyro':\r\n                return dispatch({ type: 'thyro' });\r\n            case 'parathyro':\r\n                return dispatch({ type: 'parathyro' });\r\n            case 'epinefridia':\r\n                return dispatch({ type: 'epinefridia' });\r\n            case 'ypofysi':\r\n                return dispatch({ type: 'ypofysi' });\r\n            case 'eggs':\r\n                return dispatch({ type: 'eggs' });\r\n            case 'balls':\r\n                return dispatch({ type: 'balls' });\r\n            case '':\r\n                return dispatch({ type: '' });\r\n        };\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.mylab}>\r\n            <Row>\r\n                <Col>\r\n                    <NewLabSelect clasname={classes.myselect} loadVisitId={loadVisitId} patientId={props.patientId} changeHandler={changeVisitDateHandler} />\r\n                </Col>\r\n\r\n                <Col>\r\n                    <label className={classes.myselect} htmlFor='labifo'>Τύπος Εξέτασης</label>\r\n                    <select onChange={changeHandler} id='labinfo'>\r\n                        <option value='blood' selected={type === 'blood'}>Γενική Αίματος</option>\r\n                        <option value='thyro' selected={type === 'thyro'} >Θυρεοειδής</option>\r\n                        <option value='parathyro' selected={type === 'parathyro'}>Παραθυρεοειδής</option>\r\n                        <option value='ypofysi' selected={type === 'ypofysi'}>Υπόφυση</option>\r\n                        <option value='epinefridia' selected={type === 'epinefridia'}>Επινεφρίδια</option>\r\n                        <option value='eggs' selected={type === 'eggs'}>Ωοθήκες</option>\r\n                        <option value='balls'>Όρχεις</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {state.blood && <GeneralBlood setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.thyro && <Thyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.ypofysi && <Ypofysi setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.parathyro && <Parathyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n                {state.epinefridia && <Parathyro setLoadVisitId={setLoadVisitId} patientId={props.patientId} visitId={visitId} />}\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default NewLabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js",["647"],"import { Container } from 'react-bootstrap';\r\nimport classes from './LabAnalysis.module.css';\r\nimport ListsHeader from '../../ListsHeader';\r\nimport LabsList from './LabsList';\r\nimport Card from \"../../UI/Card\";\r\nimport Button from '../../UI/Button';\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext, Fragment } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst LabAnalysis = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedLabs, setLoadedLabs] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [labTestToDelete, setLabTestToDelete] = useState({ id: '', type: '' });\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('visitId');\r\n\r\n    useEffect(() => {\r\n        const fetchLabTests = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/patients/${props.patientId}/lab_tests?visitId=${query}`\r\n                    , 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedLabs(responseData);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchLabTests();\r\n    }, [sendRequest, query]);\r\n\r\n    function deleteHandler(id, type) {\r\n        setDeleteModalIsOpen(true);\r\n        setLabTestToDelete({ id: id, type: type });\r\n    }\r\n\r\n    async function deleteLabTestHandler() {\r\n        let deletedLabTest\r\n        if (labTestToDelete.type === 'blood') {\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/blood/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n        }\r\n        else if (labTestToDelete.type === 'parathyro') {\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/parathyro/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n\r\n        }\r\n        setLoadedLabs(prevTests => {\r\n            return prevTests.filter(test => test._doc._id !== deletedLabTest._id);\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {!isLoading&&<Container fluid className={classes.labAnalysis}>\r\n                <Card className={classes.cardLab}>\r\n                    <ListsHeader type='Τύπος Εξέτασης' date='Ημερομηνία Εξέτασης' diagnosis='Ημερομηνία Επίσκεψης' />\r\n                    <LabsList labs={loadedLabs} onDelete={deleteHandler} visitId={query}/>\r\n                    {deleteModalIsOpen && <DeleteModal onConfirm={deleteLabTestHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\" />}\r\n                    {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n                </Card>\r\n                <Button />\r\n\r\n            </Container>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["648","649"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from './EditPatient.module.css';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst EditPatient = (props) => {\r\n\r\n    const [loadedPatient, setLoadedPatient] = useState({ sirname: \"\", name: \"\", fathersName: \"\", dateOfBirth: \"\", tel: \"\", amka: \"\" });\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const dateOfBirthInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [type, setType] = useState('text');\r\n\r\n    const onFocus = (event) => {\r\n        setType('date')\r\n    }\r\n    const onBlur = (event) => {\r\n        setType('text')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient({ sirname: data.sirname, name: data.name, diagnosis: data.diagnosis, dateOfBirth: moment(data.dateOfBirth).format('YYYY-MM-DD'), tel: data.tel, amka: data.amka })\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n    console.log((loadedPatient.dateOfBirth === 'Invalid date'))\r\n\r\n\r\n\r\n\r\n\r\n    // fetch(`http://localhost:5000/patients/${props.patientId}`\r\n    // ).then((response) => {\r\n    //     return response.json()\r\n    // })\r\n    //     .then((data) => {\r\n    //         setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err.message);\r\n    //     });\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            diagnosis: diagnosisInputRef.current.value,\r\n            dateOfBirth: dateOfBirthInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value\r\n        };\r\n        const response = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'PATCH', JSON.stringify(updatedPatient),\r\n            {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_modal\">\r\n            <div className={classes.form_style_5}>\r\n                <form onSubmit={submitHandler}>\r\n                    <fieldset>\r\n                        {!!error && <ErrorModal error={error} onClose={clearError} />}\r\n                        <legend>Patient Info</legend>\r\n                        <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" defaultValue={loadedPatient.sirname} required />\r\n                        <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" defaultValue={loadedPatient.name} required />\r\n                        <input ref={diagnosisInputRef} type=\"text\" name=\"diagnosis\" placeholder=\"Διάγνωση \" defaultValue={loadedPatient.diagnosis} />\r\n                        <input ref={dateOfBirthInputRef} type={type} max={moment(new Date()).format('YYYY-MM-DD')} onBlur={onBlur} onFocus={onFocus} name=\"dateOfBirth\" defaultValue={(loadedPatient.dateOfBirth !== 'Invalid date') ? loadedPatient.dateOfBirth : 'Ημερομηνία Γέννησης'} />\r\n                        <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" defaultValue={loadedPatient.tel} required />\r\n                        <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" defaultValue={loadedPatient.amka} />\r\n                        <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClose}>Cancel</button>\r\n                        <button className=\"btn\" type='submit'>Edit </button>\r\n\r\n\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPatient;","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",["650","651","652","653"],"import './Auth.css';\r\nimport Card from '../components/UI/Card';\r\nimport Input from './Input';\r\nimport Button from './Button';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../components/UI/util/validators';\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useContext, Fragment } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nimport Notifications, {notify} from 'react-notify-toast';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [emailLoading, setEmailLoading] = useState(true);\r\n    const [sendingEmail, setSendingEmail] = useState(false);\r\n\r\n    // componentDidMount = () => {\r\n    //     fetch(`${API_URL}/wake-up`)\r\n    //         .then(res => res.json())\r\n    //         .then(() => {\r\n    //             setEmailLoading(false);\r\n    //         })\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: {\r\n                        value: '',\r\n                        isValid: false\r\n                    }\r\n                },\r\n                false\r\n            );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        // if (!isLoginMode) {\r\n        //     setSendingEmail(true);\r\n        //     const data=sendRequest('http://localhost:5000/email', 'POST',\r\n        //         JSON.stringify({ email: formState.inputs.email.value }), {\r\n        //         'Content-Type': 'application/json'\r\n        //     });\r\n        //     setSendingEmail(false);\r\n        //     notify(data.msg)\r\n\r\n        // }\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest('http://localhost:5000/users/login', 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }), {\r\n                    'Content-Type': 'application/json'\r\n                });\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) { }\r\n\r\n        } else {\r\n            try {\r\n                const responseData = await sendRequest('http://localhost:5000/users/signup', 'POST',\r\n                    JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    });\r\n                console.log(responseData)\r\n                notify.show(responseData.msg,'warning',5000,{background:'blue',color:'white'})\r\n                // auth.login(responseData.userId, responseData.token);\r\n            } catch (err) { }\r\n        }\r\n        // try {\r\n        //         const responseData = await sendRequest('http://localhost:5000/users/signup', 'POST',\r\n        //             JSON.stringify({\r\n        //                 name: formState.inputs.name.value,\r\n        //                 email: formState.inputs.email.value,\r\n        //                 password: formState.inputs.password.value\r\n        //             }),\r\n        //             {\r\n        //                 'Content-Type': 'application/json'\r\n        //             });\r\n        //         notify(responseData.msg)\r\n        //         console.log(responseData)\r\n        //         auth.login(responseData.userId, responseData.token);\r\n        //     } catch (err) { }\r\n        // }\r\n\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Notifications/>\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Είσοδος</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Όνομα\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter a name.\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-Mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Κωδικός\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid password, at least 5 characters.\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'Σύνδεση' : 'Εγγραφή'}\r\n                    </Button>\r\n                </form>\r\n                <span className='button_span'><Button inverse onClick={switchModeHandler}>\r\n                    Εναλλαγή σε {isLoginMode ? 'Εγγραφή' : 'Σύνδεση'}\r\n                </Button></span>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js",["654"],"import classes from './NewLabSelect.module.css';\r\n\r\nimport { Fragment } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport moment from 'moment';\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NewLabSelect = (props) => {\r\n    const [loadVisits, setLoadVisits] = useState([]);\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get('visitId');\r\n    console.log(props.loadVisitId)\r\n    console.log(query)\r\n\r\n    useEffect(() => {\r\n        const fetchVisitDates = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits.dates`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchVisitDates();\r\n    }, [sendRequest]);\r\n\r\n\r\n    function changeHandler(event) {\r\n        props.changeHandler(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner />}\r\n            <label htmlFor=\"visit\" className={classes.label}>Επίσκεψη</label>\r\n            <select id='visit' name='visitDate' className={classes.select} onChange={changeHandler}>\r\n                <option value={0} selected disabled hidden>Select an Option</option>\r\n                {loadVisits.length === 0 && <option disabled>No visits</option>}\r\n                {loadVisits.map((visit) => {\r\n                    return (<option value={visit._id} key={visit._id} selected={visit._id === props.loadVisitId}>{moment(visit.date).format('DD/MM/YYYY')}</option>);\r\n                })}\r\n            </select>\r\n        </Fragment>);\r\n}\r\nexport default NewLabSelect;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js",["655","656"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js",[],["657","658"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js",["659"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport DeleteButton from '../../UI/DeleteButton';\r\nimport moment from 'moment';\r\nimport classes from './FilesListItem.module.css';\r\n\r\nconst FilesListItem = (props) => {\r\n    const name = props.fileName.split('\\\\')[2];\r\n    const extension = name.split('.')[1]\r\n\r\n    const location = useLocation();\r\n    function deleteHandler() {\r\n        props.onDelete(name);\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"text-sm-end\" xs='1'><img className={classes.images} src={`http://localhost:5000/uploads/images/${name}`} /></Col>\r\n            <Col className='text-sm-end' xs='5'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{name} </span></Link></Col>\r\n            <Col className='text-sm-end'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{moment(props.date).format('DD/MM/YYYY')} </span></Link></Col>\r\n            <Col className='text-sm-end'> <Link to={`${location.pathname}/${name}`} style={{ textDecoration: 'none', color: 'black' }}><span>{extension} </span></Link></Col>\r\n            <Col className='text-end' sm='2'><DeleteButton onClick={deleteHandler} /></Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FilesListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js",["660","661"],"\r\nimport React, { useRef, useState, useEffect, Fragment } from 'react';\r\n\r\nimport Button from '../../authentication/Button';\r\nimport Card from './Card';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  console.log(props.imageSource)\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState(props.imageSource);\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {  //mporw na dialexw mono ena arxeio!\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      {/* <Fragment>\r\n       <Card className='imageUploadCard'> */}\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"  //acceptable file types\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Παρακαλώ διαλέξτε μια φωτογραφία του ασθενή.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          {(!!props.imageSource) ? \"Αλλάξτε Φωτογραφία\" : \"Επιλέξτε Φωτογραφία\"}\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n      {/* </Card>\r\n     </Fragment> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js",["662","663","664","665","666","667","668"],"import classes from './FileEdit.module.css';\r\nimport { Fragment } from \"react\";\r\nimport ImageUpload from \"../../UI/ImageUpload\";\r\nimport { useForm } from \"../../../hooks/form-hook\";\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../UI/Card\";\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst FileEdit = (props) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const params = useParams();\r\n    const [loadedFile, setLoadedFile] = useState({ pathname: '' })\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n    // const fetchFile = async () => {\r\n    //     try {\r\n    //         const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files/${params.fileId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n    //         setLoadVisit({});\r\n    //     } catch (err) { }\r\n\r\n    // };\r\n    // useEffect(()=>{\r\n    //     if(params.fileId!=='new'){\r\n    //         fetchFile()\r\n    //     }\r\n\r\n    // },[])\r\n\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.fileId === 'new') {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files`, 'POST',\r\n                    formData\r\n                )\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }else{\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files/${params.fileId}`, 'PATCH',\r\n                    formData\r\n                )\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Container fluid className={classes.fileEdit}>\r\n                <Card className={classes.cardFiles}>\r\n                    <form onSubmit={submitHandler}>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ImageUpload imageSource={(params.fileId !== 'new') ? `http://localhost:5000/uploads/images/${params.fileId}` : null} center id='image' onInput={inputHandler} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default FileEdit;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointment.js",["669","670"],"\r\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\r\nimport { Scheduler, DateNavigator, Toolbar, ViewSwitcher, DayView, WeekView, MonthView, Appointments, AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { useState, useEffect, useContext, Fragment } from 'react';\r\n\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\n\r\nimport classes from './Appointments.module.css';\r\nimport Card from '../components/UI/Card';\r\n\r\n\r\n\r\n\r\n\r\nconst Appointment = () => {\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [schedulerData, setSchedularData] = useState([\r\n        { id: 1, startDate: '2022-06-29T09:45', endDate: '2022-06-29T11:00', title: 'Meeting', notes: '' },\r\n        { id: 2, startDate: '2022-06-28T15:00', endDate: '2022-06-28T13:30', title: 'Go to a gym', notes: '' },\r\n    ]);\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                if (responseData.length > 0) {\r\n                    responseData.map(appointment => {\r\n                        return appointment.id = appointment._id;\r\n                    });\r\n                }\r\n                setSchedularData(responseData);\r\n\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchAppointments();\r\n    }, [sendRequest]);\r\n\r\n\r\n    const commitChanges = async ({ added, changed, deleted }) => {\r\n    \r\n        if (typeof (added) !== 'undefined') {\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'POST',\r\n                JSON.stringify({\r\n                    startDate: added.startDate,\r\n                    endDate: added.endDate,\r\n                    title: added.title,\r\n                    notes: added.notes\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n\r\n            setSchedularData(state => {\r\n                return [...state, responseData]\r\n            })\r\n        }\r\n        if (typeof (changed) !== 'undefined') {\r\n            let appId;\r\n            let startDate;\r\n            let endDate;\r\n            let title;\r\n            let notes;\r\n            for (let i in changed) {\r\n                appId = i;\r\n                const temp = changed[i];\r\n                title = temp.title;\r\n                startDate = temp.startDate;\r\n                endDate = temp.endDate;\r\n                notes = temp.notes\r\n            };\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}`, 'PATCH',\r\n                JSON.stringify({\r\n                    appId,\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    title: title,\r\n                    notes: notes\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setSchedularData((state) => {\r\n                return state.map((appointment) => {\r\n                    return changed[appointment.id] ? responseData : appointment;\r\n                });\r\n            });\r\n\r\n        }\r\n        if (typeof (deleted) !== 'undefined') {\r\n            const responseData = await sendRequest(`http://localhost:5000/appointments/${auth.userId}/${deleted}`, 'DELETE',\r\n                null, {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            setSchedularData((state) => {\r\n                return state.filter(appointment => {\r\n                    return appointment.id !== deleted;\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.appointments}>\r\n                <Scheduler data={schedulerData} >\r\n                    <ViewState defaultCurrentViewName='Week' />\r\n                    <EditingState onCommitChanges={commitChanges} />\r\n                    <IntegratedEditing />\r\n                    <DayView />\r\n                    <WeekView startDayHour={8} endDayHour={20} />\r\n                    <MonthView startDayHour={8} endDayHour={20}/>\r\n                    <Toolbar />\r\n                    <DateNavigator />\r\n                    <ViewSwitcher />\r\n                    <Appointments />\r\n                    <AppointmentForm />\r\n                </Scheduler>\r\n            </Card>\r\n        </Fragment>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Appointment;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Statistics.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientSearch.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\History.js",["671","672","673","674"],"import { Container, Col, Row } from \"react-bootstrap\";\r\nimport './History.css';\r\nimport SaveButton from '../../UI/SaveButton'\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useState, useEffect, useRef, useContext, Fragment } from \"react\";\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport Collapsible from 'react-collapsible';\r\nimport Conditions from \"./Atomiko/Conditions\";\r\nimport Allergies from \"./Atomiko/Allergies/Allergies\";\r\nimport Klironomiko from \"./Klironomiko/Klironomiko\";\r\nimport Surgeries from \"./Surgeries/Surgeries\";\r\nimport Pregnacy from \"./Gynaikologiko/Pregnacy\";\r\nimport Card from \"../../UI/Card\";\r\nimport classes from './Gynaikologiko/Gynaikologiko.module.css'\r\nimport Gynaikologiko from \"./Gynaikologiko/Gynaikologiko\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst History = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n\r\n    const [conditionsList, setConditionsList] = useState([]);\r\n    const [allergiesList, setAllergiesList] = useState([]);\r\n    const [cleronomicalList, setCleronomicalList] = useState([]);\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    const [pregnacyList, setPregnaciesList] = useState([]);\r\n    const [gynaikologikoList, setGynaikologikoList] = useState({ emminarxi: null, stability: null, cycle_duration: null, period_duration: null, maieutiko: [], adk: null, tdk: null })\r\n\r\n    const [stability, setStability] = useState(true);\r\n\r\n    const paramsId = useParams().patientId;\r\n\r\n\r\n    const stabilityChangeHandler = (event) => {\r\n        setStability(event.target.value === 'true')\r\n\r\n    }\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const emminarxiInputRef = useRef();\r\n    const stabilityInputRef = useRef();\r\n    const emminopausiInputRef = useRef();\r\n    const period_durationInputRef = useRef();\r\n    const cycle_durationInputRef = useRef();\r\n    const adkInputRef = useRef();\r\n    const tdkInputRef = useRef();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/anamnistiko/female`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                setConditionsList(responseData.conditionsList);\r\n                setSurgeriesList(responseData.surgeries);\r\n                setPregnaciesList(responseData.maieutiko);\r\n                setCleronomicalList(responseData.cleronomicalList)\r\n                responseData.allergies.map(allergy => {\r\n                    setAllergiesList((prevState) => {\r\n                        return [...prevState, allergy]\r\n                    });\r\n                })\r\n\r\n                setGynaikologikoList(responseData.gynaikologiko)\r\n                console.log(responseData)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.anamnistikoId) {\r\n            fetchHistory();\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const addConditionHandler = (condition) => {\r\n        setConditionsList((prevState) => {\r\n            return [...prevState, condition];\r\n        })\r\n\r\n    }\r\n\r\n    const removeConditionHandler = (conditionIdToDelete) => {\r\n        setConditionsList((prevState) => {\r\n            return prevState.filter(condition => {\r\n                return condition._id !== conditionIdToDelete\r\n            })\r\n        })\r\n    }\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        try {\r\n            const responseDate = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/anamnistiko`, 'POST',\r\n                JSON.stringify({\r\n                    allergies: allergiesList,\r\n                    cleronomical: cleronomicalList,\r\n                    conditions: conditionsList,\r\n                    surgeries: surgeriesList,\r\n                    gynaikologiko: {\r\n                        emminarxi: emminarxiInputRef.current.value,\r\n                        stability: stabilityInputRef.current.value,\r\n                        cycle_duration: cycle_durationInputRef.current.value,\r\n                        period_duration: period_durationInputRef.current.value,\r\n                        emminopausi: emminopausiInputRef.current.value,\r\n                        pregnacyList: pregnacyList,\r\n                        adk: adkInputRef.current.checked,\r\n                        tdk: tdkInputRef.current.checked,\r\n                    }\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n            console.log(responseDate)\r\n            patientContext.createAnamnistikoId(responseDate._id)\r\n\r\n        } catch (err) { }\r\n    }\r\n\r\n    const updateHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/anamnistiko`, 'PATCH',\r\n                JSON.stringify({\r\n                    allergies: allergiesList,\r\n                    cleronomical: cleronomicalList,\r\n                    conditions: conditionsList,\r\n                    surgeries: surgeriesList,\r\n                    gynaikologiko: {\r\n                        emminarxi: emminarxiInputRef.current.value,\r\n                        stability: stabilityInputRef.current.value,\r\n                        cycle_duration: cycle_durationInputRef.current.value,\r\n                        period_duration: period_durationInputRef.current.value,\r\n                        emminopausi: emminopausiInputRef.current.value,\r\n                        pregnacyList: pregnacyList,\r\n                        adk: adkInputRef.current.checked,\r\n                        tdk: tdkInputRef.current.checked,\r\n                    }\r\n\r\n\r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n        } catch (err) { }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <form className='history' onSubmit={(!patientContext.anamnistikoId) ? submitHandler : updateHandler}>\r\n                <Container fluid>\r\n                    <Collapsible trigger='Ατομικό>' triggerWhenOpen={'Ατομικό^'} transitionTime={200}>\r\n                        <Conditions conditionsList={conditionsList} setConditionsList={setConditionsList} addConditionHandler={addConditionHandler} removeConditionHandler={removeConditionHandler} />\r\n                        <Allergies allergiesList={allergiesList} setAllergiesList={setAllergiesList} />\r\n                    </Collapsible>\r\n                    <Collapsible trigger='Κληρονομικό' transitionTime={200}>\r\n                        <Klironomiko cleronomicalList={cleronomicalList} setCleronomicalList={setCleronomicalList} />\r\n                    </Collapsible>\r\n                    <Collapsible trigger='Χειρουργεία' transitionTime={200}>\r\n                        <Surgeries surgeriesList={surgeriesList} setSurgeriesList={setSurgeriesList} />\r\n                    </Collapsible>\r\n                    <Collapsible trigger='Γυναικολογικό' transitionTime={200}>\r\n                        <Container>\r\n                            <Row><Col className=\"text-center\"><div ><h4>Έμμηνος Ρύση</h4></div></Col></Row>\r\n                            <Card className={classes.erCard}>\r\n                                <Row>\r\n                                    <Col sm lg=\"2\" className='text-end'><label>Εμμηναρχή</label></Col>\r\n                                    <Col sm lg=\"2\" className='text-start'><input type='number' placeholder=\"ηλικία σε έτη\" ref={emminarxiInputRef} defaultValue={gynaikologikoList.emminarxi} /></Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className='text-end'><label>Σταθερότητα</label></Col>\r\n                                    <Col>\r\n                                        <select name='stability' onChange={stabilityChangeHandler} ref={stabilityInputRef}>\r\n                                            <option value={false}>ασταθής</option>\r\n                                            <option value={true} selected >σταθερή</option>\r\n                                        </select>\r\n                                    </Col>\r\n                                    <Col className='text-end'><label>Διάρκεια Κύκλου</label></Col>\r\n                                    <Col><input type='number' disabled={stability === false} ref={cycle_durationInputRef} defaultValue={!!(gynaikologikoList.cycle_duration) ? gynaikologikoList.cycle_duration : 28} /></Col>\r\n                                    <Col className='text-end'><label>Διάρκεια Περιόδου</label></Col>\r\n                                    <Col ><input type='number' ref={period_durationInputRef} defaultValue={gynaikologikoList.period_duration} /></Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col sm={2} className='text-end'><label>Εμμηνόπαυση</label></Col>\r\n                                    <Col sm={2} className='text-start'><input type='number' placeholder=\"ηλικία σε έτη\" ref={emminopausiInputRef} defaultValue={gynaikologikoList.emminopausi} /></Col>\r\n                                </Row>\r\n                            </Card>\r\n                            <Row><Col className=\"text-center\"><div ><h4>Μαιευτικό Ιστορικό</h4></div></Col></Row>\r\n\r\n                            <Pregnacy pregnacyList={pregnacyList} setPregnaciesList={setPregnaciesList} />\r\n                            <Card className={classes.gynaikologikoCard}>\r\n                                <Row>\r\n                                    <Col sm={1} className='text-end'><input type='checkbox' ref={adkInputRef} defaultChecked={gynaikologikoList.adk} /></Col>\r\n                                    <Col sm={3} className='text-start'>Αυτόματη Διακοπή Κύησης</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col sm={1} className='text-end'><input type='checkbox' ref={tdkInputRef} defaultChecked={gynaikologikoList.tdk} /></Col>\r\n                                    <Col sm={3} className='text-start'>Τεχνητή Διακοπή Κύησης</Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Container>\r\n                    </Collapsible >\r\n                    {/* {(patientContext.gender === 'female') && <Collapsible trigger='Γυναικολογικό' transitionTime={200}>\r\n                        <Gynaikologiko />\r\n                    </Collapsible>} */}\r\n\r\n\r\n                </Container>\r\n                {!isLoading && <SaveButton />}\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Conditions.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\Allergies.js",["675","676"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from './Allergies.module.css'\r\nimport ConditionsFinder from '../ConditionsFinder';\r\nimport Card from \"../../../../UI/Card\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport AllergiesLoaded from \"./AllergiesLoaded\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AuthContext } from \"../../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../../../context/patient-context\";\r\n\r\n\r\nconst Allergies = (props) => {\r\n    console.log(props.allergiesList)\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const [selectedConditionsList, setSelectedConditionsList] = useState([])\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [allergiesLoaded, setAllergiesLoaded] = useState(false);\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { sendRequest } = useHttpClient()\r\n\r\n    useEffect(() => {\r\n        if (!!patientContext.anamnistikoId)\r\n            setAllergiesLoaded(true);\r\n\r\n    }, [patientContext.anamnistikoId])\r\n\r\n\r\n    const checkIfInList = (selectedName) => {\r\n        let res = false;\r\n        props.allergiesList.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToAllergyList = async (allergyName) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        props.setAllergiesList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n    }\r\n    const removeFromAllergyList = (allergyName) => {\r\n        props.setAllergiesList((prevState) => {\r\n            return prevState.filter((allergy) => {\r\n                return allergy.name !== allergyName\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const changeHandler = async (event) => {\r\n        if (event.target.checked) {\r\n            addToAllergyList(event.target.value);\r\n        }\r\n        else if (!event.target.checked) {\r\n            removeFromAllergyList(event.target.value);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Row><Col className=\"text-center\"><div className={classes.title}><h4>Αλλεργίες</h4></div></Col></Row>\r\n            {/* <form className={classes.allergiesForm}> */}\r\n            <Card className={classes.allergiesForm}>\r\n                {allergiesLoaded && <AllergiesLoaded allergiesList={props.allergiesList} addToAllergyList={addToAllergyList} removeFromAllergyList={removeFromAllergyList} />}\r\n                {!allergiesLoaded && <Fragment>\r\n                    <Row className=\"justify-content-space-around\">\r\n                        <Col xs={1}></Col>\r\n                        <Col xs={5}><h5>Γενικές αλλεργία</h5></Col>\r\n                        <Col xs={1}></Col>\r\n                        <Col xs={5}><h5>Αλλεργίες σε Φάρμακα</h5></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Τ78.4: Αλλεργία,μη καθορισμένη' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Τ78.4: Αλλεργία,μη καθορισμένη</label>\r\n                        </Col>\r\n                        <Col xs={1} className='text-end'>\r\n                            <input type='checkbox' value='Ζ88.1: Ατομικό ιστορικό αλλεργίας στην πενικιλίνη' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Ζ88.1: Ατομικό ιστορικό αλλεργίας στην πενικιλίνη</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='J30.1: Αλλεργική ρινίτιδα που οφείλεται στη γύρη' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>J30.1: Αλλεργική ρινίτιδα που οφείλεται στη γύρη</label>\r\n                        </Col>\r\n\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.2: Ατομικό ιστορικό αλλεργίας σε άλλους αντιβιοτικούς παράγοντες' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.2: Ατομικό ιστορικό αλλεργίας σε άλλους αντιβιοτικούς παράγοντες</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='J30.2:  Άλλη εποχική αλλεργική ρινίτιδα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>J30.2:  Άλλη εποχική αλλεργική ρινίτιδα</label>\r\n                        </Col>\r\n\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.3: Ατομικό ιστορικό αλλεργίας στις σουλφοναμίδες' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.3: Ατομικό ιστορικό αλλεργίας στις σουλφοναμίδες</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='J30.3: Άλλη αλλεργική ρινίτιδα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>J30.3: Άλλη αλλεργική ρινίτιδα</label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.4: Ατομικό ιστορικό αλλεργίας σε άλλους παράγοντες κατά των λοιμώξεων' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.4: Ατομικό ιστορικό αλλεργίας σε άλλους παράγοντες κατά των λοιμώξεων</label>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='J30.4: Αλλεργική ρινίτιδα, μη καθορισμένη' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\" >\r\n                            <label>J30.4: Αλλεργική ρινίτιδα, μη καθορισμένη</label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.5: Ατομικό ιστορικό αλλεργίας σε αναισθητικό παράγοντα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.5: Ατομικό ιστορικό αλλεργίας σε αναισθητικό παράγοντα</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='J45: Κυρίως αλλεργικό άσθμα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>J45: Κυρίως αλλεργικό άσθμα</label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.6: Ατομικό ιστορικό αλλεργίας σε ναρκωτικό παράγοντα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.6: Ατομικό ιστορικό αλλεργίας σε ναρκωτικό παράγοντα</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='K52.2: Αλλεργική και διαιτητική γαστρεντερίτιδα και κολίτιδα' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>K52.2: Αλλεργική και διαιτητική γαστρεντερίτιδα και κολίτιδα</label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.7: Ατομικό ιστορικό αλλεργίας σε ορό και εμβόλιο' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.7: Ατομικό ιστορικό αλλεργίας σε ορό και εμβόλιο</label>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='L23: Αλλεργική δερματίτιδα εξ επαφής' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>L23: Αλλεργική δερματίτιδα εξ επαφής </label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.8: Ατομικό ιστορικό αλλεργίας σε άλλα φάρμακα, φαρμακευτικές και βιολογικές ουσίες' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.8: Ατομικό ιστορικό αλλεργίας σε άλλα φάρμακα, φαρμακευτικές και βιολογικές ουσίες</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='L50.0: Αλλεργική κνίδωση' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>L50.0: Αλλεργική κνίδωση</label>\r\n                        </Col>\r\n                        <Col className=\"text-end\" xs={1}>\r\n                            <input type='checkbox' value='Z88.9: Ατομικό ιστορικό αλλεργίας σε μη καθορισμένα φάρμακα, φαρμακευτικές και βιολογικές ουσίες' onChange={changeHandler} />\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <label>Z88.9: Ατομικό ιστορικό αλλεργίας σε μη καθορισμένα φάρμακα, φαρμακευτικές και βιολογικές ουσίες</label>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {selectedConditionsList.map((condition) => {\r\n                        return (\r\n                            <Row key={uuid()}>\r\n                                <Col className=\"text-end\" xs={1}>\r\n                                    <input defaultChecked type='checkbox' value={`${condition.code}: ${condition.condition}`} onChange={changeHandler} />\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <label>{`${condition.code}: ${condition.condition}`}</label>\r\n                                </Col>\r\n                            </Row>\r\n                        );\r\n                    })}\r\n                    <Row>\r\n                        <Col>\r\n                            {addAllergy && <ConditionsFinder add setSelectedCondition={setSelectedCondition} setSelectedConditionsList={setSelectedConditionsList} setAddAllergy={setAddAllergy} />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {!addAllergy && <button className={classes.addCondition} onClick={() => { setAddAllergy(true) }}>Προσθήκη Αλλεργίας</button>}\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <Row>\r\n                        <Col><label>Άλλα</label><input type='text'/></Col>\r\n                    </Row> */}\r\n                </Fragment>}\r\n            </Card>\r\n            {/* </form> */}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Allergies;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\Klironomiko.js",["677","678"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from './Klironomiko.module.css';\r\nimport KlironomikoOptions from \"./KlironomikoOptions\";\r\nimport Card from \"../../../UI/Card\";\r\nimport ConditionsFinder from \"../Atomiko/ConditionsFinder\";\r\nimport KlirnomikoLoaded from \"./KlironomikoLoaded\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\n\r\n\r\nconst Klironomiko = (props) => {\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const [klirnomikoLoaded, setKlironomikoLoaded] = useState(false);\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    const { sendRequest } = useHttpClient()\r\n    const [selectedConditionsList, setSelectedConditionsList] = useState([])\r\n    const [addKlironomiko, setAddKlironomiko] = useState(false);\r\n\r\n    console.log(props.cleronomicalList)\r\n\r\n    useEffect(() => {\r\n        if (!!patientContext.anamnistikoId) {\r\n            setKlironomikoLoaded(true)\r\n        }\r\n    }, [patientContext.anamnistikoId])\r\n\r\n    const checkIfInList = (selectedName) => {\r\n        let res = false;\r\n        props.cleronomicalList.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToCleronomicalList = async (allergyName) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        props.setCleronomicalList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n    }\r\n    const removeFromCleronomicalList = (allergyName) => {\r\n        props.setCleronomicalList((prevState) => {\r\n            return prevState.filter((allergy) => {\r\n                return allergy.name !== allergyName\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const changeHandler = async (event) => {\r\n        if (event.target.checked) {\r\n            addToCleronomicalList(event.target.value);\r\n        }\r\n        else if (!event.target.checked) {\r\n            removeFromCleronomicalList(event.target.value);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container className={classes.klironomiko}>\r\n            <Card className={classes.klironomikoCard}>\r\n                {klirnomikoLoaded && <KlirnomikoLoaded cleronomicalList={props.cleronomicalList} addToCleronomicalList={addToCleronomicalList} removeFromCleronomicalList={removeFromCleronomicalList} />}\r\n                {!klirnomikoLoaded && <Fragment>\r\n                    <KlironomikoOptions label='Z83.3: Οικογενειακό ιστορικό σακχαρώδους διαβήτη' changeHandler={changeHandler} />\r\n                    <KlironomikoOptions label='Z83.4: Οικογενειακό ιστορικό άλλων ενδοκρινικών, διατροφικών και μεταβολικών νοσημάτων' changeHandler={changeHandler} />\r\n                    <KlironomikoOptions label='E78.0 Αμιγής υπερχοληστερολαιμία' changeHandler={changeHandler} />\r\n                    <KlironomikoOptions label='Z81.1: Οικογενειακό ιστορικό κατάχρησης οινοπνεύματος' changeHandler={changeHandler} />\r\n                    <KlironomikoOptions label='Z81.2: Οικογενειακό ιστορικό κατάχρησης καπνού' changeHandler={changeHandler} />\r\n                    {selectedConditionsList.map((condition) => {\r\n                        return (\r\n                            <KlironomikoOptions label={`${condition.code}: ${condition.condition}`} changeHandler={changeHandler} key={uuid()} defaultChecked />\r\n\r\n                        );\r\n                    })}\r\n                    <Row>\r\n                        <Col>\r\n                            {addKlironomiko && <ConditionsFinder add setSelectedCondition={setSelectedCondition} setSelectedConditionsList={setSelectedConditionsList} setAddAllergy={setAddKlironomiko} />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {!addKlironomiko && <button className={classes.addCondition} onClick={() => { setAddKlironomiko(true) }}>Προσθήκη Πάθησης</button>}\r\n                        </Col>\r\n                    </Row>\r\n                </Fragment>}\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default Klironomiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoOptions.js",["679"],"import { Container, Row, Col } from \"react-bootstrap\";\r\n// import classes from './Klironomiko.module.css';\r\n\r\nconst KlironomikoOptions = (props) => {\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={1} className='text-end'><input type='checkbox' value={props.label} onChange={props.changeHandler} defaultChecked={props.defaultChecked}/></Col>\r\n            <Col cs={5} className='text-start'><label>{props.label}</label></Col>\r\n        </Row>\r\n    );\r\n}\r\nexport default KlironomikoOptions;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\Surgeries.js",["680","681"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport SurgeriesList from \"./SurgeriesList\";\r\nimport SurgeriesForm from './SurgeriesForm';\r\nimport classes from './Surgeries.module.css'\r\nimport { useState } from \"react\";\r\n\r\nconst Surgeries = (props) => {\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    const [addSurgery, setAddSurgery] = useState(false);\r\n\r\n    const openSurgeryFormHandler = (event) => {\r\n        setAddSurgery(true)\r\n    }\r\n\r\n    const addSurgeryHandler = (condition) => {\r\n        props.setSurgeriesList((prevState) => {\r\n            return [...prevState, condition];\r\n        })\r\n        console.log(condition);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div></div>\r\n            <Card className={classes.surgeriesCard}>\r\n                <Row className={classes.surgeryHeader}>\r\n                    <Col className=\"text-center\"   >Τίτλος</Col>\r\n                    <Col className=\"text-center\">Ημ/νια Εισόδου</Col>\r\n                    <Col className=\"text-center\">Ημ/νία Εξόδου</Col>\r\n                    <Col className=\"text-center\"  sm={4} md={2}>Νοσοκομείο</Col>\r\n                    <Col sm={2}></Col>\r\n                </Row>\r\n                {addSurgery && <SurgeriesForm setAddSurgery={setAddSurgery} addSurgeryHandler={addSurgeryHandler}/>}\r\n                <SurgeriesList surgeriesList={props.surgeriesList} addSurgery={addSurgery} />    \r\n                {!addSurgery&&<Row><Col><button onClick={openSurgeryFormHandler} className={classes.surgeryButton}>Προσθήκη Χειρουργείου</button></Col></Row>}\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Surgeries;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Gynaikologiko.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\Pregnacy.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\NewVisit.js",["682","683"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../UI/Card\";\r\nimport classes from './NewVisit.module.css';\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport SaveButton from '../../UI/SaveButton'\r\nimport BMI from \"./BMI\";\r\nimport moment from \"moment\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst NewVisit = () => {\r\n    const [loadVisit, setLoadVisit] = useState('');\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    console.log(patientContext.gender);\r\n\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.newVisit}>\r\n            <Card className={classes.cardsNewVisit}>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Διάγνωση</label>\r\n                            <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Ημερομηνία*</label>\r\n                            <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={moment(new Date()).format('YYYY-MM-DD')} required />\r\n                            {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Γενική εικόνα</label>\r\n                            <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={classes.multiInputs}>\r\n                        <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                        <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                        <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                        <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                        <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                            <select ref={tektInputRef} name='tekt'>\r\n                                <option value={0} selected disabled hidden>Select an Option</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Col>\r\n                            <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                            <select ref={smktInputRef} name='smkt'>\r\n                                <option value={0} selected disabled hidden>Select an Option</option>\r\n                                <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'female') && <Row>\r\n                        <Col>\r\n                            <label>Τελευταία Έμμηνος Ρύση</label>\r\n                            <input className={classes.date} type='date' />\r\n                        </Col>\r\n                    </Row>}\r\n                    {(patientContext.gender === 'male') && <Row>\r\n                        <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                    </Row>}\r\n                    <Row>\r\n\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                    <Row >\r\n                        <Col sm='1' className='text-md-end'>\r\n                            <label htmlFor=\"others\">Άλλα</label>\r\n                        </Col>\r\n                        <Col sm='6'>\r\n                            <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col><SaveButton /></Col>\r\n                    </Row>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewVisit;",["684","685"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Logo.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\EmailConfirmation.js",["686","687","688","689","690","691","692"],"import { useState, useEffect, useContext } from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../components/UI/Card\"\r\nimport Notifications, { notify } from 'react-notify-toast';\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\n\r\nconst EmailConfirmation = () => {\r\n    const [confirming, setConfirming] = useState(true);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId=useParams().userId;\r\n    console.log(userId)\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const completeSignup = async () => {\r\n            const responseData = await sendRequest(`http://localhost:5000/users/${userId}/login`, 'GET', null, { 'Content-Type': 'application/json' })\r\n            console.log(responseData);\r\n            auth.login(responseData.userId, responseData.token);\r\n        }\r\n        completeSignup();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Notifications />\r\n            <Card>\r\n                <Row>\r\n                    <Col className=\"text-center\"> Το e-mail επιβεβαιώθηκε επιτυχώς</Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EmailConfirmation;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Hit.js",["693","694","695","696","697"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Highlight, RefinementList, Configure, Pagination } from \"react-instantsearch-dom\";\r\n\r\n{/* <InstantSearch indexName=\"demo_ecommerce\" searchClient={searchClient}></InstantSearch> */ }\r\n\r\nconst Hit = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={1}>\r\n          <span className=\"hitCheckbox\">\r\n            {/* <Highlight hit={props.hit}><input type='checkbox' /></Highlight> */}\r\n            <input type='radio' name='condition' value={props.hit.code}/>\r\n          </span>\r\n        </Col>\r\n        <Col className=\"text-start\">\r\n\r\n          <label>\r\n            {/* <Highlight attribute=\"code\" hit={props.hit} /> */}\r\n            {props.hit.code}\r\n            <span>&nbsp;:&nbsp;&nbsp;</span>\r\n            {props.hit.condition}\r\n            {/* <Highlight attribute=\"condition\" hit={props.hit} /> */}\r\n\r\n          </label>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Hit;",["698","699"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\Farmaka.js",["700","701","702","703","704"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport Card from '../../UI/Card';\r\nimport FarmakaList from './FarmakaList';\r\nimport FarmakaForm from './FarmakaForm';\r\n// import SmallSAveButton from '../../UI/SmallSaveButton'\r\n\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport FarmakaHeader from './FarmakaHeader';\r\nimport classes from './Farmaka.module.css';\r\nimport { PatientContext } from '../../../context/patient-context';\r\n\r\n\r\n\r\n\r\nconst Farmaka = (props) => {\r\n    const { sendRequest, isLoadding, error, clearError } = useHttpClient();\r\n\r\n\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n\r\n\r\n    const [farmakaList, setFarmakaList] = useState([])\r\n    const [addFarmako, setAddFarmako] = useState(false);\r\n\r\n\r\n\r\n    const fetchFarmaka = useCallback(async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/farmaka`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setFarmakaList(responseData.farmakaList)\r\n\r\n\r\n        } catch (err) { }\r\n    }\r\n    )\r\n    useEffect(() => {\r\n        if (!!patientContext.patientId) {\r\n            fetchFarmaka();\r\n        }\r\n    }, [patientContext.patientId])\r\n\r\n\r\n\r\n    const addFarmakaHandler = (farmako) => {\r\n        setFarmakaList((prevState) => {\r\n            return [...prevState, farmako];\r\n        })\r\n        console.log(farmakaList)\r\n    }\r\n\r\n\r\n    const removeFarmakoHandler = (farmakoIdToDelete) => {\r\n        setFarmakaList((prevState) => {\r\n            return prevState.filter(farmako => {\r\n                return farmako._id !== farmakoIdToDelete\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card className={(props.info) ? classes.farmakaCard2 : classes.farmakaCard}>\r\n                <FarmakaHeader />\r\n                {addFarmako && <FarmakaForm addFarmakaHandler={addFarmakaHandler} setAddFarmako={setAddFarmako} />}\r\n                <FarmakaList addFarmako={addFarmako} farmakaList={farmakaList} removeFarmakoHandler={removeFarmakoHandler} />\r\n\r\n                <Row>\r\n                    {!addFarmako && <Col><button className={classes.addFarmako} onClick={() => { setAddFarmako(true) }}>Προσθήκη Φαρμάκου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Farmaka;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsForms.js",["705","706"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\n\r\nimport classes from './ConditionsForm.module.css';\r\nimport ConditionsFinder from \"./ConditionsFinder\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\n\r\n\r\n\r\nconst ConditionsForm = (props) => {\r\n    const auth=useContext(AuthContext);\r\n    const patientContext=useContext(PatientContext)\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const {sendRequest}=useHttpClient();\r\n    const stateInputRef = useRef();\r\n    const severityInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    console.log(selectedCondition)\r\n\r\n    const submitHandler = async (event) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n       \r\n        \r\n        let condition = {\r\n            name: selectedCondition.code + ': ' + selectedCondition.condition,\r\n            status: stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: responseData\r\n        }\r\n       \r\n        props.addConditionHandler(condition);\r\n        props.setAddCondition(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.conditionsForm}>\r\n            <Col sm={4}>\r\n                <ConditionsFinder setSelectedCondition={setSelectedCondition} />\r\n            </Col>\r\n            <Col sm={2} className='text-center'>\r\n                <select ref={stateInputRef}>\r\n                    <option value='Ύφεση'>Ύφεση</option>\r\n                    <option value='Υποτροπή'>Υποτροπή</option>\r\n                    <option value='Χρόνια'>Χρόνια</option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col sm={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n            <Col sm={2}><input type='date' ref={dateOfHealingInputRef} /></Col>\r\n            <Col className='text-start' sm={2}>\r\n                {!!selectedCondition && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddCondition(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default ConditionsForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallSaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SmallDeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Surgeries\\SurgeriesListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\Files.js",["707","708","709","710","711","712"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../UI/Card\"\r\nimport FilesHeader from \"./FilesHeaders\"\r\nimport FilesList from './FilesList'\r\nimport FilesForm from \"./FileForm\"\r\nimport classes from './Files.module.css';\r\nimport { useState, useContext, useEffect,useCallback } from \"react\"\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport { PatientContext } from \"../../../context/patient-context\"\r\nimport { useHttpClient } from \"../../../hooks/http-hook\"\r\n\r\nconst Files = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const patientContext=useContext(PatientContext);\r\n    const {error,clearError,sendRequest,isLoading}=useHttpClient()\r\n\r\n    const [filesList, setFilesList] = useState([])\r\n    const [addFile, setAddFile] = useState(false);\r\n\r\n    const fetchFiles = useCallback(async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/exams`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData)\r\n            setFilesList(responseData.filesList)\r\n\r\n\r\n        } catch (err) { }\r\n    }\r\n    )\r\n    useEffect(() => {\r\n        if (!!patientContext.patientId) {\r\n            fetchFiles();\r\n        }\r\n    }, [patientContext.patientId])\r\n\r\n    \r\n\r\n\r\n    const addFileHandler = (file) => {\r\n        setFilesList((prevState) => {\r\n            return [...prevState, file];\r\n        })\r\n    }\r\n\r\n    const removeFileHandler = (fileIdToDelete) => {\r\n        setFilesList((prevState) => {\r\n            return prevState.filter(file=>{\r\n                return file.id!==fileIdToDelete\r\n            })\r\n        })\r\n    }\r\n  \r\n\r\n    return (\r\n        <Container>\r\n            <Card className={(props.info)?classes.filesCard2:classes.filesCard}>\r\n                <FilesHeader />\r\n                {addFile && <FilesForm addFileHandler={addFileHandler} setAddFile={setAddFile} />}\r\n                <FilesList filesList={filesList} addFile={addFile} removeFileHandler={removeFileHandler}/>\r\n\r\n                <Row>\r\n                    {!addFile && <Col><button className={classes.addFile} onClick={() => { setAddFile(true) }}>Προσθήκη Αρχείου</button></Col>}\r\n                </Row>\r\n            </Card>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Files;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesHeaders.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FilesListItem.js",["713","714","715","716"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './FilesListItem.module.css'\r\nimport DeleteButton from '../../UI/DeleteButton'\r\nimport ViewButton from \"../../UI/ViewButton\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst FilesListItem = (props) => {\r\n    const { sendRequest, isLoading, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/uploads/exams/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        props.removeFileHandler(props._id)\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className={classes.filesListItem}>\r\n            <Col className=\"text-center\" sm={4} md={4}>{props.fileName}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.fileType}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.dateOfDiagnosis}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{props.dateOfVisit}</Col>\r\n            <Col sm={1} className=\"text-end\">\r\n                <a href={`http://localhost:5000/uploads/exams/${props.path}`} target=\"_blank\"><ViewButton /></a>\r\n            </Col>\r\n            <Col sm={1} className=\"text-start\">\r\n                {!isLoading && <DeleteButton onClick={clickHandler} />}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FilesListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileForm.js",["717","718","719"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef } from \"react\";\r\nimport FileUploader from \"./FileUploader\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FileForm.module.css';\r\nimport moment from 'moment';\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { useContext } from \"react\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst FilesForm = (props) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const { sendRequest, error } = useHttpClient();\r\n\r\n\r\n    const patientContext=useContext(PatientContext)\r\n    const typeInputRef = useRef();\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        console.log(selectedFile);\r\n        let fileId;\r\n\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('exam', selectedFile);\r\n            formData.append('name',selectedFile.name)\r\n            formData.append('type', typeInputRef.current.value);\r\n            formData.append('dateOfDiagnosis', dateOfDiagnosisInputRef.current.value);\r\n            formData.append('dateOfVisit', dateOfVisitInputRef.current.value);\r\n\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/uploads/exams`, 'POST', formData);\r\n            fileId=responseData.exam._id\r\n            console.log(responseData);\r\n\r\n            let file = {\r\n                name: selectedFile.path,\r\n                file:responseData.exam.file,\r\n                type: typeInputRef.current.value,\r\n                dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n                dateOfVisit: dateOfVisitInputRef.current.value,\r\n                _id: responseData.exam._id\r\n            }\r\n\r\n            console.log(file)\r\n    \r\n            props.addFileHandler(file);\r\n            props.setAddFile(false);\r\n    \r\n\r\n        } catch (err) { console.log(err) }\r\n        \r\n\r\n\r\n        // console.log(nameInputRef.current.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.fileForm}>\r\n            <Col sm={4} md={4} className='text-center'>\r\n                <FileUploader addFileHandler={props.addFileHandler} setSelectedFile={setSelectedFile} />\r\n                {/* <input type='file' name='title' ref={nameInputRef} /> */}\r\n            </Col>\r\n            <Col className='text-center' sm={4} md={2}>\r\n                {/* <label>Κατάσταση</label> */}\r\n                <select ref={typeInputRef}>\r\n                    <option>Αίματος</option>\r\n                    <option>Απεικονιστικές </option>\r\n                    <option>Άλλη</option>\r\n                    <option></option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfVisitInputRef} defaultValue={moment(new Date()).format('YYYY-MM-DD')} /></Col>\r\n            <Col className='text-center' sm={2}>\r\n                {!!selectedFile && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddFile(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default FilesForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewFiles\\FileUploader.js",["720"],"import { useRef } from \"react\";\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useState } from \"react\";\r\nimport classes from './FileUploader.module.css';\r\n\r\nconst FileUploader = (props) => {\r\n\r\n    const fileInput = useRef(null)\r\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n        onDrop: files => { props.setSelectedFile(files[0]) },\r\n        accept: {\r\n            'image/png': 'png',\r\n            'image/jpeg': 'jpeg',\r\n            'image/jpg': 'jpg',\r\n            'application/pdf': 'pdf'\r\n        },\r\n        maxFiles: 1\r\n    });\r\n\r\n\r\n    const files = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const handleFileInput = (e) => {\r\n        console.log(e.target.files[0]);\r\n        console.log(fileInput.current.value)\r\n        console.log('here')\r\n        // const file = e.target.files[0];\r\n        // onFileSelect(e.target.files[0])\r\n        // props.onFileSelectSuccess(file);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.container}>\r\n            <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} ref={fileInput} onChange={handleFileInput} />\r\n                <p>Σύρετε εδώ ένα αρχείο , ή κλικάρετε για να επιλέξετε</p>\r\n            </div>\r\n            <aside>\r\n                <h5>Αρχείο</h5>\r\n                <ul>{files}</ul>\r\n            </aside>\r\n        </section>\r\n        // <div className=\"file-uploader\">\r\n        //     <input type=\"file\" onChange={handleFileInput} />\r\n        //     <button onClick={e => fileInput.current && fileInput.current.click()} className=\"btn btn-primary\"></button>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default FileUploader;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaForm.js",["721","722","723"],"import { Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\n// import FileUploader from \"./FileUploader\";\r\nimport SmallSaveButton from \"../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../UI/SmallDeleteButton\"\r\nimport classes from './FarmakaForm.module.css';\r\nimport FarmakoFinder from \"./FarmakoFinder\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nconst FarmakaForm = (props) => {\r\n    const [selectedFarmako, setSelectedFarmako] = useState({ name: '', ATC_name: '' });\r\n\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n\r\n\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfVisitInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        let farmakoId;\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/farmaka`, 'POST',\r\n                JSON.stringify({\r\n                    name: selectedFarmako.name,\r\n                    ATC_name: selectedFarmako.ATC_name,\r\n                    dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n                    dateOfEnd: dateOfVisitInputRef.current.value\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            farmakoId = responseData.farmako._id\r\n           \r\n            let farmako = {\r\n                name: selectedFarmako.name,\r\n                ATC_name: selectedFarmako.ATC_name,\r\n                dateOfStart: dateOfDiagnosisInputRef.current.value,\r\n                dateOfEnd: dateOfVisitInputRef.current.value,\r\n                _id: farmakoId\r\n            }\r\n            console.log(farmako);\r\n            props.addFarmakaHandler(farmako);\r\n            props.setAddFarmako(false);\r\n\r\n        } catch (err) { console.log(err) }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.farmakoForm}>\r\n            <Col sm={8} md={6} className='text-center'>\r\n                <FarmakoFinder setSelectedFarmako={setSelectedFarmako} />\r\n            </Col>\r\n\r\n\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfDiagnosisInputRef} /></Col>\r\n            <Col className='text-center' sm={4} md={2}><input type='date' ref={dateOfVisitInputRef} /></Col>\r\n            <Col className='text-center' sm={2}>\r\n                {!!selectedFarmako && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddFarmako(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default FarmakaForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaListItem.js",["724","725","726"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './FarmakaListItem.module.css';\r\nimport DeleteButton from '../../UI/DeleteButton'\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst FarmakaListItem = (props) => {\r\n    console.log(props.id)\r\n    const {sendRequest,error,clearError}=useHttpClient();\r\n    const auth=useContext(AuthContext);\r\n    const patientContext=useContext(PatientContext);\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/farmaka/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        props.removeFarmakoHandler(props.id)\r\n    }\r\n\r\n    return (\r\n        <Row className={classes.farmakoListItem}>\r\n            <Col className=\"text-center\" sm={4} md={3}>{props.farmakoName}</Col>\r\n            <Col className=\"text-center\" sm={4} md={3}>{props.farmakoType}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{(!!props.dateOfStart)?moment(props.dateOfStart).format('DD-MM-YYYY'):''}</Col>\r\n            <Col className=\"text-center\" sm={4} md={2}>{(!!props.dateOfEnd)?moment(props.dateOfEnd).format('DD-MM-YYYY'):''}</Col>\r\n            <Col sm={2} className=\"text-center\">\r\n                <DeleteButton onClick={clickHandler} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FarmakaListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakoFinder.js",["727","728","729","730","731"],"import { Row, Col } from \"react-bootstrap\";\r\nimport FarmakaHit from \"./FarmakaHit\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport FarmakaATC from \"./FarmakaATC\";\r\nimport './FarmakoFinder.css'\r\n\r\n\r\n\r\n\r\nconst FarmakoFinder = (props) => {\r\n    const [showHits, setShowHits] = useState(true);\r\n    const [selectedHit, setSelectedHit] = useState('');\r\n    const [hitList, setHitList] = useState([])\r\n    const [drugInput, setDrugInput] = useState('');\r\n    const [atcInput, setAtcInput] = useState('');\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchNameHits = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/new/farmako/name/${drugInput}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setHitList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        const fetchATCNameHits = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/new/farmako/ATC_name/${atcInput}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setHitList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (drugInput !== '') {\r\n            fetchNameHits();\r\n        }\r\n        if (atcInput !== '') {\r\n            fetchATCNameHits();\r\n        }\r\n\r\n    }, [drugInput, sendRequest, atcInput]);\r\n\r\n    const nameChangeHandler = (event) => {\r\n        setDrugInput(event.target.value);\r\n        for (let i = 0; i < hitList.length; i++) {\r\n\r\n            if (hitList[i].name === event.target.value) {\r\n                setSelectedHit(hitList[i]);\r\n                props.setSelectedFarmako({ name: hitList[i].name, ATC_name: hitList[i].ATC_name });\r\n            }\r\n        }\r\n        console.log('selectedHit:', selectedHit)\r\n    }\r\n    const atcNameChangeHandler = (event) => {\r\n        setAtcInput(event.target.value)\r\n        console.log(event.target.value, atcInput)\r\n        for (let i = 0; i < hitList.length; i++) {\r\n            console.log(hitList[i].ATC_name, event.target.value);\r\n            if (hitList[i].ATC_name === event.target.value) {\r\n                setSelectedHit(hitList[i]);\r\n                props.setSelectedFarmako((prevState) => {\r\n                    return { ...prevState, ATC_name: hitList[i].ATC_name }\r\n                });\r\n            }\r\n        }\r\n        // console.log('selectedHit:', selectedHit)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n           \r\n            <Col className=\"text-start\">\r\n            {(props.therapeia) && <label className=\"drastiki__ousia\">Όνομα Φαρμάκου</label>}\r\n                <input className={`${props.therapeia && 'farmako__finder__input'}`} list=\"drugNames\" name=\"drugName\" id=\"drugName\" value={drugInput} onChange={nameChangeHandler} defaultValue={selectedHit.name} />\r\n                <datalist id=\"drugNames\" >\r\n                    <FarmakaHit hit={hitList} />\r\n\r\n                </datalist>\r\n            </Col>\r\n            \r\n            <Col className=\"text-start\">\r\n            {(props.therapeia) && <label className=\"drastiki__ousia\">Δραστική Ουσία</label>}\r\n                <input className={`${props.therapeia && 'farmako__finder__input'}`} list=\"drugATCs\" name=\"drugATC\" id=\"drugATC\" defaultValue={selectedHit.ATC_name} onChange={atcNameChangeHandler} />\r\n                <datalist id=\"drugATCs\">\r\n                    <FarmakaATC hit={hitList} />\r\n                </datalist>\r\n            </Col>\r\n            {/* </input> */}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default FarmakoFinder;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaHit.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Farmaka\\FarmakaATC.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsFinder.js",["732","733","734","735","736","737","738"],"import { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsHits from \"./ConditionsHits\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from '../../../../context/auth-context'\r\nimport { useHttpClient } from '../../../../hooks/http-hook';\r\n\r\n\r\n\r\n\r\n\r\nconst ConditionsFinder = (props) => {\r\n    const [showHits, setShowHits] = useState(true);\r\n    const [selectedHit, setSelectedHit] = useState('');\r\n    const [hitList, setHitList] = useState([])\r\n    const [conditionInput, setConditionInput] = useState('');\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchConditionHits = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/new/conditions/name/${conditionInput}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setHitList(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n       \r\n        if (conditionInput !== '') {\r\n            fetchConditionHits();\r\n        }\r\n\r\n\r\n    }, [conditionInput, sendRequest]);\r\n\r\n    const nameChangeHandler = (event) => {\r\n        setConditionInput(event.target.value);\r\n        let hit;\r\n        for (let i = 0; i < hitList.length; i++) {\r\n\r\n            if (hitList[i].code === event.target.value.split(\":\")[0]) {       /// find selected\r\n                setSelectedHit(hitList[i]);\r\n                props.setSelectedCondition({ code: hitList[i].code, condition: hitList[i].condition });\r\n                hit={ code: hitList[i].code, condition: hitList[i].condition }\r\n\r\n                if (!!props.add){\r\n                    props.setSelectedConditionsList((prevState)=>{\r\n                        return [...prevState,hit];\r\n                    })\r\n                   setConditionInput('')\r\n                   props.setAddAllergy(false);\r\n                }\r\n            }\r\n           \r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <input list=\"conditionNames\" name=\"conditionName\" id=\"conditionName\" value={conditionInput} onChange={nameChangeHandler}  />\r\n                <datalist id=\"conditionNames\" >\r\n                    <ConditionsHits hit={hitList} />\r\n                </datalist>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ConditionsFinder;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionsHits.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Visit.js",["739","740","741"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Antikeimeniki.js",["742","743","744","745","746"],"import { Container, Row, Col } from \"react-bootstrap\"\r\nimport Card from \"../../../UI/Card\";\r\nimport classes from './Antikeimeniki.module.css';\r\nimport { useContext, useRef, useState } from \"react\";\r\n// import SaveButton from '../../UI/SaveButton'\r\nimport BMI from \"../../Visits/BMI\";\r\nimport moment from \"moment\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\n\r\n\r\nconst Antikeimeniki = () => {\r\n    const [loadVisit, setLoadVisit] = useState('');\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n    const auth = useContext(AuthContext)\r\n    const patientContext = useContext(PatientContext);\r\n    console.log(patientContext.gender);\r\n\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.newVisit}>\r\n            <Card className={classes.cardsNewVisit}>\r\n\r\n                <Row>\r\n                    <Col> <span className={classes.subtitle}>Γενικά</span></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Ημερομηνία*</label>\r\n                        <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={moment(new Date()).format('YYYY-MM-DD')} required />\r\n                        {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <label>Γενική εικόνα</label>\r\n                        <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Αιτία Προσέλευσης</label>\r\n                        <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col> <span className={classes.subtitle}>Βιομετρικά</span></Col>\r\n                </Row>\r\n                <Row className={classes.multiInputs}>\r\n                    <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                    <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                </Row>\r\n                <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                    <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                    <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                    <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                        <select ref={tektInputRef} name='tekt'>\r\n                            <option value={0} selected disabled hidden>Select an Option</option>\r\n                            <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                            <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                            <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                            <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                            <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                        </select>\r\n                    </Col>\r\n                </Row>\r\n                {(patientContext.gender === 'female') && <Row>\r\n                    <Col>\r\n                        <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                        <select ref={smktInputRef} name='smkt'>\r\n                            <option value={0} selected disabled hidden>Select an Option</option>\r\n                            <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                            <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                            <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                            <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                            <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                        </select>\r\n                    </Col>\r\n                </Row>}\r\n                {(patientContext.gender === 'female') && <Row>\r\n                    <Col>\r\n                        <label>Τελευταία Έμμηνος Ρύση</label>\r\n                        <input className={classes.date} type='date' />\r\n                    </Col>\r\n                </Row>}\r\n                {(patientContext.gender === 'male') && <Row>\r\n                    <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                </Row>}\r\n                <Row>\r\n                    <Col> <span className={classes.subtitle}>Υπερηχογράφημα Θυρεοειδούς</span></Col>\r\n                </Row>\r\n                <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                    <Col lg='3'><label >Ύψος Όζου(mm)</label> <input type='number' min={1} max={99} maxLength={2}/></Col>\r\n                    <Col lg='3'><label >Βάθος Όζου(mm)</label> <input type='number' min={1} max={99} maxLength={2}/></Col>\r\n                    <Col lg='3'><label >Μήκος Όζου(mm)</label> <input type='number' min={1} max={99} maxLength={2}/></Col>\r\n\r\n\r\n                </Row>\r\n                <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Antikeimeniki;",["747","748"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\Diagnosis.js",["749"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from '../../../UI/Card'\r\nimport classes from './Diagnosis.module.css'\r\nimport { useState } from \"react\";\r\nimport DiagnosisList from \"./DiagnosisList\";\r\nimport ConditionsHeader from '../../History/Atomiko/ConditionsHeader'\r\nimport DiagnosisForm from \"./DiagnosisForm\";\r\n\r\n\r\n\r\nconst Diagnosis = (props) => {\r\n    const [addDiagnosis, setAddDiagnosis] = useState(false);\r\n\r\n\r\n    const openAddForm = (event) => {\r\n        setAddDiagnosis(true);\r\n        props.dispatch({ type: 'touchDiagnosis', payload: { touchDiagnosisForm: true } })\r\n\r\n    }\r\n\r\n    const addDiagnosisHandler = (newDiagnosis) => {\r\n        props.dispatch({ type: 'addDiagnosisList', payload: { diagnosis: newDiagnosis } })\r\n\r\n    }\r\n    const removeDiagnosisHandler = (diagnosisIdToDelete) => {\r\n        let diagnosisList = props.state.therapeiaList.filter(diagnosis => {\r\n            return diagnosis._id !== diagnosisIdToDelete\r\n        })\r\n\r\n        props.dispatch({ type: 'removeDiagnosisList', payload: { diagnosisList: diagnosisList } })\r\n    }\r\n    const editDiagnosisHanlder = (addedDiagnosis, diagnosisIdtoUpdate) => {\r\n        let tempList = props.state.diagnosisList;\r\n        tempList = tempList.map(diagnosis => {\r\n            if (diagnosis._id=== diagnosisIdtoUpdate) {\r\n                return diagnosis = addedDiagnosis\r\n            }else {return diagnosis=diagnosis}\r\n        })\r\n        props.dispatch({type:'editDiagnosisList',payload:{diagnosisList: tempList}})\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <Container >\r\n\r\n            <Card className={classes.conditionsCard}>\r\n                <ConditionsHeader />\r\n\r\n                {addDiagnosis && <DiagnosisForm setAddDiagnosis={setAddDiagnosis} addDiagnosisHandler={addDiagnosisHandler} />}\r\n                <DiagnosisList editDiagnosisHanlder={editDiagnosisHanlder} removeDiagnosisHandler={removeDiagnosisHandler} loadedDiagnosisList={props.loadedDiagnosisList} touchForm={props.state.touchDiagnosisForm} oldDiagnosis={props.state.oldDiagnosis} dispatch={props.dispatch} addDiagnosis={addDiagnosis} diagnosisList={props.diagnosisList} />\r\n\r\n                <Row>\r\n                    <Col>\r\n                        {!addDiagnosis && <button className={classes.addCondition} onClick={openAddForm}>Προσθήκη Διάγνωσης</button>}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Diagnosis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisList.js",["750"],"import { useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisList.module.css'\r\nimport DiagnosisListItem from \"./DiagnosisListItem\";\r\n\r\nconst DiagnosisList = (props) => {\r\n    const visitId = useParams().visitId\r\n    console.log(props)\r\n    const loadHandler = async (event) => {\r\n\r\n        props.dispatch({ type: 'oldDiagnosis', payload: { oldDiagnosis: true } })\r\n    }\r\n\r\n    return (\r\n        <Container fluid className={classes.diagnosisList}>\r\n            <Row>\r\n                {(((props.oldDiagnosis) || (visitId !== 'new')) || (((props.touchForm)||(props.loadedDiagnosisList.length === 0))&&(props.diagnosisList.length !== 0))) && props.diagnosisList.map((diagnosis) => {\r\n                   \r\n                    return <DiagnosisListItem\r\n                        condition={diagnosis.name}\r\n                        status={diagnosis.status}\r\n                        dateOfDiagnosis={(!!diagnosis.dateOfDiagnosis)?moment(diagnosis.dateOfDiagnosis).format('DD-MM-YYYY'):''}\r\n                        dateOfHealing={(!!diagnosis.dateOfHealing)?moment(diagnosis.dateOfHealing).format('DD-MM-YYYY'):''}\r\n                        date_of_diagnosis={diagnosis.dateOfDiagnosis}\r\n                        date_of_healing={diagnosis.dateOfHealing}\r\n                        key={diagnosis._id}\r\n                        id={diagnosis._id}\r\n                        removeDiagnosisHandler={props.removeDiagnosisHandler}\r\n                        editDiagnosisHanlder={props.editDiagnosisHanlder}\r\n                    />\r\n                })}\r\n                {(props.loadedDiagnosisList.length !== 0) && (!props.addDiagnosis)&& (!props.oldDiagnosis)&&(props.diagnosisList.length === 0) && (visitId === 'new') && <Row>\r\n                    <Col className={`text-center ${classes.loadRow}`}>\r\n                        Για να φορτώσετε τις  διαγνώσεις της τελευταίας επίσκεψης πατήστε το κουμπί <button type='button' onClick={loadHandler}>Φόρτωση</button>\r\n                    </Col>\r\n                </Row>}\r\n                {(((props.diagnosisList.length === 0) && (!props.addDiagnosis) && (props.oldDiagnosis)) || ((props.loadedDiagnosisList.length === 0) &&(!props.touchForm)&& (!props.addDiagnosis))) && <Row>\r\n                    <Col className='text-center'>Η λίστα είναι άδεια,προσθέστε μια διάγνωση.</Col>\r\n                </Row>}\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DiagnosisList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisListItem.js",["751"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './DiagnosisListItem.module.css'\r\nimport DeleteButton from \"../../../UI/DeleteButton\";\r\nimport EditButton from \"../../../UI/EditButton\";\r\nimport { Fragment, useState } from \"react\";\r\nimport DiagnosisEditForm from \"./DiagnosisEditForm\";\r\nimport moment from 'moment'\r\n\r\nconst DiagnosisListItem = (props) => {\r\n    const [editForm, setEditForm] = useState(false)\r\n\r\n    const deleteHanlder = () => {\r\n        props.removeDiagnosisHandler(props.id);\r\n    }\r\n    const editHanlder = () => {\r\n        setEditForm(true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!editForm && <Row className={classes.conditionsListItem}>\r\n                <Col className=\"text-center\" sm={4}><span>{props.condition}</span></Col>\r\n                <Col className=\"text-center\" sm={2}><span>{props.status}</span></Col>\r\n                {/* <Col className=\"text-center\" sm={2}><span>{props.severity}</span></Col> */}\r\n                <Col className=\"text-center\"><span>{props.dateOfDiagnosis}</span></Col>\r\n                <Col className=\"text-center\" ><span>{props.dateOfHealing}</span></Col>\r\n                <Col sm={1} className='text-end'>\r\n                    <EditButton onClick={editHanlder}/>\r\n                </Col>\r\n                <Col sm={1} className='text-start'>\r\n                    <DeleteButton onClick={deleteHanlder} />\r\n                </Col>\r\n            </Row>}\r\n            {editForm&&<DiagnosisEditForm\r\n            id={props.id}\r\n            condition={props.condition}\r\n            status={props.status}\r\n            dateOfDiagnosis={props.date_of_diagnosis}\r\n            dateOfHealing={props.date_of_healing}\r\n            setEditForm={setEditForm}\r\n            editDiagnosisHanlder={props.editDiagnosisHanlder}\r\n            />}\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default DiagnosisListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisForm.js",["752"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisForm.module.css';\r\nimport ConditionsFinder from \"../../History/Atomiko/ConditionsFinder\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst DiagnosisForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest } = useHttpClient()\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const stateInputRef = useRef();\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        let diagnosis = {\r\n            name: selectedCondition.code + ':' + selectedCondition.condition,\r\n            status: stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: responseData\r\n        }\r\n\r\n        props.addDiagnosisHandler(diagnosis);\r\n        props.setAddDiagnosis(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.conditionsForm}>\r\n            <Col sm={4}>\r\n                <ConditionsFinder setSelectedCondition={setSelectedCondition} />\r\n            </Col>\r\n            <Col sm={2} className='text-center'>\r\n                <select ref={stateInputRef}>\r\n                    <option value='Ύφεση'>Ύφεση</option>\r\n                    <option value='Υποτροπή'>Υποτροπή</option>\r\n                    <option value='Χρόνια'>Χρόνια</option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col sm={2}><input type='date' ref={dateOfDiagnosisInputRef} defaultValue={moment(new Date()).format('YYYY-MM-DD')} /></Col>\r\n            <Col sm={2}><input type='date' ref={dateOfHealingInputRef} /></Col>\r\n            <Col className='text-start' sm={2}>\r\n                {!!selectedCondition && <SmallSaveButton onClick={submitHandler} />}\r\n                <SmallDeleteButton onClick={() => { props.setAddDiagnosis(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default DiagnosisForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\Therapeia.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaList.js",["753"],"import { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TherapeiaListItem from \"./TherapeiaListItem\";\r\nimport classes from './TherapeiaList.module.css'\r\n\r\nconst TherapeiaList = (props) => {\r\n   \r\n  \r\n    const visitId=useParams().visitId\r\n    const patientId=useParams().patientId;\r\n\r\n    const loadHandler = async (event) => {\r\n\r\n        props.dispatch({ type: 'oldTherapeia', payload: { oldTherapeia: true } })\r\n    }\r\n    // console.log(props.oldTherapeia,visitId !== 'new',props.touchForm,props.loadedTherapeiaList.length===0,props.therapeiaList.length !== 0)\r\n    // console.log((((props.oldTherapeia) || (visitId !== 'new')) || (((props.touchForm)||(props.loadedTherapeiaList.length === 0))&&(props.therapeiaList.length !== 0))))\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {(((props.oldTherapeia) || (visitId !== 'new')) || (((props.touchForm)||(props.loadedTherapeiaList.length === 0))&&(props.therapeiaList.length !== 0)))&&props.therapeiaList.map((therapeia) => {\r\n                return <TherapeiaListItem\r\n                    condition={therapeia.condition}\r\n                    drugName={therapeia.name}\r\n                    ATC_name={therapeia.ATC_name}\r\n                    quantity={therapeia.posotita}\r\n                    frequency={therapeia.syxnotita}\r\n                    key={therapeia._id}\r\n                    id={therapeia._id}\r\n                    removeTherapeiaHandler={props.removeTherapeiaHandler}\r\n                />\r\n            })}\r\n            \r\n            {(props.loadedTherapeiaList.length !== 0) && (!props.addTherapeia)&& (!props.oldTherapeia)&&(props.therapeiaList.length === 0) && (visitId === 'new') && <Row>\r\n                <Col className={`text-center ${classes.loadRow}`}>\r\n                    Για να φορτώσετε τις  θεραπείες της τελευταίας επίσκεψης πατήστε το κουμπί <button type='button' onClick={loadHandler}>Φόρτωση</button>\r\n                </Col>\r\n            </Row>}\r\n            {(((props.therapeiaList.length === 0) && (!props.addTherapeia) && (props.oldTherapeia)) || ((props.loadedTherapeiaList.length === 0) &&(!props.touchForm)&& (!props.addTherapeia))) && <Row>\r\n                <Col className='text-center'>Η λίστα είναι άδεια,προσθέστε μια θεραπεία.</Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TherapeiaList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaListItem.js",["754"],"import { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport classes from './TherapeiaListItem.module.css'\r\n\r\nconst TherapeiaListItem = (props) => {\r\n\r\n    const clickHandler=(event)=>{\r\n        props.removeTherapeiaHandler(props.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.therapeiaListItem}>\r\n            <Row>\r\n                <Col className=\"text-start\" >\r\n                    <label className={classes.therapeiaLabel}>Πάθηση:</label>\r\n                    <span>{props.condition}</span>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-start\">\r\n                    <label className={classes.therapeiaLabel}>Εμπορική Ονομασία</label>\r\n                    <span>{props.drugName}</span>\r\n                </Col>\r\n                <Col className=\"text-start\">\r\n                    <label className={classes.therapeiaLabel}>ATC Δραστική Ουσία:</label>\r\n                    <span>{props.ATC_name}</span>\r\n                </Col>\r\n                <Col className=\"text-start\" sm={2}>\r\n                    <button type='button' onClick={clickHandler}>Διαγραφή</button>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row className=\"justify-condtent-md-text-start\">\r\n                <Col className=\"text-start\" md={2}>\r\n                    <label className={classes.therapeiaLabel}>Ποσότητα:</label>\r\n                    <span>{props.quantity}</span>\r\n                </Col>\r\n                <Col className=\"text-start\" md={2}>\r\n                    <label className={classes.therapeiaLabel}>Συχνότητα:</label>\r\n                    <span>{props.frequency}</span>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TherapeiaListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Therapeia\\TherapeiaForm.js",["755","756","757"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, Fragment, useContext, useEffect } from \"react\";\r\nimport FarmakoFinder from \"../../Farmaka/FarmakoFinder\";\r\nimport classes from './TherapeiaForm.module.css';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst TherapeiaForm = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const { error, sendRequest } = useHttpClient();\r\n    const [selectedFarmako, setSelectedFarmako] = useState({ name: '', ATC_name: '' });\r\n    const [nameInput, setNameInput] = useState('')\r\n    const [allowSave, setAllowSave] = useState(false);\r\n\r\n\r\n    const conditionInputRef = useRef();\r\n    const posotitaInputRef = useRef();\r\n    const syxnotitaInputRef = useRef();\r\n\r\n    const changeHandler = (event) => {\r\n        setNameInput(event.target.value)\r\n    }\r\n    useEffect(() => {\r\n        if (nameInput !== '' && selectedFarmako.name != '') {\r\n            setAllowSave(true)\r\n        } else {\r\n            setAllowSave(false)\r\n        }\r\n    }, [selectedFarmako,nameInput])\r\n\r\n    const submitHandler = async (event) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        let therapeia = {\r\n            condition: conditionInputRef.current.value,\r\n            name: selectedFarmako.name,\r\n            ATC_name: selectedFarmako.ATC_name,\r\n            posotita: posotitaInputRef.current.value,\r\n            syxnotita: syxnotitaInputRef.current.value,\r\n            _id: responseData\r\n        }\r\n        console.log(therapeia)\r\n        props.addTherapeiaHandler(therapeia);\r\n        props.setAddTherapeia(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            <Row >\r\n                <Col md={6} className='text-xxl-start'>\r\n                    <label className={classes.myLabels}>Πάθηση</label>\r\n                    <input className={classes.conditionInput} list='conditionsNames' name='conditionName' ref={conditionInputRef} value={nameInput} onChange={changeHandler} />\r\n                    <datalist id='conditionsNames'>\r\n                        {props.diagnosisList.map((diagnosis) => {\r\n                            return <option value={diagnosis.name} key={uuid()} />\r\n                        })}\r\n                    </datalist>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='text-center'>\r\n                    <FarmakoFinder therapeia setSelectedFarmako={setSelectedFarmako} />\r\n                </Col>\r\n            </Row>\r\n            <Row className={classes.dosologia}>\r\n                <Col xl={4}>\r\n                    <label>Ποσότητα</label>\r\n                    <input ref={posotitaInputRef} />\r\n                    <datalist></datalist>\r\n                </Col>\r\n                <Col xl={4}>\r\n                    <label>Συχνότητα</label>\r\n                    <input ref={syxnotitaInputRef} />\r\n                    <datalist></datalist>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col xs={4} md={2} className={`text-center ${classes.therapeiaButton}`}>\r\n                    {allowSave && <button type='button' onClick={submitHandler}>Αποθήκευση</button>}\r\n                </Col>\r\n                <Col xs={4} md={2} className={`text-center ${classes.therapeiaButton}`}>\r\n                    <button type='button' onClick={() => { props.setAddTherapeia(false) }}>Ακύρωση</button>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TherapeiaForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Gynaikologiko\\PregnacyListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\PatientProfile.js",["758"],"import { Container } from \"react-bootstrap\";\r\nimport ConditionsInfo from \"./ConditionsInfo/ConditionsInfo\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport VisitsList from \"./VisitsList/VisitsList\";\r\nimport classes from './PatientProfile.module.css';\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst PatientProfile = () => {\r\n    const patientContext=useContext(PatientContext);\r\n    const patientId = useParams().patientId\r\n\r\n     useEffect(()=>{\r\n        patientContext.createPatientId(patientId)\r\n    },[patientId])\r\n\r\n\r\n    return (\r\n        <Container fluid className={classes.patientProfile}>\r\n            <BasicInfo />\r\n            <ConditionsInfo/>\r\n            <VisitsList/>\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default PatientProfile;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\BasicInfo.js",["759","760","761","762","763","764"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './PatientProfile.module.css';\r\nimport profile from './profile.webp';\r\nimport { useContext, useEffect,useState } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { PatientContext } from \"../../context/patient-context\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst BasicInfo = (props) => {\r\n    const [loadedBasics, setLoadedBasics] = useState({ name: '', sirname: '', amka: '', diagnosis: '', tel: '', dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '', fathersName: '', imageName: null })\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient()\r\n\r\n\r\n    const fetchPatients = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadedBasics({ name: responseData.name, sirname: responseData.sirname, amka: responseData.amka, dateOfBirth: responseData.dateOfBirth, diagnosis: responseData.diagnosis, tel: responseData.tel, placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, fathersName: responseData.fathersName, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode,email:responseData.email });\r\n            if (!!responseData.files) {\r\n                setLoadedBasics((prevState) => {\r\n                    return { ...prevState, imageName: responseData.files.split('\\\\')[2] }\r\n                })\r\n            }\r\n          \r\n        } catch (err) { }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (patientContext.patientId !== null) {\r\n            fetchPatients()\r\n        }\r\n    }, [sendRequest, patientContext.patientId]);\r\n    \r\n\r\n\r\n    return (\r\n        <Row className={classes.basicInfo}>\r\n            <Col md={2} className='text-center'>\r\n                <div>\r\n                    <label>Όνομα:</label>\r\n                    <span>{loadedBasics.name}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Τόπος Γέννησης:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>Επάγγελμα:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>Τ.Κ:</label>\r\n                    <span></span>\r\n                </div>\r\n            </Col>\r\n            <Col md={2} className='text-center'>\r\n                <div>\r\n                    <label>Πατρώνυμο:</label>\r\n                    <span>{loadedBasics.fathersName}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Ημ/ Γεννήσης:</label>\r\n                    <span>{loadedBasics.dateOfBirth}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Οικογενειακή Κατάσταση:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>E-mail:</label>\r\n                    <span></span>\r\n                </div>\r\n            </Col>\r\n            <Col md={2} className='text-center'>\r\n                <div>\r\n                    <label>Επώνυμο:</label>\r\n                    <span>{loadedBasics.sirname}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Φύλο:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>Περιοχή:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>Τηλέφωνο:</label>\r\n                    <span></span>\r\n                </div>\r\n            </Col>\r\n            <Col md={2} className='text-center'>\r\n                <div>\r\n                    <label>ΑΜΚΑ:</label>\r\n                    <span>{loadedBasics.amka}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Οικογενειακή Κατάσταση:</label>\r\n                    <span></span>\r\n                </div>\r\n                <div>\r\n                    <label>Διεύθυνση:</label>\r\n                    <span></span>\r\n                </div>\r\n            </Col>\r\n\r\n\r\n            <Col md={3} className='text-end' xs={{ order: 'first' }} sm={{ order: 'last' }}>\r\n                <span className={classes.profileImage}>\r\n                    <img src={(!!loadedBasics.imageName)?`http://localhost:5000/uploads/images/${loadedBasics.imageName}`:profile} />\r\n                </span>\r\n\r\n            </Col>\r\n        </Row >\r\n    );\r\n}\r\n\r\nexport default BasicInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsList.js",["765","766","767","768"],"import classes from './VisitsList.module.css'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Card from '../../UI/Card';\r\nimport VisitsListHeader from './VisitsListHeader';\r\nimport VisitsListItem from './VisitsListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport moment from 'moment';\r\nimport { PatientContext } from '../../../context/patient-context';\r\n\r\n\r\nconst VisitsList = (props) => {\r\n    const [visitList, setVisitList] = useState([])\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n    const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchVisits = async () => {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/visits`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setVisitList(responseData.visitList)\r\n        }\r\n        if (!!patientContext.patientId) {\r\n            fetchVisits();\r\n        }\r\n    }, [sendRequest,patientContext.patientId])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card className={classes.visitsListCard}>\r\n                <VisitsListHeader />\r\n                {visitList.map(visit => {\r\n                    return <VisitsListItem\r\n                        visitDate={moment(visit.date).format('DD-MM-YYYY')}\r\n                        geniki_eikona={visit.geniki_eikona}\r\n                        aitia_proseleusis={visit.aitia_proseleusis}\r\n                        key={visit._id}\r\n                        id={visit._id}\r\n                    />\r\n                })}\r\n                {(visitList.length === 0) &&\r\n                    <Row>\r\n                        <Col className='text-center'>\r\n                            Η λίστα των επισκέψεων είναι άδεια.\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </Card>\r\n            <Row>\r\n                <Col className='text-end'>\r\n                    <Link to={`/patients/${patientContext.patientId}/visits/new`} style={{ textDecoration: 'none', color: 'black' }}> <button className={classes.visitButton}>Δημιουργία Επίσκεψης</button></Link>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default VisitsList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsInfo.js",["769","770","771","772"],"import classes from './ConditionsInfo.module.css'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport ConditionsNavBar from './ConditionsNavBar';\r\nimport Card from '../../UI/Card';\r\nimport { Fragment, useState } from 'react';\r\nimport Atomiko from './Atomiko/Atomiko';\r\nimport Farmaka from './Farmaka/FarmakaInfo';\r\nimport SurgeriesInfo from './Surgeries/SurgeriesInfo';\r\nimport AllergiesInfo from './AllergiesInfo/AllergiesInfo';\r\nimport KlironomikoInfo from './KlironomikoInfo/KlironomikoInfo'\r\nimport FilesInfo from './Files/FilesInfo';\r\nimport GynaikologikoInfo from './GynaikologikoInfo/GynaikologikoInfo';\r\n\r\n\r\n\r\nconst ConditionsInfo = (props) => {\r\nconst [tabIsOpen,setTabIsOpen]=useState('atomiko')\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ConditionsNavBar setTabIsOpen={setTabIsOpen} tabIsOpen={tabIsOpen}/>\r\n        {/* <Card className={classes.conditionsInfoCard}> */}\r\n            {tabIsOpen==='atomiko'&&<Atomiko/>}\r\n            {tabIsOpen==='allergies'&&<AllergiesInfo/>}\r\n            {tabIsOpen==='klironomiko'&&<KlironomikoInfo/>}\r\n            {tabIsOpen==='surgeries'&&<SurgeriesInfo/>}\r\n            {tabIsOpen==='farmaka'&&<Farmaka/>}\r\n            {tabIsOpen==='files'&&<FilesInfo/>}\r\n            {tabIsOpen==='gynaikologiko'&&<GynaikologikoInfo/>}\r\n        {/* </Card> */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ConditionsInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\ConditionsNavBar.js",["773"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './ConditionsNavBar.module.css'\r\n\r\nconst ConditionsNavBar = (props) => {\r\n   \r\n    return (\r\n        <Row className={classes.navBar}>\r\n            <button className={(props.tabIsOpen==='atomiko')?classes.activated:null} onClick={()=>{props.setTabIsOpen('atomiko')}}>Ατομικό</button>\r\n            <button className={(props.tabIsOpen==='allergies')?classes.activated:null} onClick={()=>{props.setTabIsOpen('allergies')}}>Αλλεργίες</button>\r\n            <button className={(props.tabIsOpen==='klironomiko')?classes.activated:null} onClick={()=>{props.setTabIsOpen('klironomiko')}}>Κληρονομικό</button>\r\n            <button className={(props.tabIsOpen==='surgeries')?classes.activated:null} onClick={()=>{props.setTabIsOpen('surgeries')}}> Χειρουργεία</button>\r\n            <button className={(props.tabIsOpen==='farmaka')?classes.activated:null} onClick={()=>{props.setTabIsOpen('farmaka')}}>Φάρμακα</button>\r\n            <button className={(props.tabIsOpen==='files')?classes.activated:null} onClick={()=>{props.setTabIsOpen('files')}}>Αρχεία</button>\r\n            <button className={(props.tabIsOpen==='gynaikologiko')?classes.activated:null} onClick={()=>{props.setTabIsOpen('gynaikologiko')}}> Γυναικολογικό</button>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ConditionsNavBar;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Atomiko\\Atomiko.js",["774","775","776","777","778","779","780"],"import classes from './Atomiko.module.css'\r\nimport { Container, } from 'react-bootstrap'\r\nimport ErrorModal from '../../../UI/ErrorModal'\r\nimport Conditions from '../../../Patient-Details-Pages/History/Atomiko/Conditions';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../../../context/auth-context';\r\nimport { useHttpClient } from '../../../../hooks/http-hook';\r\nimport { PatientContext } from '../../../../context/patient-context';\r\n\r\n\r\nconst Atomiko = (props) => {\r\n    const [conditionsList, setConditionsList] = useState([]);\r\n    const { sendRequest, isLoading, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setConditionsList(responseData.conditionsList)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchHistory();\r\n        }\r\n    }, [patientContext.patientId, sendRequest]);\r\n\r\n    const addConditionHandler = async (condition) => {\r\n\r\n        setConditionsList((prevState) => {\r\n            return [...prevState, condition];\r\n        })\r\n\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions`, 'POST',\r\n                JSON.stringify({\r\n                    name: condition.name,\r\n                    state: condition.state,\r\n                    dateOfDiagnosis: condition.dateOfDiagnosis,\r\n                    dateOfHealing: condition.dateOfHealing,\r\n                    _id: condition._id\r\n                })\r\n                , {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n\r\n    const removeConditionHandler = async (conditionIdToDelete) => {\r\n        setConditionsList((prevState) => {\r\n            return prevState.filter(condition => {\r\n                return condition._id !== conditionIdToDelete\r\n            })\r\n        })\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions/${conditionIdToDelete}`, 'DELETE', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n    const editConditionHandler = async (addedCondition, conditionIdtoUpdate) => {\r\n        setConditionsList(prevState => {\r\n            return prevState.map(condition => {\r\n                if (condition._id === conditionIdtoUpdate) {\r\n                    return condition = addedCondition\r\n                } else return condition = condition\r\n            })\r\n        })\r\n        console.log(addedCondition.status)\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/conditions/${conditionIdtoUpdate}`, 'PATCH',\r\n                JSON.stringify({\r\n                    status: addedCondition.status,\r\n                    dateOfDiagnosis: addedCondition.dateOfDiagnosis,\r\n                    dateOfHealing: addedCondition.dateOfHealing\r\n                })\r\n                , {\r\n                    Authorization: 'Bearer ' + auth.token,\r\n                    'Content-Type': 'application/json'\r\n                });\r\n\r\n        } catch (err) { console.log(err) }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Conditions profil conditionsList={conditionsList} setConditionsList={setConditionsList} addConditionHandler={addConditionHandler} removeConditionHandler={removeConditionHandler} editConditionHandler={editConditionHandler} />\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Atomiko;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Surgeries\\SurgeriesInfo.js",["781","782","783"],"// import classes from './Atomiko.module.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Surgeries from '../../../Patient-Details-Pages/History/Surgeries/Surgeries'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst SurgeriesInfo = (props) => {\r\n    const [surgeriesList, setSurgeriesList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Surgeries surgeriesList={surgeriesList} setSurgeriesList={setSurgeriesList} />\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default SurgeriesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Farmaka\\FarmakaInfo.js",["784","785","786","787"],"// import classes from './Atomiko.module.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Farmaka from '../../../Patient-Details-Pages/Farmaka/Farmaka'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst FarmakaInfo = (props) => {\r\n    // const [farmakaList, setFarmakaList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Farmaka  info/>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default FarmakaInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\Files\\FilesInfo.js",["788","789","790","791"],"import { Container, Row, Col } from 'react-bootstrap'\r\nimport Files from '../../../Patient-Details-Pages/NewFiles/Files'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst FilesInfo = (props) => {\r\n    // const [farmakaList, setFarmakaList] = useState([]);\r\n    return (\r\n        <Container>\r\n            <Files info/>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default FilesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\Allergies\\AllergiesLoaded.js",["792","793","794"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsFinder from \"../ConditionsFinder\";\r\nimport SmallDeleteButton from '../../../../UI/SmallDeleteButton'\r\nimport classes from './AllergiesLoaded.module.css'\r\n\r\nconst AllergiesLoaded = (props) => {\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' });\r\n    \r\n    console.log(props.allergiesList)\r\n   \r\n    \r\n    let removeHandler=(nameToDelete)=>{\r\n        console.log('out')\r\n    };\r\n    useEffect(()=>{\r\n        removeHandler=(nameToDelete)=>{\r\n            props.removeFromAllergyList(nameToDelete)\r\n            console.log('in')\r\n        }\r\n    \r\n    },[props.allergiesList,props.removeFromAllergyList])\r\n    useEffect(()=>{\r\n        if (selectedCondition.code!==''){\r\n            props.addToAllergyList(selectedCondition.code+': '+selectedCondition.condition)\r\n            setAddAllergy(false)\r\n        }\r\n    },[selectedCondition])\r\n     \r\n\r\n    return (\r\n        <Fragment>\r\n            {props.allergiesList.map((allergy) => {\r\n                return (\r\n                    <Row className={classes.loadedAllergy} key={allergy._id}>\r\n                        <Col>\r\n                            <span>\r\n                                {allergy.name}\r\n                            </span>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            <button type='button' onClick={()=>{removeHandler(allergy.name)}}>Διαγραφή</button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n             {addAllergy&&<Row className={classes.addAllergy}>\r\n                <Col  >\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} setAddAllergy={setAddAllergy}/>\r\n                </Col>\r\n                <Col xs={2}>\r\n                    <button>Ακύρωση</button>\r\n                </Col>\r\n            </Row>}\r\n            {!addAllergy&&<Row>\r\n                <Col xs={2} className={classes.addButton} >\r\n                    <button type='button' onClick={()=>{setAddAllergy(true)}}>Προσθήκη</button>\r\n                </Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n   \r\n}\r\n\r\nexport default AllergiesLoaded;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Klironomiko\\KlironomikoLoaded.js",["795","796"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ConditionsFinder from \"../Atomiko/ConditionsFinder\";\r\n\r\nimport classes from './KlironomikoLoaded.module.css'\r\n\r\nconst KlirnomikoLoaded = (props) => {\r\n    const [addAllergy, setAddAllergy] = useState(false);\r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' });\r\n    \r\n    console.log(props.allergiesList)\r\n    \r\n    \r\n    let removeHandler=(nameToDelete)=>{\r\n        console.log('out')\r\n    };\r\n    useEffect(()=>{\r\n        removeHandler=(nameToDelete)=>{\r\n            props.removeFromCleronomicalList(nameToDelete)\r\n            console.log('in')\r\n        }\r\n    \r\n    },[props.cleronomicalList,props.removeFromAllergyList])\r\n    useEffect(()=>{\r\n        if (selectedCondition.code!==''){\r\n            props.addToCleronomicalList(selectedCondition.code+': '+selectedCondition.condition)\r\n            setAddAllergy(false)\r\n        }\r\n    },[selectedCondition])\r\n     \r\n\r\n    return (\r\n        <Fragment>\r\n            {props.cleronomicalList.map((allergy) => {\r\n                return (\r\n                    <Row className={classes.loadedAllergy} key={allergy._id}>\r\n                        <Col>\r\n                            <span>\r\n                                {allergy.name}\r\n                            </span>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            <button type='button' onClick={()=>{removeHandler(allergy.name)}}>Διαγραφή</button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n             {addAllergy&&<Row className={classes.addAllergy}>\r\n                <Col  >\r\n                    <ConditionsFinder setSelectedCondition={setSelectedCondition} setAddAllergy={setAddAllergy}/>\r\n                </Col>\r\n                <Col xs={2}>\r\n                    <button>Ακύρωση</button>\r\n                </Col>\r\n            </Row>}\r\n            {!addAllergy&&<Row>\r\n                <Col xs={2} className={classes.addButton} >\r\n                    <button type='button' onClick={()=>{setAddAllergy(true)}}>Προσθήκη</button>\r\n                </Col>\r\n            </Row>}\r\n        </Fragment>\r\n    );\r\n   \r\n}\r\n\r\nexport default KlirnomikoLoaded;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\AllergiesInfo\\AllergiesInfo.js",["797","798","799","800","801","802"],"import { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport AllergiesLoaded from \"../../../Patient-Details-Pages/History/Atomiko/Allergies/AllergiesLoaded\";\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport classes from './AllergiesInfo.module.css'\r\n\r\n\r\nconst AllergiesInfo = (props) => {\r\n    const [allergiesList, setAllergiesList] = useState([])\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient()\r\n\r\n\r\n    const checkIfInList = (selectedName) => {\r\n        let res = false;\r\n        allergiesList.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToAllergyList = async (allergyName) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        setAllergiesList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n    }\r\n    const removeFromAllergyList = (allergyName) => {\r\n        setAllergiesList((prevState) => {\r\n            return prevState.filter((allergy) => {\r\n                return allergy.name !== allergyName\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAllergies = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/allergies`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                setAllergiesList(responseData.allergiesList)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchAllergies();\r\n        }\r\n    }, []);\r\n    console.log(allergiesList)\r\n    return (\r\n        <Container>\r\n            <Card className={classes.allergiesCard}>\r\n                <AllergiesLoaded allergiesList={allergiesList} removeFromAllergyList={removeFromAllergyList} addToAllergyList={addToAllergyList} />\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllergiesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\KlironomikoInfo\\KlironomikoInfo.js",["803","804","805","806","807","808"],"import { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"../../../UI/Card\";\r\nimport KlironomikoLoaded from '../../../Patient-Details-Pages/History/Klironomiko/KlironomikoLoaded';\r\nimport { AuthContext } from \"../../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../../context/patient-context\";\r\nimport { useHttpClient } from \"../../../../hooks/http-hook\";\r\nimport classes from './Klironomiko.module.css'\r\n\r\n\r\n\r\nconst AllergiesInfo = (props) => {\r\n    const [cleronomicalList, setCleronomicalList] = useState([])\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient()\r\n\r\n\r\n    const checkIfInList = (selectedName) => {\r\n        let res = false;\r\n        cleronomicalList.map(allergy => {\r\n            if (allergy.name === selectedName) {\r\n                return res = true\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const addToCleronomicalList = async (allergyName) => {\r\n        const responseData = await sendRequest(`http://localhost:5000/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        setCleronomicalList((prevState) => {\r\n\r\n            if (!checkIfInList(allergyName)) {\r\n\r\n                return [...prevState, { name: allergyName, _id: responseData }]\r\n            }\r\n            else return [...prevState];\r\n        })\r\n    }\r\n    const removeFromCleronomicalList = (allergyName) => {\r\n        setCleronomicalList((prevState) => {\r\n            return prevState.filter((allergy) => {\r\n                return allergy.name !== allergyName\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAllergies = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/klironomiko`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                console.log(responseData)\r\n                setCleronomicalList(responseData.klironomiko)\r\n            } catch (err) { }\r\n\r\n        };\r\n        if (!!patientContext.patientId) {\r\n            fetchAllergies();\r\n        }\r\n    }, [patientContext.patientId]);\r\n\r\n    return (\r\n        <Container>\r\n            <Card className={classes.allergiesCard}>\r\n                <KlironomikoLoaded cleronomicalList={cleronomicalList} removeFromCleronomicalList={removeFromCleronomicalList} addToCleronomicalList={addToCleronomicalList} />\r\n                {/* <a href={file}  target=\"_self\">mona sept</a> */}\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllergiesInfo;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListItem.js",["809","810","811","812"],"import { Row, Col } from \"react-bootstrap\";\r\nimport classes from './VisitsListItem.module.css';\r\n// import SmallDeleteButton from '../../UI/SmallDeleteButton'\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport { PatientContext } from \"../../../context/patient-context\";\r\n\r\n\r\nconst VisitsListItem = (props) => {\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const patientContext = useContext(PatientContext);\r\n\r\n    const clickHandler = async (event) => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${patientContext.patientId}/visits/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + auth.token\r\n            }\r\n            );\r\n        } catch (err) { console.log(err) }\r\n        // props.removeFarmakoHandler(props.id)\r\n    }\r\n\r\n    return (\r\n        <Row className={classes.visitsListItem}>\r\n            <Col className=\"text-center\" sm={3} md={3}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.visitDate}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={4}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.geniki_eikona}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={3}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}>{props.aitia_proseleusis}</Link></Col>\r\n            <Col className=\"text-center\" sm={4} md={2}><Link to={`/patients/${patientContext.patientId}/visits/${props.id}`} style={{ textDecoration: 'none', color: 'black' }}></Link></Col>\r\n            {/* <Col sm={2} className=\"text-center\">\r\n                <SmallDeleteButton onClick={clickHandler} />\r\n            </Col> */}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default VisitsListItem;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\VisitsList\\VisitsListHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\Ozoi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzosForm.js",["813"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiListItem.js",["814","815","816","817","818"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ViewButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Antikeimeniki\\Ozoi\\OzoiEditForm.js",["819","820","821","822"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\NewVisits\\Diagnosis\\DiagnosisEditForm.js",["823","824","825"],"import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState, useRef, useContext } from \"react\";\r\nimport SmallSaveButton from \"../../../UI/SmallSaveButton\";\r\nimport SmallDeleteButton from \"../../../UI/SmallDeleteButton\"\r\nimport moment from 'moment'\r\nimport classes from './DiagnosisForm.module.css';\r\n// import { AuthContext } from \"../../../../context/auth-context\";\r\n// import { useHttpClient } from \"../../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst DiagnosisEditForm = (props) => {\r\n   \r\n    const [selectedCondition, setSelectedCondition] = useState({ code: '', condition: '' })\r\n    const stateInputRef = useRef();\r\n\r\n    const dateOfDiagnosisInputRef = useRef();\r\n    const dateOfHealingInputRef = useRef();\r\n\r\n    const submitHandler = async (event) => {\r\n        // const responseData = await sendRequest(`http://localhost:5000/patients/630ce238394ce3043ab038c8/conditions/id`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n\r\n        let diagnosis = {\r\n            name: props.condition,\r\n            status: stateInputRef.current.value,\r\n            dateOfDiagnosis: dateOfDiagnosisInputRef.current.value,\r\n            dateOfHealing: dateOfHealingInputRef.current.value,\r\n            _id: props.id\r\n\r\n        }\r\n       \r\n        props.editDiagnosisHanlder(diagnosis,props.id);\r\n        props.setEditForm(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <Row className={classes.conditionsForm}>\r\n            <Col sm={4}>\r\n                {props.condition}\r\n            </Col>\r\n            <Col sm={2} className='text-center'>\r\n                <select ref={stateInputRef}>\r\n                    <option value='Ύφεση' selected={props.status === 'Ύφεση'}>Ύφεση</option>\r\n                    <option value='Υποτροπή' selected={props.status === 'Υποτροπή'}>Υποτροπή</option>\r\n                    <option value='Χρόνια' selected={props.status === 'Χρόνια'}>Χρόνια</option>\r\n                </select>\r\n            </Col>\r\n\r\n            <Col sm={2} className='text-center'><input type='date' ref={dateOfDiagnosisInputRef} defaultValue={(!!props.dateOfDiagnosis)&&moment(props.dateOfDiagnosis).format('YYYY-MM-DD')} /></Col>\r\n            <Col sm={2} className='text-center'><input type='date' ref={dateOfHealingInputRef} defaultValue={(!!props.dateOfHealing)&&moment(props.dateOfHealing).format('YYYY-MM-DD')}/></Col>\r\n            <Col className='text-end' sm={1}>\r\n                {!!selectedCondition && <SmallSaveButton onClick={submitHandler} />}\r\n                </Col>\r\n                <Col sm={1} className='text_-start'>\r\n                <SmallDeleteButton onClick={() => { props.setEditForm(false) }} />\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default DiagnosisEditForm;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History\\Atomiko\\ConditionEditForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\ConditionsInfo\\GynaikologikoInfo\\GynaikologikoInfo.js",["826"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Statistics.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\Biometrics.js",["827"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Profile\\Statistics\\OzoiStats.js",["828","829","830"],{"ruleId":"831","replacedBy":"832"},{"ruleId":"833","replacedBy":"834"},{"ruleId":"835","severity":1,"message":"836","line":2,"column":8,"nodeType":"837","messageId":"838","endLine":2,"endColumn":22},{"ruleId":"835","severity":1,"message":"839","line":3,"column":8,"nodeType":"837","messageId":"838","endLine":3,"endColumn":19},{"ruleId":"840","severity":1,"message":"841","line":32,"column":28,"nodeType":"837","endLine":32,"endColumn":39},{"ruleId":"840","severity":1,"message":"841","line":39,"column":25,"nodeType":"837","endLine":39,"endColumn":36},{"ruleId":"840","severity":1,"message":"841","line":46,"column":30,"nodeType":"837","endLine":46,"endColumn":41},{"ruleId":"840","severity":1,"message":"842","line":69,"column":6,"nodeType":"843","endLine":69,"endColumn":8,"suggestions":"844"},{"ruleId":"835","severity":1,"message":"845","line":3,"column":8,"nodeType":"837","messageId":"838","endLine":3,"endColumn":26},{"ruleId":"840","severity":1,"message":"846","line":66,"column":8,"nodeType":"843","endLine":66,"endColumn":28,"suggestions":"847"},{"ruleId":"835","severity":1,"message":"848","line":69,"column":14,"nodeType":"837","messageId":"838","endLine":69,"endColumn":31},{"ruleId":"835","severity":1,"message":"849","line":7,"column":12,"nodeType":"837","messageId":"838","endLine":7,"endColumn":16},{"ruleId":"835","severity":1,"message":"850","line":8,"column":12,"nodeType":"837","messageId":"838","endLine":8,"endColumn":19},{"ruleId":"835","severity":1,"message":"851","line":9,"column":12,"nodeType":"837","messageId":"838","endLine":9,"endColumn":21},{"ruleId":"835","severity":1,"message":"852","line":10,"column":12,"nodeType":"837","messageId":"838","endLine":10,"endColumn":15},{"ruleId":"835","severity":1,"message":"853","line":11,"column":12,"nodeType":"837","messageId":"838","endLine":11,"endColumn":16},{"ruleId":"835","severity":1,"message":"854","line":12,"column":11,"nodeType":"837","messageId":"838","endLine":12,"endColumn":18},{"ruleId":"835","severity":1,"message":"855","line":13,"column":14,"nodeType":"837","messageId":"838","endLine":13,"endColumn":31},{"ruleId":"835","severity":1,"message":"856","line":17,"column":14,"nodeType":"837","messageId":"838","endLine":17,"endColumn":34},{"ruleId":"835","severity":1,"message":"857","line":21,"column":14,"nodeType":"837","messageId":"838","endLine":21,"endColumn":36},{"ruleId":"835","severity":1,"message":"858","line":25,"column":14,"nodeType":"837","messageId":"838","endLine":25,"endColumn":30},{"ruleId":"835","severity":1,"message":"859","line":29,"column":14,"nodeType":"837","messageId":"838","endLine":29,"endColumn":31},{"ruleId":"835","severity":1,"message":"860","line":33,"column":14,"nodeType":"837","messageId":"838","endLine":33,"endColumn":26},{"ruleId":"835","severity":1,"message":"861","line":3,"column":8,"nodeType":"837","messageId":"838","endLine":3,"endColumn":14},{"ruleId":"835","severity":1,"message":"862","line":9,"column":8,"nodeType":"837","messageId":"838","endLine":9,"endColumn":14},{"ruleId":"835","severity":1,"message":"863","line":10,"column":8,"nodeType":"837","messageId":"838","endLine":10,"endColumn":17},{"ruleId":"835","severity":1,"message":"864","line":11,"column":8,"nodeType":"837","messageId":"838","endLine":11,"endColumn":15},{"ruleId":"835","severity":1,"message":"865","line":12,"column":8,"nodeType":"837","messageId":"838","endLine":12,"endColumn":19},{"ruleId":"835","severity":1,"message":"866","line":19,"column":20,"nodeType":"837","messageId":"838","endLine":19,"endColumn":29},{"ruleId":"835","severity":1,"message":"867","line":25,"column":27,"nodeType":"837","messageId":"838","endLine":25,"endColumn":43},{"ruleId":"835","severity":1,"message":"868","line":28,"column":11,"nodeType":"837","messageId":"838","endLine":28,"endColumn":15},{"ruleId":"835","severity":1,"message":"869","line":29,"column":32,"nodeType":"837","messageId":"838","endLine":29,"endColumn":43},{"ruleId":"835","severity":1,"message":"870","line":1,"column":20,"nodeType":"837","messageId":"838","endLine":1,"endColumn":31},{"ruleId":"835","severity":1,"message":"871","line":15,"column":8,"nodeType":"837","messageId":"838","endLine":15,"endColumn":12},{"ruleId":"835","severity":1,"message":"872","line":21,"column":21,"nodeType":"837","messageId":"838","endLine":21,"endColumn":31},{"ruleId":"835","severity":1,"message":"854","line":23,"column":11,"nodeType":"837","messageId":"838","endLine":23,"endColumn":18},{"ruleId":"835","severity":1,"message":"873","line":40,"column":37,"nodeType":"837","messageId":"838","endLine":40,"endColumn":48},{"ruleId":"840","severity":1,"message":"874","line":91,"column":8,"nodeType":"843","endLine":91,"endColumn":47,"suggestions":"875"},{"ruleId":"835","severity":1,"message":"876","line":163,"column":17,"nodeType":"837","messageId":"838","endLine":163,"endColumn":26},{"ruleId":"877","severity":1,"message":"878","line":253,"column":24,"nodeType":"879","messageId":"880","endLine":253,"endColumn":26},{"ruleId":"877","severity":1,"message":"878","line":253,"column":35,"nodeType":"879","messageId":"880","endLine":253,"endColumn":37},{"ruleId":"840","severity":1,"message":"881","line":42,"column":8,"nodeType":"843","endLine":42,"endColumn":37,"suggestions":"882"},{"ruleId":"835","severity":1,"message":"883","line":22,"column":11,"nodeType":"837","messageId":"838","endLine":22,"endColumn":28},{"ruleId":"840","severity":1,"message":"881","line":42,"column":8,"nodeType":"843","endLine":42,"endColumn":37,"suggestions":"884"},{"ruleId":"840","severity":1,"message":"885","line":35,"column":8,"nodeType":"843","endLine":35,"endColumn":21,"suggestions":"886"},{"ruleId":"835","severity":1,"message":"887","line":10,"column":21,"nodeType":"837","messageId":"838","endLine":10,"endColumn":31},{"ruleId":"840","severity":1,"message":"888","line":51,"column":8,"nodeType":"843","endLine":51,"endColumn":10,"suggestions":"889"},{"ruleId":"840","severity":1,"message":"890","line":67,"column":8,"nodeType":"843","endLine":67,"endColumn":10,"suggestions":"891"},{"ruleId":"892","severity":1,"message":"893","line":23,"column":5,"nodeType":"894","messageId":"895","endLine":39,"endColumn":6},{"ruleId":"892","severity":1,"message":"893","line":74,"column":9,"nodeType":"894","messageId":"895","endLine":91,"endColumn":10},{"ruleId":"840","severity":1,"message":"885","line":42,"column":8,"nodeType":"843","endLine":42,"endColumn":28,"suggestions":"896"},{"ruleId":"840","severity":1,"message":"885","line":48,"column":8,"nodeType":"843","endLine":48,"endColumn":21,"suggestions":"897"},{"ruleId":"835","severity":1,"message":"898","line":76,"column":15,"nodeType":"837","messageId":"838","endLine":76,"endColumn":23},{"ruleId":"835","severity":1,"message":"899","line":20,"column":12,"nodeType":"837","messageId":"838","endLine":20,"endColumn":24},{"ruleId":"835","severity":1,"message":"900","line":20,"column":26,"nodeType":"837","messageId":"838","endLine":20,"endColumn":41},{"ruleId":"835","severity":1,"message":"901","line":21,"column":12,"nodeType":"837","messageId":"838","endLine":21,"endColumn":24},{"ruleId":"835","severity":1,"message":"902","line":21,"column":26,"nodeType":"837","messageId":"838","endLine":21,"endColumn":41},{"ruleId":"840","severity":1,"message":"885","line":36,"column":8,"nodeType":"843","endLine":36,"endColumn":21,"suggestions":"903"},{"ruleId":"835","severity":1,"message":"866","line":8,"column":22,"nodeType":"837","messageId":"838","endLine":8,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":22,"column":31,"nodeType":"837","messageId":"838","endLine":22,"endColumn":41},{"ruleId":"831","replacedBy":"905"},{"ruleId":"833","replacedBy":"906"},{"ruleId":"907","severity":1,"message":"908","line":19,"column":49,"nodeType":"909","endLine":19,"endColumn":136},{"ruleId":"835","severity":1,"message":"910","line":2,"column":46,"nodeType":"837","messageId":"838","endLine":2,"endColumn":54},{"ruleId":"835","severity":1,"message":"871","line":5,"column":8,"nodeType":"837","messageId":"838","endLine":5,"endColumn":12},{"ruleId":"835","severity":1,"message":"866","line":7,"column":20,"nodeType":"837","messageId":"838","endLine":7,"endColumn":29},{"ruleId":"835","severity":1,"message":"868","line":17,"column":11,"nodeType":"837","messageId":"838","endLine":17,"endColumn":15},{"ruleId":"835","severity":1,"message":"911","line":19,"column":12,"nodeType":"837","messageId":"838","endLine":19,"endColumn":22},{"ruleId":"835","severity":1,"message":"912","line":19,"column":24,"nodeType":"837","messageId":"838","endLine":19,"endColumn":37},{"ruleId":"835","severity":1,"message":"873","line":21,"column":37,"nodeType":"837","messageId":"838","endLine":21,"endColumn":48},{"ruleId":"835","severity":1,"message":"913","line":50,"column":23,"nodeType":"837","messageId":"838","endLine":50,"endColumn":35},{"ruleId":"835","severity":1,"message":"913","line":60,"column":23,"nodeType":"837","messageId":"838","endLine":60,"endColumn":35},{"ruleId":"840","severity":1,"message":"846","line":42,"column":8,"nodeType":"843","endLine":42,"endColumn":21,"suggestions":"914"},{"ruleId":"835","severity":1,"message":"913","line":96,"column":19,"nodeType":"837","messageId":"838","endLine":96,"endColumn":31},{"ruleId":"835","severity":1,"message":"915","line":17,"column":8,"nodeType":"837","messageId":"838","endLine":17,"endColumn":21},{"ruleId":"835","severity":1,"message":"916","line":34,"column":11,"nodeType":"837","messageId":"838","endLine":34,"endColumn":19},{"ruleId":"917","severity":1,"message":"918","line":65,"column":52,"nodeType":"919","messageId":"920","endLine":65,"endColumn":54},{"ruleId":"840","severity":1,"message":"921","line":79,"column":8,"nodeType":"843","endLine":79,"endColumn":10,"suggestions":"922"},{"ruleId":"835","severity":1,"message":"923","line":15,"column":12,"nodeType":"837","messageId":"838","endLine":15,"endColumn":29},{"ruleId":"917","severity":1,"message":"924","line":33,"column":41,"nodeType":"919","messageId":"925","endLine":33,"endColumn":43},{"ruleId":"835","severity":1,"message":"923","line":15,"column":12,"nodeType":"837","messageId":"838","endLine":15,"endColumn":29},{"ruleId":"917","severity":1,"message":"924","line":33,"column":44,"nodeType":"919","messageId":"925","endLine":33,"endColumn":46},{"ruleId":"835","severity":1,"message":"926","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":19},{"ruleId":"835","severity":1,"message":"927","line":9,"column":12,"nodeType":"837","messageId":"838","endLine":9,"endColumn":25},{"ruleId":"835","severity":1,"message":"928","line":9,"column":27,"nodeType":"837","messageId":"838","endLine":9,"endColumn":43},{"ruleId":"835","severity":1,"message":"929","line":13,"column":23,"nodeType":"837","messageId":"838","endLine":13,"endColumn":35},{"ruleId":"835","severity":1,"message":"868","line":19,"column":11,"nodeType":"837","messageId":"838","endLine":19,"endColumn":15},{"ruleId":"831","replacedBy":"930"},{"ruleId":"833","replacedBy":"931"},{"ruleId":"835","severity":1,"message":"932","line":4,"column":25,"nodeType":"837","messageId":"838","endLine":4,"endColumn":31},{"ruleId":"835","severity":1,"message":"933","line":11,"column":12,"nodeType":"837","messageId":"838","endLine":11,"endColumn":22},{"ruleId":"835","severity":1,"message":"934","line":11,"column":24,"nodeType":"837","messageId":"838","endLine":11,"endColumn":37},{"ruleId":"835","severity":1,"message":"935","line":13,"column":13,"nodeType":"837","messageId":"838","endLine":13,"endColumn":22},{"ruleId":"835","severity":1,"message":"936","line":13,"column":24,"nodeType":"837","messageId":"838","endLine":13,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":13,"column":44,"nodeType":"837","messageId":"838","endLine":13,"endColumn":54},{"ruleId":"840","severity":1,"message":"937","line":27,"column":8,"nodeType":"843","endLine":27,"endColumn":10,"suggestions":"938"},{"ruleId":"835","severity":1,"message":"939","line":2,"column":10,"nodeType":"837","messageId":"838","endLine":2,"endColumn":19},{"ruleId":"835","severity":1,"message":"940","line":2,"column":21,"nodeType":"837","messageId":"838","endLine":2,"endColumn":35},{"ruleId":"835","severity":1,"message":"941","line":2,"column":37,"nodeType":"837","messageId":"838","endLine":2,"endColumn":46},{"ruleId":"835","severity":1,"message":"942","line":2,"column":48,"nodeType":"837","messageId":"838","endLine":2,"endColumn":58},{"ruleId":"943","severity":1,"message":"944","line":4,"column":1,"nodeType":"945","messageId":"946","endLine":4,"endColumn":96},{"ruleId":"831","replacedBy":"947"},{"ruleId":"833","replacedBy":"948"},{"ruleId":"835","severity":1,"message":"949","line":18,"column":26,"nodeType":"837","messageId":"838","endLine":18,"endColumn":36},{"ruleId":"835","severity":1,"message":"936","line":18,"column":38,"nodeType":"837","messageId":"838","endLine":18,"endColumn":43},{"ruleId":"835","severity":1,"message":"904","line":18,"column":45,"nodeType":"837","messageId":"838","endLine":18,"endColumn":55},{"ruleId":"840","severity":1,"message":"841","line":32,"column":26,"nodeType":"837","endLine":32,"endColumn":37},{"ruleId":"840","severity":1,"message":"950","line":45,"column":8,"nodeType":"843","endLine":45,"endColumn":34,"suggestions":"951"},{"ruleId":"835","severity":1,"message":"926","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":19},{"ruleId":"835","severity":1,"message":"952","line":20,"column":11,"nodeType":"837","messageId":"838","endLine":20,"endColumn":27},{"ruleId":"835","severity":1,"message":"953","line":9,"column":8,"nodeType":"837","messageId":"838","endLine":9,"endColumn":18},{"ruleId":"835","severity":1,"message":"936","line":16,"column":12,"nodeType":"837","messageId":"838","endLine":16,"endColumn":17},{"ruleId":"835","severity":1,"message":"904","line":16,"column":18,"nodeType":"837","messageId":"838","endLine":16,"endColumn":28},{"ruleId":"835","severity":1,"message":"935","line":16,"column":41,"nodeType":"837","messageId":"838","endLine":16,"endColumn":50},{"ruleId":"840","severity":1,"message":"841","line":21,"column":24,"nodeType":"837","endLine":21,"endColumn":35},{"ruleId":"840","severity":1,"message":"954","line":35,"column":8,"nodeType":"843","endLine":35,"endColumn":34,"suggestions":"955"},{"ruleId":"835","severity":1,"message":"936","line":12,"column":37,"nodeType":"837","messageId":"838","endLine":12,"endColumn":42},{"ruleId":"835","severity":1,"message":"904","line":12,"column":44,"nodeType":"837","messageId":"838","endLine":12,"endColumn":54},{"ruleId":"835","severity":1,"message":"913","line":19,"column":19,"nodeType":"837","messageId":"838","endLine":19,"endColumn":31},{"ruleId":"956","severity":1,"message":"957","line":35,"column":17,"nodeType":"909","messageId":"958","endLine":35,"endColumn":95,"fix":"959"},{"ruleId":"835","severity":1,"message":"960","line":9,"column":16,"nodeType":"837","messageId":"838","endLine":9,"endColumn":20},{"ruleId":"835","severity":1,"message":"936","line":16,"column":26,"nodeType":"837","messageId":"838","endLine":16,"endColumn":31},{"ruleId":"835","severity":1,"message":"961","line":37,"column":13,"nodeType":"837","messageId":"838","endLine":37,"endColumn":19},{"ruleId":"835","severity":1,"message":"962","line":3,"column":10,"nodeType":"837","messageId":"838","endLine":3,"endColumn":18},{"ruleId":"835","severity":1,"message":"960","line":11,"column":16,"nodeType":"837","messageId":"838","endLine":11,"endColumn":20},{"ruleId":"835","severity":1,"message":"936","line":20,"column":26,"nodeType":"837","messageId":"838","endLine":20,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":20,"column":33,"nodeType":"837","messageId":"838","endLine":20,"endColumn":43},{"ruleId":"835","severity":1,"message":"936","line":13,"column":24,"nodeType":"837","messageId":"838","endLine":13,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":13,"column":30,"nodeType":"837","messageId":"838","endLine":13,"endColumn":40},{"ruleId":"835","severity":1,"message":"913","line":19,"column":19,"nodeType":"837","messageId":"838","endLine":19,"endColumn":31},{"ruleId":"835","severity":1,"message":"963","line":13,"column":12,"nodeType":"837","messageId":"838","endLine":13,"endColumn":20},{"ruleId":"835","severity":1,"message":"964","line":13,"column":22,"nodeType":"837","messageId":"838","endLine":13,"endColumn":33},{"ruleId":"835","severity":1,"message":"936","line":19,"column":26,"nodeType":"837","messageId":"838","endLine":19,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":19,"column":33,"nodeType":"837","messageId":"838","endLine":19,"endColumn":43},{"ruleId":"840","severity":1,"message":"965","line":43,"column":8,"nodeType":"843","endLine":43,"endColumn":42,"suggestions":"966"},{"ruleId":"835","severity":1,"message":"963","line":12,"column":12,"nodeType":"837","messageId":"838","endLine":12,"endColumn":20},{"ruleId":"835","severity":1,"message":"964","line":12,"column":22,"nodeType":"837","messageId":"838","endLine":12,"endColumn":33},{"ruleId":"835","severity":1,"message":"967","line":13,"column":12,"nodeType":"837","messageId":"838","endLine":13,"endColumn":23},{"ruleId":"835","severity":1,"message":"936","line":17,"column":26,"nodeType":"837","messageId":"838","endLine":17,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":17,"column":33,"nodeType":"837","messageId":"838","endLine":17,"endColumn":43},{"ruleId":"840","severity":1,"message":"965","line":33,"column":8,"nodeType":"843","endLine":33,"endColumn":37,"suggestions":"968"},{"ruleId":"969","severity":1,"message":"970","line":46,"column":53,"nodeType":"919","messageId":"971","endLine":48,"endColumn":22},{"ruleId":"835","severity":1,"message":"854","line":67,"column":11,"nodeType":"837","messageId":"838","endLine":67,"endColumn":18},{"ruleId":"840","severity":1,"message":"972","line":109,"column":8,"nodeType":"843","endLine":109,"endColumn":41,"suggestions":"973"},{"ruleId":"974","severity":1,"message":"975","line":159,"column":36,"nodeType":"837","messageId":"976","endLine":159,"endColumn":40},{"ruleId":"835","severity":1,"message":"929","line":13,"column":23,"nodeType":"837","messageId":"838","endLine":13,"endColumn":35},{"ruleId":"835","severity":1,"message":"868","line":19,"column":11,"nodeType":"837","messageId":"838","endLine":19,"endColumn":15},{"ruleId":"835","severity":1,"message":"977","line":25,"column":11,"nodeType":"837","messageId":"838","endLine":25,"endColumn":28},{"ruleId":"835","severity":1,"message":"978","line":32,"column":11,"nodeType":"837","messageId":"838","endLine":32,"endColumn":25},{"ruleId":"835","severity":1,"message":"979","line":49,"column":11,"nodeType":"837","messageId":"838","endLine":49,"endColumn":24},{"ruleId":"831","replacedBy":"980"},{"ruleId":"833","replacedBy":"981"},{"ruleId":"974","severity":1,"message":"982","line":37,"column":37,"nodeType":"837","messageId":"976","endLine":37,"endColumn":46},{"ruleId":"835","severity":1,"message":"983","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":20},{"ruleId":"835","severity":1,"message":"984","line":7,"column":8,"nodeType":"837","messageId":"838","endLine":7,"endColumn":14},{"ruleId":"835","severity":1,"message":"926","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":19},{"ruleId":"835","severity":1,"message":"876","line":11,"column":11,"nodeType":"837","messageId":"838","endLine":11,"endColumn":20},{"ruleId":"835","severity":1,"message":"910","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":18},{"ruleId":"835","severity":1,"message":"926","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":19},{"ruleId":"835","severity":1,"message":"936","line":13,"column":13,"nodeType":"837","messageId":"838","endLine":13,"endColumn":18},{"ruleId":"985","severity":1,"message":"986","line":27,"column":54,"nodeType":"987","messageId":"988","endLine":27,"endColumn":56},{"ruleId":"840","severity":1,"message":"989","line":17,"column":7,"nodeType":"843","endLine":17,"endColumn":18,"suggestions":"990"},{"ruleId":"835","severity":1,"message":"991","line":8,"column":10,"nodeType":"837","messageId":"838","endLine":8,"endColumn":19},{"ruleId":"835","severity":1,"message":"935","line":14,"column":13,"nodeType":"837","messageId":"838","endLine":14,"endColumn":22},{"ruleId":"835","severity":1,"message":"936","line":14,"column":24,"nodeType":"837","messageId":"838","endLine":14,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":14,"column":31,"nodeType":"837","messageId":"838","endLine":14,"endColumn":41},{"ruleId":"840","severity":1,"message":"874","line":35,"column":8,"nodeType":"843","endLine":35,"endColumn":47,"suggestions":"992"},{"ruleId":"907","severity":1,"message":"908","line":113,"column":21,"nodeType":"909","endLine":113,"endColumn":134},{"ruleId":"835","severity":1,"message":"936","line":18,"column":13,"nodeType":"837","messageId":"838","endLine":18,"endColumn":18},{"ruleId":"835","severity":1,"message":"935","line":18,"column":20,"nodeType":"837","messageId":"838","endLine":18,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":18,"column":44,"nodeType":"837","messageId":"838","endLine":18,"endColumn":54},{"ruleId":"840","severity":1,"message":"965","line":28,"column":8,"nodeType":"843","endLine":28,"endColumn":46,"suggestions":"993"},{"ruleId":"835","severity":1,"message":"864","line":1,"column":8,"nodeType":"837","messageId":"838","endLine":1,"endColumn":15},{"ruleId":"835","severity":1,"message":"994","line":2,"column":10,"nodeType":"837","messageId":"838","endLine":2,"endColumn":13},{"ruleId":"835","severity":1,"message":"995","line":2,"column":15,"nodeType":"837","messageId":"838","endLine":2,"endColumn":18},{"ruleId":"835","severity":1,"message":"871","line":4,"column":8,"nodeType":"837","messageId":"838","endLine":4,"endColumn":12},{"ruleId":"835","severity":1,"message":"995","line":1,"column":15,"nodeType":"837","messageId":"838","endLine":1,"endColumn":18},{"ruleId":"835","severity":1,"message":"864","line":1,"column":8,"nodeType":"837","messageId":"838","endLine":1,"endColumn":15},{"ruleId":"835","severity":1,"message":"935","line":13,"column":26,"nodeType":"837","messageId":"838","endLine":13,"endColumn":35},{"ruleId":"840","severity":1,"message":"965","line":29,"column":8,"nodeType":"843","endLine":29,"endColumn":47,"suggestions":"996"},{"ruleId":"835","severity":1,"message":"913","line":38,"column":19,"nodeType":"837","messageId":"838","endLine":38,"endColumn":31},{"ruleId":"835","severity":1,"message":"913","line":62,"column":19,"nodeType":"837","messageId":"838","endLine":62,"endColumn":31},{"ruleId":"974","severity":1,"message":"997","line":73,"column":43,"nodeType":"837","messageId":"976","endLine":73,"endColumn":52},{"ruleId":"835","severity":1,"message":"913","line":78,"column":19,"nodeType":"837","messageId":"838","endLine":78,"endColumn":31},{"ruleId":"835","severity":1,"message":"994","line":2,"column":21,"nodeType":"837","messageId":"838","endLine":2,"endColumn":24},{"ruleId":"835","severity":1,"message":"995","line":2,"column":26,"nodeType":"837","messageId":"838","endLine":2,"endColumn":29},{"ruleId":"835","severity":1,"message":"866","line":4,"column":20,"nodeType":"837","messageId":"838","endLine":4,"endColumn":29},{"ruleId":"835","severity":1,"message":"994","line":2,"column":21,"nodeType":"837","messageId":"838","endLine":2,"endColumn":24},{"ruleId":"835","severity":1,"message":"995","line":2,"column":26,"nodeType":"837","messageId":"838","endLine":2,"endColumn":29},{"ruleId":"835","severity":1,"message":"962","line":4,"column":10,"nodeType":"837","messageId":"838","endLine":4,"endColumn":18},{"ruleId":"835","severity":1,"message":"866","line":4,"column":20,"nodeType":"837","messageId":"838","endLine":4,"endColumn":29},{"ruleId":"835","severity":1,"message":"994","line":1,"column":21,"nodeType":"837","messageId":"838","endLine":1,"endColumn":24},{"ruleId":"835","severity":1,"message":"995","line":1,"column":26,"nodeType":"837","messageId":"838","endLine":1,"endColumn":29},{"ruleId":"835","severity":1,"message":"962","line":3,"column":10,"nodeType":"837","messageId":"838","endLine":3,"endColumn":18},{"ruleId":"835","severity":1,"message":"866","line":3,"column":20,"nodeType":"837","messageId":"838","endLine":3,"endColumn":29},{"ruleId":"835","severity":1,"message":"998","line":4,"column":8,"nodeType":"837","messageId":"838","endLine":4,"endColumn":25},{"ruleId":"840","severity":1,"message":"999","line":18,"column":23,"nodeType":"919","endLine":21,"endColumn":10},{"ruleId":"840","severity":1,"message":"1000","line":29,"column":7,"nodeType":"843","endLine":29,"endColumn":26,"suggestions":"1001"},{"ruleId":"840","severity":1,"message":"999","line":18,"column":23,"nodeType":"919","endLine":21,"endColumn":10},{"ruleId":"840","severity":1,"message":"1000","line":29,"column":7,"nodeType":"843","endLine":29,"endColumn":26,"suggestions":"1002"},{"ruleId":"835","severity":1,"message":"910","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":18},{"ruleId":"835","severity":1,"message":"935","line":15,"column":13,"nodeType":"837","messageId":"838","endLine":15,"endColumn":22},{"ruleId":"835","severity":1,"message":"936","line":15,"column":24,"nodeType":"837","messageId":"838","endLine":15,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":15,"column":31,"nodeType":"837","messageId":"838","endLine":15,"endColumn":41},{"ruleId":"917","severity":1,"message":"924","line":20,"column":35,"nodeType":"919","messageId":"925","endLine":20,"endColumn":37},{"ruleId":"840","severity":1,"message":"1003","line":60,"column":8,"nodeType":"843","endLine":60,"endColumn":10,"suggestions":"1004"},{"ruleId":"835","severity":1,"message":"910","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":18},{"ruleId":"835","severity":1,"message":"935","line":16,"column":13,"nodeType":"837","messageId":"838","endLine":16,"endColumn":22},{"ruleId":"835","severity":1,"message":"936","line":16,"column":24,"nodeType":"837","messageId":"838","endLine":16,"endColumn":29},{"ruleId":"835","severity":1,"message":"904","line":16,"column":31,"nodeType":"837","messageId":"838","endLine":16,"endColumn":41},{"ruleId":"917","severity":1,"message":"924","line":21,"column":38,"nodeType":"919","messageId":"925","endLine":21,"endColumn":40},{"ruleId":"840","severity":1,"message":"1005","line":61,"column":8,"nodeType":"843","endLine":61,"endColumn":34,"suggestions":"1006"},{"ruleId":"835","severity":1,"message":"936","line":12,"column":26,"nodeType":"837","messageId":"838","endLine":12,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":12,"column":33,"nodeType":"837","messageId":"838","endLine":12,"endColumn":43},{"ruleId":"835","severity":1,"message":"1007","line":16,"column":11,"nodeType":"837","messageId":"838","endLine":16,"endColumn":23},{"ruleId":"835","severity":1,"message":"913","line":18,"column":19,"nodeType":"837","messageId":"838","endLine":18,"endColumn":31},{"ruleId":"835","severity":1,"message":"962","line":2,"column":10,"nodeType":"837","messageId":"838","endLine":2,"endColumn":18},{"ruleId":"835","severity":1,"message":"869","line":16,"column":13,"nodeType":"837","messageId":"838","endLine":16,"endColumn":24},{"ruleId":"835","severity":1,"message":"936","line":16,"column":26,"nodeType":"837","messageId":"838","endLine":16,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":16,"column":33,"nodeType":"837","messageId":"838","endLine":16,"endColumn":43},{"ruleId":"835","severity":1,"message":"868","line":17,"column":11,"nodeType":"837","messageId":"838","endLine":17,"endColumn":15},{"ruleId":"835","severity":1,"message":"1008","line":18,"column":11,"nodeType":"837","messageId":"838","endLine":18,"endColumn":25},{"ruleId":"835","severity":1,"message":"962","line":2,"column":10,"nodeType":"837","messageId":"838","endLine":2,"endColumn":18},{"ruleId":"835","severity":1,"message":"868","line":14,"column":11,"nodeType":"837","messageId":"838","endLine":14,"endColumn":15},{"ruleId":"835","severity":1,"message":"1008","line":15,"column":11,"nodeType":"837","messageId":"838","endLine":15,"endColumn":25},{"ruleId":"835","severity":1,"message":"869","line":16,"column":13,"nodeType":"837","messageId":"838","endLine":16,"endColumn":24},{"ruleId":"835","severity":1,"message":"926","line":1,"column":10,"nodeType":"837","messageId":"838","endLine":1,"endColumn":19},{"ruleId":"835","severity":1,"message":"983","line":2,"column":28,"nodeType":"837","messageId":"838","endLine":2,"endColumn":38},{"ruleId":"835","severity":1,"message":"1009","line":14,"column":31,"nodeType":"837","messageId":"838","endLine":14,"endColumn":51},{"ruleId":"840","severity":1,"message":"965","line":41,"column":8,"nodeType":"843","endLine":41,"endColumn":47,"suggestions":"1010"},{"ruleId":"840","severity":1,"message":"965","line":35,"column":8,"nodeType":"843","endLine":35,"endColumn":47,"suggestions":"1011"},{"ruleId":"835","severity":1,"message":"936","line":32,"column":26,"nodeType":"837","messageId":"838","endLine":32,"endColumn":31},{"ruleId":"835","severity":1,"message":"904","line":32,"column":33,"nodeType":"837","messageId":"838","endLine":32,"endColumn":43},{"ruleId":"840","severity":1,"message":"965","line":48,"column":8,"nodeType":"843","endLine":48,"endColumn":47,"suggestions":"1012"},"no-native-reassign",["1013"],"no-negated-in-lhs",["1014"],"no-unused-vars","'SideNavigation' is defined but never used.","Identifier","unusedVar","'Appointment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1015"],"'PatientsListHeader' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.",["1016"],"'addPatientHandler' is defined but never used.","'name' is assigned a value but never used.","'sirname' is assigned a value but never used.","'diagnosis' is assigned a value but never used.","'tel' is assigned a value but never used.","'amka' is assigned a value but never used.","'history' is assigned a value but never used.","'changeNameHandler' is defined but never used.","'changeSirnameHandler' is defined but never used.","'changeDiagnosisHandler' is defined but never used.","'changeTelHandler' is defined but never used.","'changeAmkaHandler' is defined but never used.","'clearHandler' is defined but never used.","'Header' is defined but never used.","'Visits' is defined but never used.","'PatientId' is defined but never used.","'classes' is defined but never used.","'VisitDetail' is defined but never used.","'useEffect' is defined but never used.","'setLoadedPatient' is assigned a value but never used.","'auth' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'useCallback' is defined but never used.","'Card' is defined but never used.","'SetLoading' is assigned a value but never used.","'setFormData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPatients'. Either include it or remove the dependency array.",["1017"],"'patientId' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'fetchVisit', 'params.labId', and 'params.type'. Either include them or remove the dependency array.",["1018"],"'visitDateInputRef' is assigned a value but never used.",["1019"],"React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["1020"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'loadVisit', and 'sendRequest'. Either include them or remove the dependency array. You can also do a functional update 'setLoadVisit(l => ...)' if you only need 'loadVisit' in the 'setLoadVisit' call.",["1021"],"React Hook useEffect has missing dependencies: 'fetchVisit' and 'params.visitId'. Either include them or remove the dependency array.",["1022"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1023"],["1024"],"'response' is assigned a value but never used.","'emailLoading' is assigned a value but never used.","'setEmailLoading' is assigned a value but never used.","'sendingEmail' is assigned a value but never used.","'setSendingEmail' is assigned a value but never used.",["1025"],"'clearError' is assigned a value but never used.",["1013"],["1014"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'loadedFile' is assigned a value but never used.","'setLoadedFile' is assigned a value but never used.","'responseData' is assigned a value but never used.",["1026"],"'Gynaikologiko' is defined but never used.","'paramsId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'auth.token', 'patientContext.anamnistikoId', 'patientContext.patientId', and 'sendRequest'. Either include them or remove the dependency array.",["1027"],"'selectedCondition' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Container' is defined but never used.","'surgeriesList' is assigned a value but never used.","'setSurgeriesList' is assigned a value but never used.","'setLoadVisit' is assigned a value but never used.",["1013"],["1014"],"'notify' is defined but never used.","'confirming' is assigned a value but never used.","'setConfirming' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth', 'sendRequest', and 'userId'. Either include them or remove the dependency array.",["1028"],"'Highlight' is defined but never used.","'RefinementList' is defined but never used.","'Configure' is defined but never used.","'Pagination' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["1013"],["1014"],"'isLoadding' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFarmaka'. Either include it or remove the dependency array.",["1029"],"'severityInputRef' is assigned a value but never used.","'SaveButton' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchFiles'. Either include it or remove the dependency array.",["1030"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1031","text":"1032"},"'uuid' is defined but never used.","'fileId' is assigned a value but never used.","'useState' is defined but never used.","'showHits' is assigned a value but never used.","'setShowHits' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["1033"],"'selectedHit' is assigned a value but never used.",["1034"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'hit'.","unsafeRefs","React Hook useEffect has missing dependencies: 'auth.token' and 'paramsId'. Either include them or remove the dependency array.",["1035"],"no-self-assign","'ozos' is assigned to itself.","selfAssignment","'diagnosisInputRef' is assigned a value but never used.","'othersInputRef' is assigned a value but never used.","'submitHandler' is assigned a value but never used.",["1013"],["1014"],"'diagnosis' is assigned to itself.","'useContext' is defined but never used.","'moment' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'patientContext'. Either include it or remove the dependency array.",["1036"],"'useParams' is defined but never used.",["1037"],["1038"],"'Row' is defined but never used.","'Col' is defined but never used.",["1039"],"'condition' is assigned to itself.","'SmallDeleteButton' is defined but never used.","Assignments to the 'removeHandler' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1040"],["1041"],"React Hook useEffect has missing dependencies: 'auth.token', 'patientContext.patientId', and 'sendRequest'. Either include them or remove the dependency array.",["1042"],"React Hook useEffect has missing dependencies: 'auth.token' and 'sendRequest'. Either include them or remove the dependency array.",["1043"],"'clickHandler' is assigned a value but never used.","'patientContext' is assigned a value but never used.","'setSelectedCondition' is assigned a value but never used.",["1044"],["1045"],["1046"],"no-global-assign","no-unsafe-negation",{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1053","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1056","fix":"1064"},{"desc":"1056","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},[1569,1569]," rel=\"noreferrer\"",{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1051","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1089","fix":"1091"},{"desc":"1087","fix":"1092"},{"desc":"1087","fix":"1093"},{"desc":"1087","fix":"1094"},{"desc":"1087","fix":"1095"},{"desc":"1087","fix":"1096"},"Update the dependencies array to be: [history]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest, state]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [sendRequest, patientContext.patientId, fetchPatients]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [props.patientId, auth.token, params.labId, params.type, fetchVisit]",{"range":"1103","text":"1104"},{"range":"1105","text":"1104"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [auth.token, loadVisit, sendRequest]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [fetchVisit, params.visitId]",{"range":"1110","text":"1111"},"Update the dependencies array to be: [sendRequest, query, props.patientId, auth.token]",{"range":"1112","text":"1113"},{"range":"1114","text":"1107"},{"range":"1115","text":"1107"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest]",{"range":"1116","text":"1117"},"Update the dependencies array to be: [auth.token, patientContext.anamnistikoId, patientContext.patientId, sendRequest]",{"range":"1118","text":"1119"},"Update the dependencies array to be: [auth, sendRequest, userId]",{"range":"1120","text":"1121"},"Update the dependencies array to be: [fetchFarmaka, patientContext.patientId]",{"range":"1122","text":"1123"},"Update the dependencies array to be: [fetchFiles, patientContext.patientId]",{"range":"1124","text":"1125"},"Update the dependencies array to be: [drugInput, sendRequest, atcInput, auth.token]",{"range":"1126","text":"1127"},"Update the dependencies array to be: [auth.token, conditionInput, sendRequest]",{"range":"1128","text":"1129"},"Update the dependencies array to be: [auth.token, paramsId, patientId, sendRequest, visitId]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [patientContext, patientId]",{"range":"1132","text":"1133"},{"range":"1134","text":"1102"},"Update the dependencies array to be: [sendRequest, patientContext.patientId, auth.token]",{"range":"1135","text":"1136"},"Update the dependencies array to be: [auth.token, patientContext.patientId, sendRequest]",{"range":"1137","text":"1138"},"Update the dependencies array to be: [props, selectedCondition]",{"range":"1139","text":"1140"},{"range":"1141","text":"1140"},{"range":"1142","text":"1138"},{"range":"1143","text":"1138"},{"range":"1144","text":"1138"},{"range":"1145","text":"1138"},{"range":"1146","text":"1138"},[2284,2286],"[history]",[2682,2702],"[auth.token, auth.userId, sendRequest, state]",[3534,3573],"[sendRequest, patientContext.patientId, fetchPatients]",[2155,2184],"[props.patientId, auth.token, params.labId, params.type, fetchVisit]",[1967,1996],[1357,1370],"[auth.token, props.patientId, sendRequest]",[2265,2267],"[auth.token, loadVisit, sendRequest]",[3168,3170],"[fetchVisit, params.visitId]",[1663,1683],"[sendRequest, query, props.patientId, auth.token]",[1647,1660],[1269,1282],[1748,1761],"[auth.token, auth.userId, sendRequest]",[3267,3269],"[auth.token, patientContext.anamnistikoId, patientContext.patientId, sendRequest]",[1029,1031],"[auth, sendRequest, userId]",[1391,1417],"[fetchFarmaka, patientContext.patientId]",[1339,1365],"[fetchFiles, patientContext.patientId]",[1595,1629],"[drugInput, sendRequest, atcInput, auth.token]",[1126,1155],"[auth.token, conditionInput, sendRequest]",[4998,5031],"[auth.token, paramsId, patientId, sendRequest, visitId]",[626,637],"[patientContext, patientId]",[1998,2037],[1215,1253],"[sendRequest, patientContext.patientId, auth.token]",[1226,1265],"[auth.token, patientContext.patientId, sendRequest]",[1027,1046],"[props, selectedCondition]",[988,1007],[2278,2280],[2304,2330],[1808,1847],[1330,1369],[1740,1779]]